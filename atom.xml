<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Coder For Art]]></title>
  <link href="http://coderforart.com/atom.xml" rel="self"/>
  <link href="http://coderforart.com/"/>
  <updated>2015-04-17T09:40:01+08:00</updated>
  <id>http://coderforart.com/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://www.coderforart.com/">CoderForArt</generator>

  
  <entry>
    <title type="html"><![CDATA[MWeb 1.3.7 发布！增加发布到 Wordpress 等支持 Metaweblog API 的服务，如：Wordpress 博客、新浪博客、cnblogs、oschina。]]></title>
    <link href="http://coderforart.com/14292279084701.html"/>
    <updated>2015-04-17T07:45:08+08:00</updated>
    <id>http://coderforart.com/14292279084701.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">MWeb 1.3.7 版的新功能</h2>

<ul>
<li>增加发布到 Wordpress 等支持 Metaweblog API 的服务，目前经测试过的有： Wordpress 博客、新浪博客、cnblogs、oschina。</li>
<li>增加发布到 Tumblr 和 Scriptogr.am </li>
<li>即时预览改进，原来会闪动，现在拿掉了同步滚动功能后不会了。</li>
<li>编辑器和三栏切换也有小改进。</li>
</ul>

<span id="more"></span><!-- more -->

<h2 id="toc_1">下边介绍一下发布到 Wordpress 等支持 Metaweblog API 的功能</h2>

<p>我所知，Mac 下支持这一功能的 Native 的 Markdown 编辑器就只有 MWeb 了。之前用过 Live Writer 的朋友都知道这功能非常好用，因为加图片非常方便！然后是离线写作，不用担心内容丢失，还可以方便地发布到多处地方。我之前用 Live Writer 时还会时不时要切到 HTML 代码下去修正一下格式问题，有点难用，现在用 Markdown 的话，就不会有这情况了。可以说：Markdown 和 Metaweblog API 才是真正的完美结合！</p>

<p>在 MWeb 中点菜单：<code>MWeb</code> - <code>Preferences</code> - <code>Publishing</code> 即可进入发布设置界面，如下：</p>

<p><img src="media/14292279084701/14292295737706.jpg" alt=""/>￼</p>

<h3 id="toc_2">增加发布到 Wordpress 的服务</h3>

<p>点 Wordpress.org 这个按钮，如下图，由于 Wordpress 的远程发布网址可以由博客网址得知，所以只需要填入博客网址、帐号、密码即可。密码是存到 Keychain，所以可无需担心。<br/>
<img src="media/14292279084701/14292301869922.jpg" alt=""/>￼</p>

<h3 id="toc_3">增加发布到 新浪博客、cnblogs、oschina 的服务</h3>

<p>点 Metaweblog API 这个按钮，如下图，必填的只有 帐号、密码、Publish URL。Publish URL 这个一般支持 Metaweblog API 的服务都会提供的。</p>

<p><img src="media/14292279084701/14292306829254.jpg" alt=""/>￼</p>

<p>下面说一下新浪博客、cnblogs、oschina 的 Publish URL。</p>

<ul>
<li>新浪博客的 Publish URL：<a href="http://upload.move.blog.sina.com.cn/blog_rebuild/blog/xmlrpc.php">http://upload.move.blog.sina.com.cn/blog_rebuild/blog/xmlrpc.php</a></li>
<li>cnblogs 的 Publish URL：<a href="http://www.cnblogs.com/Blog%E5%90%8D/services/metaweblog.aspx">http://www.cnblogs.com/Blog名/services/metaweblog.aspx</a>。其中 <strong>Blog 名</strong> 请换为您的博客名。cnblogs 的博客后台设置，拉到最下面，也可以找到这个网址。比如说我的是  <a href="http://rpc.cnblogs.com/metaweblog/OtisBlog">http://rpc.cnblogs.com/metaweblog/OtisBlog</a> 两者网址不同，但是效果一样。</li>
<li>oschina 的 Publish URL：<a href="http://my.oschina.net/action/xmlrpc">http://my.oschina.net/action/xmlrpc</a></li>
</ul>

<h3 id="toc_4">发布</h3>

<p>如下图红框处，你可以在 MWeb 分享按钮（右上角的第三个按钮）中找到所增加的发布服务。名称会显示 <code>Blog Name</code> 中设定的名称。</p>

<p><img src="media/14292279084701/14292318507812.jpg" alt=""/>￼</p>

<p>比如说我要发布到我的 Wordpress 博客，点 <code>oulvhai 的 Wordpress 博客</code>，如下图：<br/>
<img src="media/14292279084701/14292325545410.jpg" alt=""/>￼</p>

<p>要注意的时，有些博客服务是不支持上边的一些设置的，比如说 <code>Custom URL</code>、<code>Publish Date</code>、<code>Status</code> 等。设定好后，点 <code>Publish</code> 按钮就可以发布了。</p>

<p>要说明的是：Metaweblog API 有自动上传图片的功能，有看到我现在这文章的图片都是在本地的，发布时就会自动把图片上传到所发布的博客服务。所以就不用找图床了。我这文章会发布到以下五个地方：</p>

<ul>
<li>我的用 MWeb 静态网站功能生成的个人博客：<a href="http://coderforart.com">http://coderforart.com</a></li>
<li>同样用 MWeb 静态网站功能生成的 MWeb 中文官网：<a href="http://zh.mweb.im">http://zh.mweb.im</a></li>
<li>我的 Wordpress 测试博客：<a href="http://appbk.sinaapp.com/">http://appbk.sinaapp.com/</a></li>
<li>我的新浪博客：<a href="http://blog.sina.com.cn/oulvhai">http://blog.sina.com.cn/oulvhai</a></li>
<li>我在 cnblogs 的博客：<a href="http://www.cnblogs.com/OtisBlog">http://www.cnblogs.com/OtisBlog</a></li>
<li>我在 oschina 的博客：<a href="http://my.oschina.net/oulvhai">http://my.oschina.net/oulvhai</a></li>
</ul>

<h2 id="toc_5">关于 MWeb Lite</h2>

<p>MWeb Lite 的定位是 Markdown 编辑器和一些 MWeb 正式版的功能的体验。对于轻度使用 Markdown 的朋友来说， MWeb Lite 已足够了，MWeb 正式版的功能大部分用不到。MWeb Lite 的 Markdown 编辑器功能是跟 MWeb 正式版一样的。这个功能会随着 MWeb 这个产品的不断打磨而得到更好的体验。目前 MWeb Lite 对于正式版不同的地方有：</p>

<ol>
<li>文档库 MWeb Lite 限定为 10 个文档</li>
<li>发布服务只能增加 1 个。</li>
</ol>

<h2 id="toc_6">其他</h2>

<p>这里说一下用 MWeb 生成的静态博客的好处：可直接打开所生成的 HTML 文档就能预览！这个是不同于 otcpress 等静态博客生成方式的。otcpress 等生成的 HTML 直接打开预览是没办法看到效果的，必须上传或者用 otcpress 来预览。MWeb 的静态博客功能没有 otcpress 这么强大，但是对于简单只想写一下博客的朋友来说，我觉得足够了。当然，下一版也会增强静态博客功能的。</p>

<p>另外发布到 Wordpress.com、bloger、evernote 功能也是会有的，这几个要在 1.4 版发布后才会开始弄。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb 1.3 release! 50% OFF, official site, new icon, task list support, optimized MathJax support etc...]]></title>
    <link href="http://coderforart.com/mweb1.3-release.html"/>
    <updated>2015-03-28T11:13:42+08:00</updated>
    <id>http://coderforart.com/mweb1.3-release.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">Official Site</h2>

<p>Chinese: <a href="http://zh.mweb.im">http://zh.mweb.im</a><br/>
English: <a href="http://www.mweb.im">http://www.mweb.im</a></p>

<h2 id="toc_1">Featrue</h2>

<ul>
<li>Add <code>CMD+Shift+V</code> paste PNG pictrue.</li>
<li>Add sequence and flow chart support</li>
<li>Add task lists support. <code>- + space + [ ]</code>or <code>- + space + [x]</code></li>
<li>Add Markdown export.</li>
<li>Add setting Disqus Comment code support, more info: <a href="http://www.mweb.im/mweb-comment-and-share-help.html">http://www.mweb.im/mweb-comment-and-share-help.html</a></li>
<li>Optimized MathJax support and add MathJax library to local.</li>
<li>Optimized PDF export.</li>
</ul>

<p>Fixed some crash.</p>

<h2 id="toc_2">For MWeb 1.2 users</h2>

<p>Site themes updated: greyshade, octopress themes updated for support setting Comment and Share code,MathJax ,sequence and flow chart. Three variables added like below:</p>

<pre><code>{{ commentAndShareCode }}
{{ seqAndFlowChartSupport }}
{{ mathJaxSupport }}
</code></pre>

<p>Updated template pages:</p>

<ol>
<li>footer.html add <code>{{ seqAndFlowChartSupport }}</code>, <code>{{ mathJaxSupport }}</code> code, please check this link: <a href="https://github.com/oulvhai/MWeb-Themes/blob/master/greyshade/footer.html">https://github.com/oulvhai/MWeb-Themes/blob/master/greyshade/footer.html</a></li>
<li>post.html add <code>{{ commentAndShareCode }}</code> code, please check this link: <a href="https://github.com/oulvhai/MWeb-Themes/blob/master/greyshade/post.html">https://github.com/oulvhai/MWeb-Themes/blob/master/greyshade/post.html</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb 1.3 版发布！半价促销，新官网，新图标，增加任务列表，顺序图和流程图，优化MathJax、PDF导出等]]></title>
    <link href="http://coderforart.com/mweb1.3-release-zh.html"/>
    <updated>2015-03-28T10:21:20+08:00</updated>
    <id>http://coderforart.com/mweb1.3-release-zh.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">新官网</h2>

<p>中文：<a href="http://zh.mweb.im">http://zh.mweb.im</a><br/>
英文：<a href="http://www.mweb.im">http://www.mweb.im</a></p>

<h2 id="toc_1">新增：</h2>

<ul>
<li>增加 <code>CMD+Shift+V</code> 粘贴 PNG 格式图片</li>
<li>增加sequence图和flow图支持</li>
<li>增加任务列表（Task lists）支持，列表后再加<code>[ ]</code>或<code>[x]</code></li>
<li>增加把分类或文档导出为Markdown</li>
<li>现在可以直接在设置中填入Disqus、多说等评论代码了，请参考：<a href="http://zh.mweb.im/mweb-comment-and-share-help.html">http://zh.mweb.im/mweb-comment-and-share-help.html</a></li>
<li>优化MathJax支持并把MathJax库放本地以提高预览速度</li>
<li>优化PDF导出</li>
</ul>

<h2 id="toc_2">修正</h2>

<ul>
<li>图标小调整，应该顺眼了点。</li>
<li>修正了一些BUG和闪退问题</li>
</ul>

<h2 id="toc_3">1.3 以下的朋友请注意：</h2>

<p>这次更新中，greyshade、octopress 博客主题模板有变动！由于增加了可设置评论和分类、勾选支持 MathJax 和顺序图、流程图，所以增加了以下三个变量：</p>

<pre><code>{{ commentAndShareCode }}
{{ seqAndFlowChartSupport }}
{{ mathJaxSupport }}
</code></pre>

<p>greyshade、octopress 博客主题模板有更新到的页为 footer.html 和 post.html。</p>

<p>footer.html 会在 <code>{{ siteOther }}</code> 上增加 <code>{{ seqAndFlowChartSupport }}</code> 和 <code>{{ mathJaxSupport }}</code>。</p>

<p>可参考这个网址：<a href="https://github.com/oulvhai/MWeb-Themes/blob/master/greyshade/footer.html">https://github.com/oulvhai/MWeb-Themes/blob/master/greyshade/footer.html</a></p>

<p>post.html 则在要放评论和分享的地方增加 <code>{{ commentAndShareCode }}</code>。</p>

<p>可参考这个网址：<a href="https://github.com/oulvhai/MWeb-Themes/blob/master/greyshade/post.html">https://github.com/oulvhai/MWeb-Themes/blob/master/greyshade/post.html</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Markdown syntax guide and writing on MWeb]]></title>
    <link href="http://coderforart.com/markdown-syntax-guide-suggest-version.html"/>
    <updated>2014-12-16T19:08:31+08:00</updated>
    <id>http://coderforart.com/markdown-syntax-guide-suggest-version.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">Philosophy</h2>

<blockquote>
<p>Markdown is intended to be as easy-to-read and easy-to-write as is feasible.<br/>
Readability, however, is emphasized above all else. A Markdown-formatted document should be publishable as-is, as plain text, without looking like it&#39;s been marked up with tags or formatting instructions.<br/>
Markdown&#39;s syntax is intended for one purpose: to be used as a format for <em>writing</em> for the web.</p>
</blockquote>

<span id="more"></span><!-- more -->

<h2 id="toc_1">Notice</h2>

<p>You can use  <code>CMD + R</code> to preview the result.</p>

<h2 id="toc_2">Headers</h2>

<p><strong>Example:</strong></p>

<pre><code># This is an `&lt;h1&gt;` tag
## This is an `&lt;h2&gt;` tag
###### This is an `&lt;h6&gt;` tag
</code></pre>

<p><strong>Result:</strong></p>

<h1 id="toc_3">This is an <code>&lt;h1&gt;</code> tag</h1>

<h2 id="toc_4">This is an <code>&lt;h2&gt;</code> tag</h2>

<h6 id="toc_5">This is an <code>&lt;h6&gt;</code> tag</h6>

<h2 id="toc_6">Emphasis</h2>

<p><strong>Example:</strong></p>

<pre><code>*This text will be italic*
_This will also be italic_

**This text will be bold**
__This will also be bold__

*You **can** combine them*
</code></pre>

<p><strong>Shortcuts:</strong>  <code>CMD + U</code>、<code>CMD + I</code>、<code>CMD + B</code><br/>
<strong>Result:</strong></p>

<p><em>This text will be italic</em><br/>
<u>This will also be italic</u></p>

<p><strong>This text will be bold</strong><br/>
<strong>This will also be bold</strong></p>

<p>*You <strong>can</strong> combine them*</p>

<h2 id="toc_7">Newlines</h2>

<p>End a line with two or more spaces + enter.<br/>
Just typing enter to newline,please set：<code>Preferences</code> - <code>Themes</code> - <code>Translate newlines to &lt;br&gt; tags</code>  enable ( default is enable )</p>

<h2 id="toc_8">Lists</h2>

<h3 id="toc_9">Unordered</h3>

<p><strong>Example:</strong></p>

<pre><code>* Item 1 unordered list `* + SPACE`
* Item 2
    * Item 2a unordered list `* + TAB + SPACE`
    * Item 2b
</code></pre>

<p><strong>Shortcuts:</strong>  <code>Option + U</code><br/>
<strong>Result:</strong></p>

<ul>
<li>Item 1 unordered list <code>* + SPACE</code></li>
<li>Item 2

<ul>
<li>Item 2a unordered list <code>* + TAB + SPACE</code></li>
<li>Item 2b</li>
</ul></li>
</ul>

<h3 id="toc_10">Ordered</h3>

<p><strong>Example:</strong></p>

<pre><code>1. Item 1 ordered list `Number + . + SPACE`
2. Item 2 
3. Item 3
    1. Item 3a ordered list `Number + . + TAB + SPACE`
    2. Item 3b
</code></pre>

<p><strong>Result:</strong></p>

<ol>
<li>Item 1 ordered list <code>Number + . + SPACE</code></li>
<li>Item 2 </li>
<li>Item 3

<ol>
<li>Item 3a ordered list <code>Number + . + TAB + SPACE</code></li>
<li>Item 3b</li>
</ol></li>
</ol>

<h3 id="toc_11">Task lists</h3>

<p><strong>Example:</strong></p>

<pre><code>- [ ] task one not finish `- + SPACE + [ ]`
- [x] task two finished `- + SPACE + [x]`
</code></pre>

<p><strong>Result:</strong></p>

<ul>
<li class="task-list-item"><input type="checkbox" /> task one not finish <code>- + SPACE + [ ]</code>
</li>
<li class="task-list-item"><input type="checkbox" checked /> task two finished <code>- + SPACE + [x]</code>
</li>
</ul>

<h2 id="toc_12">Images</h2>

<p><strong>Example:</strong></p>

<pre><code>![GitHub set up](https://help.github.com/assets/images/site/set-up-git.gif)
Format: ![Alt Text](url)
</code></pre>

<p><strong>Shortcuts:</strong>  <code>Control + Shift + I</code><br/>
The Library&#39;s document support drag &amp; drop or <code>CMD + V</code> paste or <code>CMD + Option + I</code> to insert  the pictrue.<br/>
<strong>Result:</strong></p>

<p><img src="https://help.github.com/assets/images/site/set-up-git.gif" alt="GitHub set up"/></p>

<h2 id="toc_13">Links</h2>

<p><strong>Example:</strong></p>

<pre><code>email &lt;example@example.com&gt;
[GitHub](http://github.com)
autolink  &lt;http://www.github.com/&gt;
</code></pre>

<p><strong>Shortcuts:</strong>  <code>Control + Shift + L</code><br/>
The Library&#39;s document support drag &amp; drop or <code>CMD + Option + I</code> to insert attachment.<br/>
<strong>Result:</strong></p>

<p>An email <a href="mailto:example@example.com">example@example.com</a> link.<br/>
<a href="http://github.com">GitHub</a><br/>
Automatic linking for URLs<br/>
Any URL (like <a href="http://www.github.com/">http://www.github.com/</a>) will be automatically converted into a clickable link.</p>

<h2 id="toc_14">Blockquotes</h2>

<p><strong>Example:</strong></p>

<pre><code>As Kanye West said:
&gt; We&#39;re living the future so
&gt; the present is our past.
</code></pre>

<p><strong>Shortcuts:</strong>  <code>Control + B</code><br/>
<strong>Result:</strong></p>

<p>As Kanye West said:</p>

<blockquote>
<p>We&#39;re living the future so<br/>
the present is our past.</p>
</blockquote>

<h2 id="toc_15">Inline code</h2>

<p><strong>Example:</strong></p>

<pre><code>I think you should use an
`&lt;addr&gt;` `code` element here instead.
</code></pre>

<p><strong>Shortcuts:</strong>  <code>CMD + K</code><br/>
<strong>Result:</strong></p>

<p>I think you should use an<br/>
<code>&lt;addr&gt;</code> <code>code</code> element here instead.</p>

<h2 id="toc_16">Multi-line code</h2>

<p><strong>Example:</strong></p>

<pre><code>```js
function fancyAlert(arg) {
  if(arg) {
    $.facebox({div:&#39;#foo&#39;})
  }

}
```
</code></pre>

<p><strong>Shortcuts:</strong>  <code>CMD + Shift + K</code><br/>
<strong>Result:</strong></p>

<pre><code class="language-js">function fancyAlert(arg) {
  if(arg) {
    $.facebox({div:&#39;#foo&#39;})
  }

}
</code></pre>

<h2 id="toc_17">Sequence and Flow chart</h2>

<p><strong>Example:</strong></p>

<pre><code>```sequence
张三-&gt;李四: 嘿，小四儿, 写博客了没?
Note right of 李四: 李四愣了一下，说：
李四--&gt;张三: 忙得吐血，哪有时间写。
```

```flow
st=&gt;start: 开始
e=&gt;end: 结束
op=&gt;operation: 我的操作
cond=&gt;condition: 确认？

st-&gt;op-&gt;cond
cond(yes)-&gt;e
cond(no)-&gt;op
```
</code></pre>

<p><strong>Result:</strong> ( Please enable  <code>Preferences</code> - <code>Themes</code> - <code>Enable sequence &amp; flow chart</code>, default is enable. )</p>

<pre><code class="language-sequence">张三-&gt;李四: 嘿，小四儿, 写博客了没?
Note right of 李四: 李四愣了一下，说：
李四--&gt;张三: 忙得吐血，哪有时间写。
</code></pre>

<pre><code class="language-flow">st=&gt;start: 开始
e=&gt;end: 结束
op=&gt;operation: 我的操作
cond=&gt;condition: 确认？

st-&gt;op-&gt;cond
cond(yes)-&gt;e
cond(no)-&gt;op
</code></pre>

<p>More info: <a href="http://bramp.github.io/js-sequence-diagrams/">http://bramp.github.io/js-sequence-diagrams/</a>, <a href="http://adrai.github.io/flowchart.js/">http://adrai.github.io/flowchart.js/</a></p>

<h2 id="toc_18">Tables</h2>

<p><strong>Example:</strong></p>

<pre><code>First Header | Second Header
------------ | -------------
Content from cell 1 | Content from cell 2
Content in the first column | Content in the second column
</code></pre>

<p>You can create tables by assembling a list of words and dividing them with hyphens - (for the first row), and then separating each column with a pipe |:</p>

<p><strong>Result:</strong></p>

<table>
<thead>
<tr>
<th>First Header</th>
<th>Second Header</th>
</tr>
</thead>

<tbody>
<tr>
<td>Content from cell 1</td>
<td>Content from cell 2</td>
</tr>
<tr>
<td>Content in the first column</td>
<td>Content in the second column</td>
</tr>
</tbody>
</table>

<h2 id="toc_19">Strikethrough</h2>

<p><strong>Example:</strong></p>

<pre><code> (like ~~this~~)
</code></pre>

<p><strong>Result:</strong></p>

<p>Any word wrapped with two tildes (like <del>this</del>) will appear crossed out.</p>

<h2 id="toc_20">Horizontal Rules</h2>

<p>Following lines will produce a horizontal rule:</p>

<pre><code>***

*****

- - -
</code></pre>

<p><strong>Result:</strong></p>

<hr/>

<hr/>

<hr/>

<h2 id="toc_21">MathJax</h2>

<p>Use double US dollors sign pair for Block level Math formula, and one US dollor sign pair for Inline Level.</p>

<pre><code>For example this is a Block level $$x = {-b \pm \sqrt{b^2-4ac} \over 2a}$$ formula, and this is an inline Level $x = {-b \pm \sqrt{b^2-4ac} \over 2a}$ formula.

\\[ \frac{1}{\Bigl(\sqrt{\phi \sqrt{5}}-\phi\Bigr) e^{\frac25 \pi}} =
1+\frac{e^{-2\pi}} {1+\frac{e^{-4\pi}} {1+\frac{e^{-6\pi}}
{1+\frac{e^{-8\pi}} {1+\ldots} } } } \\]

</code></pre>

<p><strong>Result:</strong></p>

<p>For example this is a Block level \[x = {-b \pm \sqrt{b^2-4ac} \over 2a}\] formula, and this is an inline Level \(x = {-b \pm \sqrt{b^2-4ac} \over 2a}\) formula.</p>

<p>\[ \frac{1}{\Bigl(\sqrt{\phi \sqrt{5}}-\phi\Bigr) e^{\frac25 \pi}} =<br/>
1+\frac{e^{-2\pi}} {1+\frac{e^{-4\pi}} {1+\frac{e^{-6\pi}}<br/>
{1+\frac{e^{-8\pi}} {1+\ldots} } } } \]</p>

<h2 id="toc_22">Footnote</h2>

<p><strong>Example:</strong></p>

<pre><code>This is a footnote:[^sample_footnote]
</code></pre>

<p><strong>Result:</strong></p>

<p>This is a footnote:<sup id="fnref1"><a href="#fn1" rel="footnote">1</a></sup></p>

<h2 id="toc_23">Comment And Read More..</h2>

<!-- comment -->

<!-- more -->

<p>Actions-&gt;Insert Read More Comment <em>OR</em> <code>CMD + .</code></p>

<h2 id="toc_24">TOC</h2>

<p><strong>Example:</strong></p>

<pre><code>[TOC]
</code></pre>

<p><strong>Result:</strong></p>

<ul>
<li>
<a href="#toc_0">Philosophy</a>
</li>
<li>
<a href="#toc_1">Notice</a>
</li>
<li>
<a href="#toc_2">Headers</a>
</li>
</ul>
</li>
<li>
<a href="#toc_3">This is an <code>&lt;h1&gt;</code> tag</a>
<ul>
<li>
<a href="#toc_4">This is an <code>&lt;h2&gt;</code> tag</a>
<ul>
<li>
<ul>
<li>
<ul>
<li>
<ul>
<li>
<a href="#toc_5">This is an <code>&lt;h6&gt;</code> tag</a>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>
<a href="#toc_6">Emphasis</a>
</li>
<li>
<a href="#toc_7">Newlines</a>
</li>
<li>
<a href="#toc_8">Lists</a>
<ul>
<li>
<a href="#toc_9">Unordered</a>
</li>
<li>
<a href="#toc_10">Ordered</a>
</li>
<li>
<a href="#toc_11">Task lists</a>
</li>
</ul>
</li>
<li>
<a href="#toc_12">Images</a>
</li>
<li>
<a href="#toc_13">Links</a>
</li>
<li>
<a href="#toc_14">Blockquotes</a>
</li>
<li>
<a href="#toc_15">Inline code</a>
</li>
<li>
<a href="#toc_16">Multi-line code</a>
</li>
<li>
<a href="#toc_17">Sequence and Flow chart</a>
</li>
<li>
<a href="#toc_18">Tables</a>
</li>
<li>
<a href="#toc_19">Strikethrough</a>
</li>
<li>
<a href="#toc_20">Horizontal Rules</a>
</li>
<li>
<a href="#toc_21">MathJax</a>
</li>
<li>
<a href="#toc_22">Footnote</a>
</li>
<li>
<a href="#toc_23">Comment And Read More..</a>
</li>
<li>
<a href="#toc_24">TOC</a>
</li>
</ul>


<script src="asset/flow-sequence-chart/raphael-min.js"></script><script src="asset/flow-sequence-chart/underscore-min.js"></script><script src="asset/flow-sequence-chart/flowchart.min.js"></script><script src="asset/flow-sequence-chart/sequence-diagram-min.js"></script><script type="text/javascript">$(function(){    var mwebii=0;    var mwebChartEleId = 'mweb-chart-ele-';    $('pre>code').each(function(){        mwebii++;        var eleiid = mwebChartEleId+mwebii;        if($(this).hasClass('language-sequence')){            var ele = $(this).addClass('nohighlight').parent();            $('<div id="'+eleiid+'"><div>').insertAfter(ele);            ele.hide();            var diagram = Diagram.parse($(this).text());            diagram.drawSVG(eleiid,{theme: 'simple'});        }else if($(this).hasClass('language-flow')){            var ele = $(this).addClass('nohighlight').parent();            $('<div id="'+eleiid+'"><div>').insertAfter(ele);            ele.hide();            var diagram = flowchart.parse($(this).text());            diagram.drawSVG(eleiid);        }    });});</script>
<script type="text/x-mathjax-config">if (typeof MathJaxListener !== 'undefined') { MathJax.Hub.Register.StartupHook('End', function () { MathJaxListener.invokeCallbackForKey_('End'); }); } </script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>

<div class="footnotes">
<hr/>
<ol>

<li id="fn1">
<p>footnote text detail...&nbsp;<a href="#fnref1" rev="footnote">&#8617;</a></p>
</li>

</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Markdown 语法和 MWeb 写作使用说明]]></title>
    <link href="http://coderforart.com/markdown-syntax-guide-suggest-version-zh.html"/>
    <updated>2014-12-16T21:57:10+08:00</updated>
    <id>http://coderforart.com/markdown-syntax-guide-suggest-version-zh.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">Markdown 的设计哲学</h2>

<blockquote>
<p>Markdown 的目標是實現「易讀易寫」。<br/>
不過最需要強調的便是它的可讀性。一份使用 Markdown 格式撰寫的文件應該可以直接以純文字發佈，並且看起來不會像是由許多標籤或是格式指令所構成。<br/>
Markdown 的語法有個主要的目的：用來作為一種網路內容的<em>寫作</em>用語言。</p>
</blockquote>

<span id="more"></span><!-- more -->

<h2 id="toc_1">本文约定</h2>

<p>如果有写 <code>效果如下：</code>， 在 MWeb 编辑状态下只有用 <code>CMD + R</code> 预览才可以看效果。</p>

<h2 id="toc_2">标题</h2>

<p>Markdown 语法：</p>

<pre><code># 第一级标题 `&lt;h1&gt;` 
## 第二级标题 `&lt;h2&gt;` 
###### 第六级标题 `&lt;h6&gt;` 
</code></pre>

<p>效果如下：</p>

<h1 id="toc_3">第一级标题 <code>&lt;h1&gt;</code></h1>

<h2 id="toc_4">第二级标题 <code>&lt;h2&gt;</code></h2>

<h6 id="toc_5">第六级标题 <code>&lt;h6&gt;</code></h6>

<h2 id="toc_6">强调</h2>

<p>Markdown 语法：</p>

<pre><code>*这些文字会生成`&lt;em&gt;`*
_这些文字会生成`&lt;u&gt;`_

**这些文字会生成`&lt;strong&gt;`**
__这些文字会生成`&lt;strong&gt;`__
</code></pre>

<p>在 MWeb 中的快捷键为： <code>CMD + U</code>、<code>CMD + I</code>、<code>CMD + B</code><br/>
效果如下：</p>

<p><em>这些文字会生成<code>&lt;em&gt;</code></em><br/>
<u>这些文字会生成<code>&lt;u&gt;</code></u></p>

<p><strong>这些文字会生成<code>&lt;strong&gt;</code></strong><br/>
<strong>这些文字会生成<code>&lt;strong&gt;</code></strong></p>

<h2 id="toc_7">换行</h2>

<p>四个及以上空格加回车。<br/>
如果不想打这么多空格，只要回车就为换行，请勾选：<code>Preferences</code> - <code>Themes</code> - <code>Translate newlines to &lt;br&gt; tags</code></p>

<h2 id="toc_8">列表</h2>

<h3 id="toc_9">无序列表</h3>

<p>Markdown 语法：</p>

<pre><code>* 项目一 无序列表 `* + 空格键`
* 项目二
    * 项目二的子项目一 无序列表 `* + TAB + 空格键`
    * 项目二的子项目二
</code></pre>

<p>在 MWeb 中的快捷键为： <code>Option + U</code><br/>
效果如下：</p>

<ul>
<li>项目一 无序列表 <code>* + 空格键</code></li>
<li>项目二

<ul>
<li>项目二的子项目一 无序列表 <code>* + TAB + 空格键</code></li>
<li>项目二的子项目二</li>
</ul></li>
</ul>

<h3 id="toc_10">有序列表</h3>

<p>Markdown 语法：</p>

<pre><code>1. 项目一 有序列表 `数字 + . + 空格键`
2. 项目二 
3. 项目三
    1. 项目三的子项目一 有序列表 `数字 + . + TAB + 空格键`
    2. 项目三的子项目二
</code></pre>

<p>效果如下：</p>

<ol>
<li>项目一 有序列表 <code>数字 + . + 空格键</code></li>
<li>项目二 </li>
<li>项目三

<ol>
<li>项目三的子项目一 有序列表 <code>数字 + . + TAB + 空格键</code></li>
<li>项目三的子项目二</li>
</ol></li>
</ol>

<h3 id="toc_11">任务列表（Task lists）</h3>

<p>Markdown 语法：</p>

<pre><code>- [ ] 任务一 未做任务 `- + 空格 + [ ]`
- [x] 任务二 已做任务 `- + 空格 + [x]`
</code></pre>

<p>效果如下：</p>

<ul>
<li class="task-list-item"><input type="checkbox" /> 任务一 未做任务 <code>- + 空格 + [ ]</code>
</li>
<li class="task-list-item"><input type="checkbox" checked /> 任务二 已做任务 <code>- + 空格 + [x]</code>
</li>
</ul>

<h2 id="toc_12">图片</h2>

<p>Markdown 语法：</p>

<pre><code>![GitHub set up](http://zh.mweb.im/asset/img/set-up-git.gif)
格式: ![Alt Text](url)
</code></pre>

<p><code>Control + Shift + I</code> 可插入Markdown语法。<br/>
如果是 MWeb 的文档库中的文档，还可以用拖放图片、<code>CMD + V</code> 粘贴、<code>CMD + Option + I</code> 导入这三种方式来增加图片。<br/>
效果如下：</p>

<p><img src="http://zh.mweb.im/asset/img/set-up-git.gif" alt="GitHub set up"/></p>

<h2 id="toc_13">链接</h2>

<p>Markdown 语法：</p>

<pre><code>email &lt;example@example.com&gt;
[GitHub](http://github.com)
自动生成连接  &lt;http://www.github.com/&gt;
</code></pre>

<p><code>Control + Shift + L</code> 可插入Markdown语法。<br/>
如果是 MWeb 的文档库中的文档，拖放或<code>CMD + Option + I</code> 导入非图片时，会生成连接。<br/>
效果如下：</p>

<p>Email 连接： <a href="mailto:example@example.com">example@example.com</a><br/>
<a href="http://github.com">连接标题Github网站</a><br/>
自动生成连接像： <a href="http://www.github.com/">http://www.github.com/</a> 这样</p>

<h2 id="toc_14">区块引用</h2>

<p>Markdown 语法：</p>

<pre><code>某某说:
&gt; 第一行引用
&gt; 第二行费用文字
</code></pre>

<p><code>Control + B</code> 可插入Markdown语法。<br/>
效果如下：</p>

<p>某某说:</p>

<blockquote>
<p>第一行引用<br/>
第二行费用文字</p>
</blockquote>

<h2 id="toc_15">行内代码</h2>

<p>Markdown 语法：</p>

<pre><code>像这样即可：`&lt;addr&gt;` `code`
</code></pre>

<p><code>CMD + K</code> 可插入Markdown语法。<br/>
效果如下：</p>

<p>像这样即可：<code>&lt;addr&gt;</code> <code>code</code></p>

<h2 id="toc_16">多行或者一段代码</h2>

<p>Markdown 语法：</p>

<pre><code>```js
function fancyAlert(arg) {
  if(arg) {
    $.facebox({div:&#39;#foo&#39;})
  }

}
```
</code></pre>

<p><code>CMD + Shift + K</code> 可插入Markdown语法。<br/>
效果如下：</p>

<pre><code class="language-js">function fancyAlert(arg) {
    if(arg) {
        $.facebox({div:&#39;#foo&#39;})
    }

}
</code></pre>

<h2 id="toc_17">顺序图或流程图</h2>

<p>Markdown 语法：</p>

<pre><code>```sequence
张三-&gt;李四: 嘿，小四儿, 写博客了没?
Note right of 李四: 李四愣了一下，说：
李四--&gt;张三: 忙得吐血，哪有时间写。
```

```flow
st=&gt;start: 开始
e=&gt;end: 结束
op=&gt;operation: 我的操作
cond=&gt;condition: 确认？

st-&gt;op-&gt;cond
cond(yes)-&gt;e
cond(no)-&gt;op
```
</code></pre>

<p>效果如下（ <code>Preferences</code> - <code>Themes</code> - <code>Enable sequence &amp; flow chart</code> 才会看到效果 ）：</p>

<pre><code class="language-sequence">张三-&gt;李四: 嘿，小四儿, 写博客了没?
Note right of 李四: 李四愣了一下，说：
李四--&gt;张三: 忙得吐血，哪有时间写。
</code></pre>

<pre><code class="language-flow">st=&gt;start: 开始
e=&gt;end: 结束
op=&gt;operation: 我的操作
cond=&gt;condition: 确认？

st-&gt;op-&gt;cond
cond(yes)-&gt;e
cond(no)-&gt;op
</code></pre>

<p>更多请参考：<a href="http://bramp.github.io/js-sequence-diagrams/">http://bramp.github.io/js-sequence-diagrams/</a>, <a href="http://adrai.github.io/flowchart.js/">http://adrai.github.io/flowchart.js/</a></p>

<h2 id="toc_18">表格</h2>

<p>Markdown 语法：</p>

<pre><code>第一格表头 | 第二格表头
--------- | -------------
内容单元格 第一列第一格 | 内容单元格第二列第一格
内容单元格 第一列第二格 多加文字 | 内容单元格第二列第二格
</code></pre>

<p>效果如下：</p>

<table>
<thead>
<tr>
<th>第一格表头</th>
<th>第二格表头</th>
</tr>
</thead>

<tbody>
<tr>
<td>内容单元格 第一列第一格</td>
<td>内容单元格第二列第一格</td>
</tr>
<tr>
<td>内容单元格 第一列第二格 多加文字</td>
<td>内容单元格第二列第二格</td>
</tr>
</tbody>
</table>

<h2 id="toc_19">删除线</h2>

<p>Markdown 语法：</p>

<pre><code>加删除线像这样用： ~~删除这些~~
</code></pre>

<p>效果如下：</p>

<p>加删除线像这样用： <del>删除这些</del></p>

<h2 id="toc_20">分隔线</h2>

<p>以下三种方式都可以生成分隔线：</p>

<pre><code>***

*****

- - -
</code></pre>

<p>效果如下：</p>

<hr/>

<hr/>

<hr/>

<h2 id="toc_21">MathJax</h2>

<p>Markdown 语法：</p>

<pre><code>块级公式：
$$  x = \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a} $$

\\[ \frac{1}{\Bigl(\sqrt{\phi \sqrt{5}}-\phi\Bigr) e^{\frac25 \pi}} =
1+\frac{e^{-2\pi}} {1+\frac{e^{-4\pi}} {1+\frac{e^{-6\pi}}
{1+\frac{e^{-8\pi}} {1+\ldots} } } } \\]

行内公式： $\Gamma(n) = (n-1)!\quad\forall n\in\mathbb N$
</code></pre>

<p>效果如下（<code>Preferences</code> - <code>Themes</code> - <code>Enable MathJax</code> 才会看到效果）：</p>

<p>块级公式：<br/>
\[  x = \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a} \]</p>

<p>\[ \frac{1}{\Bigl(\sqrt{\phi \sqrt{5}}-\phi\Bigr) e^{\frac25 \pi}} =<br/>
1+\frac{e^{-2\pi}} {1+\frac{e^{-4\pi}} {1+\frac{e^{-6\pi}}<br/>
{1+\frac{e^{-8\pi}} {1+\ldots} } } } \]</p>

<p>行内公式： \(\Gamma(n) = (n-1)!\quad\forall n\in\mathbb N\)</p>

<h2 id="toc_22">脚注（Footnote）</h2>

<p>Markdown 语法：</p>

<pre><code>这是一个脚注：[^sample_footnote]
</code></pre>

<p>效果如下：</p>

<p>这是一个脚注：<sup id="fnref1"><a href="#fn1" rel="footnote">1</a></sup></p>

<h2 id="toc_23">注释和阅读更多</h2>

<!-- comment -->

<!-- more -->

<p>Actions-&gt;Insert Read More Comment <em>或者</em> <code>Command + .</code><br/>
<strong>注</strong> 阅读更多的功能只用在生成网站或博客时。</p>

<h2 id="toc_24">TOC</h2>

<p>Markdown 语法：</p>

<pre><code>[TOC]
</code></pre>

<p>效果如下：</p>

<ul>
<li>
<a href="#toc_0">Markdown 的设计哲学</a>
</li>
<li>
<a href="#toc_1">本文约定</a>
</li>
<li>
<a href="#toc_2">标题</a>
</li>
</ul>
</li>
<li>
<a href="#toc_3">第一级标题 <code>&lt;h1&gt;</code></a>
<ul>
<li>
<a href="#toc_4">第二级标题 <code>&lt;h2&gt;</code></a>
<ul>
<li>
<ul>
<li>
<ul>
<li>
<ul>
<li>
<a href="#toc_5">第六级标题 <code>&lt;h6&gt;</code></a>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>
<a href="#toc_6">强调</a>
</li>
<li>
<a href="#toc_7">换行</a>
</li>
<li>
<a href="#toc_8">列表</a>
<ul>
<li>
<a href="#toc_9">无序列表</a>
</li>
<li>
<a href="#toc_10">有序列表</a>
</li>
<li>
<a href="#toc_11">任务列表（Task lists）</a>
</li>
</ul>
</li>
<li>
<a href="#toc_12">图片</a>
</li>
<li>
<a href="#toc_13">链接</a>
</li>
<li>
<a href="#toc_14">区块引用</a>
</li>
<li>
<a href="#toc_15">行内代码</a>
</li>
<li>
<a href="#toc_16">多行或者一段代码</a>
</li>
<li>
<a href="#toc_17">顺序图或流程图</a>
</li>
<li>
<a href="#toc_18">表格</a>
</li>
<li>
<a href="#toc_19">删除线</a>
</li>
<li>
<a href="#toc_20">分隔线</a>
</li>
<li>
<a href="#toc_21">MathJax</a>
</li>
<li>
<a href="#toc_22">脚注（Footnote）</a>
</li>
<li>
<a href="#toc_23">注释和阅读更多</a>
</li>
<li>
<a href="#toc_24">TOC</a>
</li>
</ul>


<script src="asset/flow-sequence-chart/raphael-min.js"></script><script src="asset/flow-sequence-chart/underscore-min.js"></script><script src="asset/flow-sequence-chart/flowchart.min.js"></script><script src="asset/flow-sequence-chart/sequence-diagram-min.js"></script><script type="text/javascript">$(function(){    var mwebii=0;    var mwebChartEleId = 'mweb-chart-ele-';    $('pre>code').each(function(){        mwebii++;        var eleiid = mwebChartEleId+mwebii;        if($(this).hasClass('language-sequence')){            var ele = $(this).addClass('nohighlight').parent();            $('<div id="'+eleiid+'"><div>').insertAfter(ele);            ele.hide();            var diagram = Diagram.parse($(this).text());            diagram.drawSVG(eleiid,{theme: 'simple'});        }else if($(this).hasClass('language-flow')){            var ele = $(this).addClass('nohighlight').parent();            $('<div id="'+eleiid+'"><div>').insertAfter(ele);            ele.hide();            var diagram = flowchart.parse($(this).text());            diagram.drawSVG(eleiid);        }    });});</script>
<script type="text/x-mathjax-config">if (typeof MathJaxListener !== 'undefined') { MathJax.Hub.Register.StartupHook('End', function () { MathJaxListener.invokeCallbackForKey_('End'); }); } </script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>

<div class="footnotes">
<hr/>
<ol>

<li id="fn1">
<p>这里是脚注信息&nbsp;<a href="#fnref1" rev="footnote">&#8617;</a></p>
</li>

</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PinPhoto On OS X]]></title>
    <link href="http://coderforart.com/pinphoto-en.html"/>
    <updated>2015-03-05T16:21:11+08:00</updated>
    <id>http://coderforart.com/pinphoto-en.html</id>
    <content type="html"><![CDATA[
<p>Placement your photos to anywhere on the screen and save as a document, PinPhoto will restore the state when you reopen.</p>

<p style="text-align:center">
<a target="_blank" onclick="ga('send','event','download-PinPhoto-Page-EN');" href="https://itunes.apple.com/us/app/pinphoto/id972438457?mt=12" target="_blank"><img src="media/14195170907881/icon_apple_store-download-small.png" width="180" /></a><br />
<span style="color:#ff0000;">Free Download !</span>
</p>

<span id="more"></span><!-- more -->

<h2 id="toc_0">Introduction PinPhoto</h2>

<h3 id="toc_1">New PinPhoto document and import photos</h3>

<p><code>CMD+N</code> to new PinPhoto document. Use Drag &amp; drop or <code>Import</code> button to add photos. You can also press <code>CMD+V</code> to paste photo when you copy a photo to pasteboard.</p>

<p><img src="media/14255436714850/1.jpg" alt=""/>￼￼￼￼￼￼</p>

<p>Tip: If you want to add some lovely photo from website to PinPhoto document, right click website&#39;s photo, choose <code>Copy Image</code>, and go to PinPhoto document press <code>CMD+V</code>.</p>

<h3 id="toc_2">Open and placement the photos</h3>

<p>Click <code>Main Window</code> photos list&#39;s photo to open <code>Photo View</code>. Mouse moves to the top of <code>Photo View</code> and drag to change the position. You can use two finger zoom the photo. Use the right click context menu or main menu --&gt; view for more.</p>

<p><img src="media/14255436714850/2.jpg" alt=""/>￼￼￼￼￼￼</p>

<p><strong>Right click context menu:</strong></p>

<ul>
<li>Zoom In: <code>CMD+=</code></li>
<li>Zoom Out: <code>CMD+-</code></li>
<li>Zoom to Fix: <code>CMD+9</code></li>
<li>100%: actual size - <code>CMD+0</code></li>
<li>200%: double&#39;s actual size - <code>CMD+8</code></li>
<li>100% And Resize Window: actual size photo and view</li>
<li>Duplicate View</li>
<li>Colse View  - <code>CMD+W</code></li>
<li>Close All View</li>
<li>Show Main Window: <code>CMD+F</code></li>
<li>Toggle Main Window: <code>CMD+D</code></li>
<li>Toggle Floating: <code>CMD+T</code></li>
<li>All Floating: <code>CMD+Shift+T</code></li>
<li>Clear All Floating: <code>CMD+Option+T</code></li>
<li>Prev Document: <code>⇤</code></li>
<li>Next Document: <code>⇥</code></li>
<li>Close Document: <code>CMD+Shift+W</code></li>
</ul>

<p>Automatic placement selected photos:<br/>
You can select some photos --&gt; right click --&gt; choose <code>Open &amp; Placement Selected Photos</code>. PinPhoto will placement selected photos on full screen automatically.</p>

<p><img src="media/14255436714850/3.jpg" alt=""/>￼￼￼￼￼￼</p>

<p><strong>Right click context menu:</strong></p>

<ul>
<li>Open Selected Photos View</li>
<li>Open &amp; Placement Selected Photos</li>
<li>Close Selected Photos View</li>
<li>Close All View</li>
<li>Deselect All</li>
<li>Select All</li>
<li>Delete: <code>CMD+Delete</code></li>
<li>Hide Main Window</li>
<li>All Floating: <code>CMD+Shift+T</code></li>
<li>Clear All Floating: - <code>CMD+Option+T</code></li>
<li>Prev Document: <code>⇤</code></li>
<li>Next Document: <code>⇥</code></li>
</ul>

<h3 id="toc_3">Floating Photo View</h3>

<p><code>CMD+T</code> to toggle floating <code>Photo View</code>, <code>CMD+Shift+T</code> floating all <code>Photo View</code>, <code>CMD+Option+T</code> cancels floating all <code>Photo View</code>.</p>

<p><img src="media/14255436714850/4.jpg" alt=""/>￼￼￼￼￼￼</p>

<h3 id="toc_4">Hide/Show Main Window</h3>

<p><code>CMD+D</code> toggle hide/show <code>Main Window</code>, <code>CMD+F</code> show <code>Main Window</code></p>

<p><img src="media/14255436714850/5.jpg" alt=""/>￼￼￼￼￼￼</p>

<h3 id="toc_5">Switch opened PinPhoto documents</h3>

<p>To switch prev document,please use <code>⇤</code> key. To switch next document,please use <code>⇥</code> key.</p>

<h2 id="toc_6">Questions?</h2>

<p>Please use Help --&gt; Send Feedback in PinPhoto or Twitter: <a href="https://twitter.com/oulvhai">@oulvhai</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PinPhoto On OS X]]></title>
    <link href="http://coderforart.com/pinphoto.html"/>
    <updated>2015-03-05T10:46:54+08:00</updated>
    <id>http://coderforart.com/pinphoto.html</id>
    <content type="html"><![CDATA[
<p>把多张图片摆放到屏幕任何位置并保存成文件，下次打开时恢复之前的状态！</p>

<h3 id="toc_0">一般使用场景：</h3>

<p>经常要看的图片，比如说软件快捷键、库的API、英文生词、常用配色等等摆好在屏幕上以便查看和记忆。</p>

<p>用PS等画画、设计、调照片时，常常会有好几个版本都不错的情况，这时候可以先复制，然后<code>CMD+V</code>粘贴到PinPhoto，然后排出来对比查看！</p>

<p>做设计、UI、画画、角色创作等工作时，用来做资料收集、激发灵感。有时候看电视剧、动漫等会看到不错的想收藏的画面，比如说某场景色彩太带感、某妹子的饰品或发型不错等，总之是看到觉得要收集的东西，可以用<code>Control+CMD+Shift+4</code>截屏并存到剪贴板、网页图可以右键<code>Copy Image</code>，然后再转到PinPhoto新建或打开文档，再<code>CMD+V</code>导入。然后就可以把图排出来并对比查看或找灵感啦！ </p>

<h3 id="toc_1">看美图和妹子等娱乐用：</h3>

<p>多收集一些美图或妹子图，并排好。比如说一类风景一个文档或者一类妹子一个文档或多个文档。写代码累了就切过来看看。已设定左右键切换打开的文档，所以可以轻松换着看。</p>

<p style="text-align:center">
<a target="_blank" onclick="ga('send','event','download-PinPhoto-Page');" href="https://itunes.apple.com/cn/app/pinphoto/id972438457?mt=12" target="_blank"><img src="media/14195170907881/icon_apple_store-download-small.png" width="180" /></a><br />
<span style="color:#ff0000;">目前免费！</span>
</p>

<span id="more"></span><!-- more -->

<h2 id="toc_2">软件用途和使用方法</h2>

<h3 id="toc_3">新建PinPhoto文档和导入图片</h3>

<p><code>CMD+N</code>新建PinPhoto文档，使用拖拽或者点<code>Import</code>按钮增加要摆放的图片，如果你的剪切板上复制有图片，也可以直接用<code>CMD+V</code>粘贴进来。</p>

<p><img src="media/14255236146194/1.jpg" alt=""/>￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼</p>

<p>小技巧：在网页中看到喜欢的图片想增加到PinPhoto文档中，可以右键网页中的图片，在弹出的菜单中选择：复制图片(Copy Image) 然后切换到PinPhoto，用快捷键<code>CMD+V</code>粘贴以增加到PinPhoto的文档中。</p>

<h3 id="toc_4">打开并摆放导入的图片</h3>

<p>点击列表中的图片即可打开该图片的图片视图，在打开的图片视图中，鼠标移到图片顶部的位置，会显示一条黑色的半透明长方形，拖动即可改变位置，你也可以用双指缩放、平移图片，更多的调节请用右键菜单、主菜单的View菜单或者快捷键。</p>

<p><img src="media/14255236146194/2.jpg" alt=""/>￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼</p>

<p><strong>右键菜单项目说明：</strong></p>

<ul>
<li>Zoom In：放大图片 - <code>CMD+=</code></li>
<li>Zoom Out：缩小图片 - <code>CMD+-</code></li>
<li>Zoom to Fix：缩小图片至窗口大小 - <code>CMD+9</code></li>
<li>100%：图片实际大小 - <code>CMD+0</code></li>
<li>200%：图片实际大小的2倍 - <code>CMD+8</code></li>
<li>100% And Resize Window：设定图片为实际大小，窗口也设置为和图片一样大小。</li>
<li>Duplicate View：另开一个图片视图</li>
<li>Colse View：关闭图片视图 - <code>CMD+W</code></li>
<li>Close All View：关闭当前文档的所有图片视图</li>
<li>Show Main Window：显示主窗口 - <code>CMD+F</code></li>
<li>Toggle Main Window：显示/隐藏主窗口 - <code>CMD+D</code></li>
<li>Toggle Floating：置顶/取消置顶图片视图 - <code>CMD+T</code></li>
<li>All Floating：全部置顶当前文档的所有图片视图 - <code>CMD+Shift+T</code></li>
<li>Clear All Floating：全部取消置顶当前文档的所有图片视图 - <code>CMD+Option+T</code></li>
<li>Prev Document：切换到上一打开的文档 - <code>⇤</code></li>
<li>Next Document：切换到下一打开的文档 - <code>⇥</code></li>
<li>Close Document：关闭当前文档 - <code>CMD+Shift+W</code></li>
</ul>

<p>另外也可以在主窗口中右键打开多张图片，有个实用的功能为：自动排列图片。选择要自动排列的图片，右键，并选<code>Open &amp; Placement Selected Photos</code>，则会把您选择的图片自动排满整个屏幕。如下图。</p>

<p><img src="media/14255236146194/3.jpg" alt=""/>￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼</p>

<p><strong>右键菜单项目说明：</strong></p>

<ul>
<li>Open Selected Photos View：打开所选择的图片的图片视图</li>
<li>Open &amp; Placement Selected Photos：把选择的图片自动排满整个屏幕</li>
<li>Close Selected Photos View：关闭所选择的图片的图片视图</li>
<li>Close All View：关闭当前文档的所有图片视图</li>
<li>Deselect All：取消全选</li>
<li>Select All：全选</li>
<li>Delete：删除所选的图片 - <code>CMD+Delete</code></li>
<li>Hide Main Window：隐藏主窗口</li>
<li>All Floating：全部置顶当前文档的所有图片视图 - <code>CMD+Shift+T</code></li>
<li>Clear All Floating：全部取消置顶当前文档的所有图片视图 - <code>CMD+Option+T</code></li>
<li>Prev Document：切换到上一打开的文档 - <code>⇤</code></li>
<li>Next Document：切换到下一打开的文档 - <code>⇥</code></li>
</ul>

<h3 id="toc_5">置顶图片</h3>

<p>选中图片视图后，可以用<code>CMD+T</code>或者右键选择菜单来置顶图片，图片置顶后，当你切换到其它程序时，会一直显示。经典的使用场景是对着图片画画。再按<code>CMD+T</code>则会取消置顶。也可以用<code>CMD+Shift+T</code>来置顶当前文档中的所有图片视图。用<code>CMD+Option+T</code>来取消置顶所有图片视图</p>

<p><img src="media/14255236146194/4.jpg" alt=""/>￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼</p>

<h3 id="toc_6">隐藏主窗口</h3>

<p>主窗口有时候非常影响观看摆好的图片，可以用<code>CMD+D</code>来显示/隐藏主窗口，<code>CMD+F</code>会直接显示主窗口。</p>

<p><img src="media/14255236146194/5.jpg" alt=""/>￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼</p>

<h3 id="toc_7">切换打开的PinPhoto文档</h3>

<p>可以使用键盘的向左向右键切换在PinPhoto中打开的文档，也可以用Window菜单切换。</p>

<h2 id="toc_8">用得不爽或者有功能上的建议？</h2>

<p>请直接 Help --&gt; Send Feedback 发信给我。或者微薄私信我：<a href="http://weibo.com/oulvhai">@oulvhai</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[第二个奇葩的Mac App差不多完成了，但是名字难以确定，求助万能的v2ex和ourcoders]]></title>
    <link href="http://coderforart.com/my-sec-mac-app-request-name.html"/>
    <updated>2015-03-02T14:03:40+08:00</updated>
    <id>http://coderforart.com/my-sec-mac-app-request-name.html</id>
    <content type="html"><![CDATA[
<p>v2ex:<a href="https://v2ex.com/t/173949">https://v2ex.com/t/173949</a><br/>
ourcoders:<a href="http://ourcoders.com/thread/show/5653/">http://ourcoders.com/thread/show/5653/</a></p>

<p>这个免费App是1月初MWeb发布后才有的点子，MWeb1.2提交后正式开始做，春节长假过后再小修了一下，终于到了差不多可以发布的时候。</p>

<p>App的功能是：把经常要看的相关联的图片摆放到屏幕任何位置并存成文件，下次打开时恢复之前的状态。摆放时可以放大、缩小、移动图片，也可以改变视图窗口的位置、大小等，支持双指缩放、三指拖动。<br/>
&lt;!-- more --&gt;<br/>
名字一开始是想叫：Research Pro的，因为这个App最开始的目的就是Research。因为我喜欢并想学CG艺术，然后通常会在网上看到不错的图，就想把相关联的排起来对比看。有时候也会特意对找一些东西，比如说唐代古装的服饰、饰品、发型等，找到后想全部排起来一并查看和研究。所以流程为：收集资料--&gt;排好--&gt;保存成文档--&gt;下次打开恢复排好的状态。这大概是Research的流程，这软件我想同样也适用于设计师研究设计方案，屏幕越大，可以摆的图越多，很是YY iMac retina 27下的效果。</p>

<p>后来觉得Research Pro有点太高端，这是一个小软件，有点名不副其实，所以就改为PinPhoto，低调了一些。但是总觉得可能有更好的名字，或者这两个名字那个好？发上来求助万能的V友。</p>

<p>做好后突然发现可以用来看漂亮妹子的图也很不错！多收集一些妹子图，并排好。一个人一个文档或者一种风格一个文档或多个文档。写代码累了就切过来看看，因为我设定了左右键切换，所以体验不错！收集也很方便，chrome右键图片：copy image， 切到PinPhoto(暂时叫这个)再 CMD+V 就行了。</p>

<p>当然也不排除这个奇葩的App没有多少人会用，这次发上来也看看有没有人关注。</p>

<p>图一：基本的功能和用法：<br/>
<img src="media/14252762205423/01.jpg" alt=""/>￼￼</p>

<p>图二：色彩的知识，经常要看的类型，主窗口可以用 CMD+D 隐藏，这样就全屏观看了。<br/>
<img src="media/14252762205423/02.jpg" alt="05"/>￼￼</p>

<p>图三：比较长的教程可以贴进来，摆好以方便查看（隐藏了主窗口）。<br/>
<img src="media/14252762205423/03.jpg" alt="04"/>￼￼</p>

<p>图四：同一作者的线搞对比查看<br/>
<img src="media/14252762205423/04.jpg" alt="03"/>￼￼</p>

<p>图五：收集到一些特别的蘑菇，画画时参考。<br/>
<img src="media/14252762205423/05.jpg" alt="02"/>￼￼</p>

<p>图六：把一张图片顶置。对着图画画时有些用。<br/>
<img src="media/14252762205423/06.jpg" alt="01"/>￼￼</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use GoodSync synchronize MWeb's static websites to FTP,SFTP,WebDAV,Amazon S3 automatically]]></title>
    <link href="http://coderforart.com/use-goodsync-sync-mweb-static-websites.html"/>
    <updated>2015-02-27T12:01:25+08:00</updated>
    <id>http://coderforart.com/use-goodsync-sync-mweb-static-websites.html</id>
    <content type="html"><![CDATA[
<p>GoodSync syncs files between your computer, mobile devices, FTP, SFTP, Amazon S3, Google Drive, SkyDrive, WebDAV, Azure.</p>

<span id="more"></span><!-- more -->

<h2 id="toc_0">Download and install GoodSync</h2>

<p>Go to <a href="http://www.goodsync.com/">http://www.goodsync.com/</a> download GoodSync and install. I checked <q>Do not setup GoodSync Connect</q> and finish install.</p>

<p>Click <q>Create a New Job</q> button to create a new synchronize job. </p>

<h2 id="toc_1">Select sync path</h2>

<p>Select MWeb build site path for the left panel.<br/>
If you didn&#39;t change MWeb build site path,the default path is:</p>

<pre><code>file:///Users/You Account/Library/Containers/com.coderforart.MWeb/Data/Documents/MWeb/LocalData/Site
</code></pre>

<p>To find this path, you must checked <code>Show hidden Files/Floders</code>.</p>

<h2 id="toc_2">Select sync to path</h2>

<p>Select sync to path for the right panel.I choose sync to FTP.<br/>
<img src="media/14250096857643/14250109782773.jpg" alt=""/>￼￼￼￼</p>

<h2 id="toc_3">Enable automatically synchronize</h2>

<p>Click <q>auto</q> button,enable On File Change: Analyze,Sync. Click <q>OK</q>.<br/>
<img src="media/14250096857643/14250112704266.jpg" alt=""/>￼￼￼￼</p>

<p>All is OK!! <br/>
When you click <q>Build site</q> button in MWeb, GoodSync will automatically synchronize your static website to FTP.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用GoodSync把MWeb生成的静态网站自动同步到FTP、SFTP、WebDAV、Amazon S3等]]></title>
    <link href="http://coderforart.com/use-goodsync-sync-mweb-static-websites-zh.html"/>
    <updated>2015-02-27T10:55:50+08:00</updated>
    <id>http://coderforart.com/use-goodsync-sync-mweb-static-websites-zh.html</id>
    <content type="html"><![CDATA[
<p>之前有写过如何用ForkLift这样的FTP软件自带的同步功能传到FTP，但是还是有点麻烦，昨天发现了一个非常好的软件GoodSync，它有非常强大的同步功能，而且还免费！</p>

<span id="more"></span><!-- more -->

<h2 id="toc_0">下载并安装GoodSync</h2>

<p>去这个网址：<a href="http://www.goodsync.com/">http://www.goodsync.com/</a> 免费下载GoodSync并安装。安装时要选择是否设置GoodSync Connect时，我选择是否：Do not setup GoodSync Connect。完成后点新建任务，就会新增一个同步任务。</p>

<h2 id="toc_1">选择要同步的文件夹</h2>

<p>在左侧选择MWeb生成的静态网站所在的文件夹。如果您没有设置MWeb生成的静态网站的文件夹，默认在：</p>

<pre><code>file:///Users/您的帐号/Library/Containers/com.coderforart.MWeb/Data/Documents/MWeb/LocalData/Site
</code></pre>

<p>这个位置，在GoodSync的选择位置的窗口中勾选：<code>Show hidden Files/Floders</code> 才能找到这个位置。</p>

<h2 id="toc_2">选择要同步的目标位置</h2>

<p>在右侧选择要同步的目标位置，我这里选择FTP，如下图，可以看到GoodSync还支持SFTP、WebDAV、Amazon S3等非常多的同步服务。<br/>
<img src="media/14250057502319/14250078774218.jpg" alt=""/>￼￼￼￼</p>

<p>点“连接”按钮，连上FTP后，选择FTP上要同步的文件夹，再点“选择”按钮。如果有跳出来提示，点“Yes”。</p>

<h2 id="toc_3">设置自动同步</h2>

<p>如下图：点“自动”按钮，设置当文件改变时就分析和同步。<br/>
<img src="media/14250057502319/14250082156068.jpg" alt=""/>￼￼￼￼</p>

<p>点“确定”后就会开始分析和同步了。</p>

<p>之后当您每一次用MWeb “Build Site”时，如果有打开GoodSync，它就会自动同步了，非常方便，比Github还方便！</p>

<h2 id="toc_4">总结</h2>

<p>GoodSync的功能还有很多，比如说同步到SFTP、WebDAV、Amazon S3等等，非常强大而且还免费。</p>

<p>因为有GoodSync这个同步软件，MWeb变得更方便好用了。我现在也在考虑是否把CoderForArt搬到有FTP功能的主机，这样在国内访问会快很多，写新文章时也不用打github命令手动去上传了。然后本来是有考虑为MWeb加上自动同步功能或者另做一软件，现在看来也没有必要了。</p>

<p><strong>更新</strong>：GoodSync 免费版是有限定的，限定为：<br/>
Q: What are free version limitations? <br/>
A: You can have 3 or less jobs in free version and 100 or less files and folders in each job.</p>

<p>虽然GoodSync不免费，但是非常好用。我也会关注是否有其他同步软件。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb 1.2 release]]></title>
    <link href="http://coderforart.com/mweb-v1.2-release.html"/>
    <updated>2015-02-08T23:50:28+08:00</updated>
    <id>http://coderforart.com/mweb-v1.2-release.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">New feature</h2>

<ul>
<li>Add auto insert list and blockquote prefix: Preferences --&gt; General --&gt; Auto insert list and blockquote prefix</li>
<li>In Editor share: Copy as image,Save as image,Save as PDF etc... now change to HTML style.</li>
<li>Add HTML or PDF export suport for documents. You can selected documents --&gt; Right Mouse Button Click(RMB) --&gt; Export as HTML or PDF.</li>
<li>Add HTML or PDF export suport for category. You can selected category --&gt; RMB --&gt; Export as HTML or PDF.</li>
<li>Add new preview css: octopress,greyshade.</li>
<li>Add drag &amp; drop to sort documents. RMB parent category --&gt; Edit --&gt; set Order by to Custom --&gt; you can drag &amp; drop to sort</li>
<li>Add drag &amp; drop to sort categories.</li>
</ul>

<h2 id="toc_1">Fixed</h2>

<ul>
<li>Build site crash some time</li>
<li>Preview site not work some time</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb 1.2 版更新说明和用 wkhtmltopdf 生成带目录的 PDF 和自定预览 CSS]]></title>
    <link href="http://coderforart.com/mweb-v1.2-release-zh.html"/>
    <updated>2015-02-08T17:47:38+08:00</updated>
    <id>http://coderforart.com/mweb-v1.2-release-zh.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">新增</h2>

<ul>
<li>可选择在输入时是否自动插入列表编号，可以在 Preferences --&gt; General --&gt; Auto insert list and blockquote prefix 开启和关闭。</li>
<li>分享功能的 Copy as image、Save as image、Save as PDF 等现在统一都用HTML的样式了，另外还专门为分享到微薄等SNS生成的图片做了优化，比如说如果有代码，会强制换行。</li>
<li>新增把文档库里的单个或多个文档导出为HTML或者PDF。使用方法为：选择要导出的文档（可多选） --&gt; 鼠标右键 --&gt; Export as HTML、PDF</li>
<li>新增把整个分类导出为HTML或者PDF。使用方法为：右键要导出的分类 --&gt; Export as HTML、PDF。导出的PDF现在还没办法自动生成目录，下边的详细介绍会分享一个可以自动生成目录的方法，然后个人觉得生成的PDF非常好。</li>
<li>新增MWeb自带的两个主题octopress、greyshade的即时预览CSS。现在可以不用 Build site 就可以即时预览文章的大概效果了。另外自定网站的预览CSS非常简单，请看下边的详细介绍。</li>
<li>新增可以拖拽改变文档的顺序。使用方法为：鼠标右键父分类 --&gt; Edit --&gt; 把Order by设定为：Custom --&gt; 然后就可以用拖拽调节这个父分类下的文档顺序了。</li>
<li>新增可以拖拽改变分类的顺序。</li>
</ul>

<span id="more"></span><!-- more -->

<h2 id="toc_1">修正</h2>

<ul>
<li>Build site 闪退问题，这也是这次版本发布的原因。</li>
<li>Preview site 无效果问题。</li>
<li>编辑器小修正。</li>
</ul>

<h2 id="toc_2">生成带目录的PDF的方法</h2>

<p>先安装wkhtmltopdf，网址：<a href="http://wkhtmltopdf.org/">http://wkhtmltopdf.org/</a>。<br/>
然后用Export as HTML把要生成带目录的PDF的内容导出为HTML。我这里是选择整个Coder For Art网站。如图是导出到tocPDF文件夹下的情况。<br/>
<img src="media/14233888581377/14233994590970.jpg" alt=""/>￼￼￼￼￼￼￼￼￼￼￼￼￼</p>

<p>选择tocPDF文件夹，并<code>CMD+C</code>复制,打开终端工具(Terminal)，打<code>cd</code> （注意cd后带一空格），然后<code>CMD+V</code>，再 Enter。<br/>
然后再执行以下命令</p>

<pre><code>wkhtmltopdf toc index.html CoderForArt.pdf
</code></pre>

<p>￼执行结果生成的PDF如图：<br/>
<img src="media/14233888581377/14233999928601.jpg" alt=""/>￼￼￼￼￼￼￼￼￼￼￼￼￼</p>

<p>一般情况下有代码的地方如果过长会被切掉，可以加入以下CSS</p>

<pre><code class="language-css">.hljs{overflow: visible; word-wrap: break-word;}
</code></pre>

<p>就不会被切了。如图：<br/>
<img src="media/14233888581377/14234006629706.jpg" alt=""/>￼￼￼￼￼￼￼￼￼￼￼￼￼</p>

<h2 id="toc_3">自定预览CSS</h2>

<p>把要自定的预览的网站的主题整个文件夹复制到预览CSS文件夹的layout文件夹下，如图是我要自定greyshade主题的预览CSS：</p>

<p><img src="media/14233888581377/14233974412288.jpg" alt=""/>￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼</p>

<p>然后只留下layout/greyshade文件夹下的asset文件夹和随便两个.html文件，其他都删除。把留下的两个.html文件分别改名为：demo.html和index.html。</p>

<p>使用Build site --&gt; Preview site --&gt; 转到任何一个单独的文章页面 --&gt; 查看原代码 --&gt; 复制并把它粘贴到demo.html上。现在你可以直接打开demo.html看效果了。调整demo.html到合适的预览效果时，再把demo.html的所有内容粘贴到index.html上。</p>

<p>把index.html页的标题都用<code>{{title}}</code>替换，内容用<code>{{content}}</code>替换，并在<code>&lt;head&gt;&lt;/head&gt;</code>之间加上<code>{{head}}</code>，一般加在<code>&lt;/head&gt;</code>前面即可。</p>

<p>如图，在预览CSS的文件夹里新增一个名为greyshade.css的内容为空的文件即可。<br/>
<img src="media/14233888581377/14233984379844.jpg" alt=""/>￼￼￼￼￼￼￼￼￼￼￼￼￼￼</p>

<p>要注意的是：greyshade.css的文件名greyshade和layout文件夹下的greyshade文件夹的名称是一样的。然后如果你引用的CSS加有<code>media=&quot;screen, projection&quot;</code>这样的限定，请删除，不然MWeb在导出PDF功能上会没有样式。还有如果你在用highlightjs这个代码高亮插件，导出PDF或者生成图片时，代码被切掉的话，可以用以下CSS强制换行：</p>

<pre><code class="language-css">.hljs{overflow: visible; word-wrap: break-word;}
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[万网（阿里云）免费虚拟主机体验]]></title>
    <link href="http://coderforart.com/aliyun-net-cn-free-web-host-express.html"/>
    <updated>2015-02-03T12:16:28+08:00</updated>
    <id>http://coderforart.com/aliyun-net-cn-free-web-host-express.html</id>
    <content type="html"><![CDATA[
<p>之前在v2ex听说万网出了一款免费主机，申请即可以用二年。我当时去抢，并没有抢到，结果今天万网发邮件给我免费试用！这种好事当然要试一试！开通很顺利，没有遇到什么问题。</p>

<p>我按步骤开通后，发现上传方式是FTP，因为买了ForkLift没怎么用过，现在正好试试他的同步功能如何。</p>

<span id="more"></span><!-- more -->

<p>我是用MWeb生成的静态网站并上传试试如何的。下图左边是我本机的用MWeb生成的静态网站的所在文件夹，然后右边是连上所给的FTP后，转到htdocs文件夹，在ForkLift中选择File--&gt;Sync to...</p>

<p><img src="media/14229369882579/14229376408401.jpg" alt=""/>￼￼</p>

<p>上传速度一般，我的宽带是电信20M。<br/>
<img src="media/14229369882579/14229376940910.jpg" alt=""/>￼￼</p>

<p>上传后就可以去预览看看速度如何了。进去一看，发现是要用自己的FTP密码登录才可以看。也就是说不备案是不能给别人看的，必须备案才可以。<br/>
浏览一下图很多的页面。速度还可以，比放在github快很多！</p>

<p>然后试试更新文章，看看ForkLift是否会自动同步！<br/>
因为我现在是新写了一文章，所以在MWeb中 Build site 然后看看ForkLift会不会侦测到文件改变，然后自动同步更新到FTP。</p>

<p>可惜的是：ForkLift不会自动同步，还是要你去点File--&gt;Sync to...才可以。如图，他会找出那些文档有改动，然后点Sync，才会更新到FTP。</p>

<p><img src="media/14229369882579/14229393304301.jpg" alt=""/>￼￼</p>

<p>下图是上传后预览的结果：<br/>
<img src="media/14229369882579/14229395629085.jpg" alt=""/>￼￼</p>

<h2 id="toc_0">备案和总结</h2>

<p>有看到过v2ex上有朋友说备案也不大麻烦，弄好资料差不多五天就可以了。我当然不会将coderforart网站放到万网，所以肯定是不会去备案的。然后总的来说，万网的免费主机还是不错的，免费二年、速度也还行、备案也不麻烦。当然PHP和Mysql的功能我没去试，感觉免费主机还是应该只放静态HTML就好。</p>

<p>MWeb用FTP的体验比github好很多，只要生成然后用FTP同步即可，非常简单，我想我开发MWeb的目的应该是达到了。虽然MWeb现在非常少人用，但是我还是会继续优化MWeb，让它能更简单。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[把生成的静态网站发布到github或FTP]]></title>
    <link href="http://coderforart.com/sync-webistes-to-github-or-ftp-zh.html"/>
    <updated>2015-01-28T11:23:05+08:00</updated>
    <id>http://coderforart.com/sync-webistes-to-github-or-ftp-zh.html</id>
    <content type="html"><![CDATA[
<p>看现在多几个人浏览，就花时间写这一篇了。</p>

<p>MWeb的优点是生成的网站都在你的本地电脑上，所以你可以备份、同步到Dropbox等网盘。当然也可以一键重新生成，您只需要备份好您的文档库即可。比如备份文档库到dropbox的方法为：</p>

<span id="more"></span><!-- more -->

<p>请打开终端工具(Terminal),并执行以下命令：</p>

<pre><code>ln -s ~/Library/Containers/com.coderforart.MWeb/Data/Documents/MWeb ~/Dropbox/MWebBackup
</code></pre>

<p>可以看出来大概语法是：</p>

<pre><code>ln -s ~/Library/Containers/com.coderforart.MWeb/Data/Documents/MWeb + 网盘同步的位置
</code></pre>

<p>这样就可以备份到任何网盘了。</p>

<p>您也可以把你的网站传到dropbox上，再分享出来，因为dropbox支持直接显示HTML，所以其它人就可以很方便查看。MWeb之后也会增加一些其他类型用途的主题模板。下面说一下如何找到MWeb生成的网站的位置，如图。<br/>
<img src="media/14224153855854/14224159407048.jpg" alt=""/>￼￼￼￼￼￼￼￼<br/>
如果你觉得MWeb默认的位置比较不好，您可以改变MWeb网站输出的文件夹，如图我把输出的文件夹改到我的<code>Documents/MWebSites</code>下了。<br/>
<img src="media/14224153855854/14224164068185.jpg" alt=""/>￼￼￼￼￼￼￼￼</p>

<p>这样话就比较好找了。</p>

<h2 id="toc_0">发布到github</h2>

<p>github目前应该是最好的提供免费博客、网站服务的公司了（当然这其实并不是github的想法）。如果你有了github的帐号后只需要新增一个 <code>Github repository</code>，名称为<code>username.github.io</code>,如图<br/>
<img src="media/14224153855854/14224167094764.jpg" alt=""/>￼￼￼￼￼￼￼￼</p>

<p>然后会看到这页：<br/>
<img src="media/14224153855854/14224167472996.jpg" alt=""/>￼￼￼￼￼￼￼￼</p>

<p>这样就简单了，先进入MWeb生成的网站的所在文件夹（如上面所说，在MWeb中点<code>Show in finder</code>），我这里是选择 <code>Coder For Art</code> 然后 <code>CMD+C</code>。如图：<br/>
<img src="media/14224153855854/14224170128740.jpg" alt=""/>￼￼￼￼￼￼￼￼</p>

<p>然后打开终端工具(Terminal)，打<code>cd</code> （注意cd后带一空格），然后<code>CMD+V</code>，然后Enter，如图：<br/>
<img src="media/14224153855854/14224172504947.jpg" alt=""/>￼￼￼￼￼￼￼￼</p>

<p>然后再分别打入上边github提示的命令样本，注意我这边有改动到喔。再注意，如果你先前没有在MWeb中<code>Build site</code>，要先生成一下。</p>

<pre><code>echo &quot;# oimotis.github.io&quot; &gt;&gt; README.md
git init
git add .
git commit -m &quot;first commit&quot;
git remote add origin https://github.com/oimotis/oimotis.github.io.git
git push -u origin master
</code></pre>

<p>效果如图：<br/>
<img src="media/14224153855854/14224176047741.jpg" alt=""/>￼￼￼￼￼￼￼￼<br/>
<img src="media/14224153855854/14224181872446.jpg" alt=""/>￼￼￼￼￼￼￼￼</p>

<p>可以看到已经传成功了，<a href="http://oimotis.github.io/">http://oimotis.github.io/</a> 直接用这个网址就可以浏览了。</p>

<p>下面就要自定域名了。<br/>
依次执行以下命令即可：</p>

<pre><code>echo &#39;blog.coderforart.com&#39; &gt;&gt; CNAME
git add --ignore-removal .
git commit -m &quot;cname&quot;
git push -u origin master
</code></pre>

<p>效果如图：<br/>
<img src="media/14224153855854/14224187391174.jpg" alt=""/>￼￼￼￼￼￼￼￼</p>

<p>然后在域名中设定CNAME到<code>oimotis.github.io</code>（oimotis要换成你的github用户名）即可。 如图，这是我上边的设置<br/>
<img src="media/14224153855854/14224192721298.jpg" alt=""/>￼￼￼￼￼￼￼￼</p>

<p>注意，我并没有真设置喔，所以 blog.coderforart.com 是无效的。<br/>
我的网站<a href="http://coderforart.com">http://coderforart.com</a>是设定CNAME文件的内容为：coderforart.com，CNAME的host为 www, POINTS TO:为 oulvhai.github.io，然后还要把 A Record（A记录）设置为 <code>192.30.252.153</code> 和 <code>192.30.252.154</code> 才行。</p>

<p>以后发新文章要更新，就执行以下命令即可：</p>

<pre><code>git add --ignore-removal .
git commit -m &quot;cname&quot;
git push -u origin master
</code></pre>

<h2 id="toc_1">发布到FTP</h2>

<p>对于一般用户来说，github可能比较麻烦，还是FTP简单。就直接传上FTP即可。如果你是在用 ForkLift 或者 Yummy FTP 这种有 可以自动同步本地和服务器端的文件夹的功能的FTP就更好用了，比github方便多了。具体我就不介绍了。</p>

<p><strong>2/3更新</strong> FTP上传可以看看这篇 <a href="aliyun-net-cn-free-web-host-express.html">万网（阿里云）免费虚拟主机体验</a></p>

<p><strong>2/27更新</strong> <a href="use-goodsync-sync-mweb-static-websites-zh.html">使用GoodSync把MWeb生成的静态网站自动同步到FTP、SFTP、WebDAV、Amazon S3等</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[游戏制作之路：一个对我来说可实现的High-end的Mac/iOS游戏制作大概计划]]></title>
    <link href="http://coderforart.com/make-a-simple-high-end-mac-ios-game.html"/>
    <updated>2015-01-21T10:05:07+08:00</updated>
    <id>http://coderforart.com/make-a-simple-high-end-mac-ios-game.html</id>
    <content type="html"><![CDATA[
<p>对于学习一些东西，我比较习惯任务驱动式的学习，也就是说，要事先订好一个目标，要做什么东西，达到什么效果，然后根据自己了解的知识作一个可以实现这个目标的计划。</p>

<p>现在要学的是游戏制作，而且是High-end的3D游戏制作。如前文 <a href="http://coderforart.com/unrealengine4-windows-mac.html">游戏制作之路：游戏引擎选择、Mac下和Windows下UnrealEngine 4体验对比、文档及其他</a> 所说的，我已经选择了UE4这个画面最顶级的引擎，它即使是在iOS上，画面也是最高端的，可以参考 <a href="https://www.unrealengine.com/blog/unreal-engine-powered-zen-garden-released">Zen Garden</a> 这个Demo。然后我也大概确认了可行性，现在要解决的是玩法（游戏性）、内容创作、音效这些东西。</p>

<span id="more"></span><!-- more -->

<h2 id="toc_0">游戏的大概内容和玩法</h2>

<p>为了让目标尽可能得以实现，游戏要尽可能简单。考虑到内容创作难度太大，所以我要使用尽可能少的元素。目前确认的有山、树、花草、水、岩石火山怪物、钢铁怪物、一两个造型复杂点的Boss、一两个女性人物角色。下面分开说明</p>

<ul>
<li>山：UE4对山地的制作支持的比较好，所以我要做的只有设计山地的外形和画山地材质了。这点内容创作我相信能做好，只要仔细研究山的画法，表现形式和树、花草的布局即可</li>
<li>树：UE4有支持SpeedTree这样的简单可以做出各种外形的树的软件插件，但是这显然不是我的目标，在迫不得以的情况下才会用。我开始会从画画和3D建模去从头开始创作树，然后仔细研究树的材质和表现，从而真正掌握树的制作。</li>
<li>花草：UE4好像内置花草的支持，不大清楚是如何，但是应该是很好的消息。不过估计也是要去画花的材质和表现，花草这部分也是我要仔细研究和全程掌握的。从开始创作花草外形到如何做3D建模，上材质并引入到UE4都要掌握。</li>
<li>水：这部分在UE4中比较好实现，应该是只要设计位置和外形就好，任务比较简单。</li>
<li>岩石火山怪物、钢铁怪物：怪物制作在游戏中是重点，难度很高。从开始设计到引入UE4，像树或花草那样流程即可。真正有挑战的是怪物AI了，这部分就关系到游戏玩法和游戏性了。这部分我了解不多，反正是要花大量时间研究就是了，初步方向是UE4中内置的AI的组件如何使用，然后读一些游戏AI的书等等。估计是可能会用到C++了，这也是要学习的。</li>
<li>人物角色：人物角色是我学习的重点，我希望这部分在做完这个游戏后能真正掌握一些。这部分要研究的东西太多了，光是人物设计就是要花大量时间，人体结构，画法，服饰。还有是3D建模，人物皮肤材质，服饰材质等等。服饰部分东西太庞大，我只选一个小方向即可。还有比如说头发和衣服在游戏中的做法等等。再有就是角色动画，初步估计应该是在3D软件中调好，然后引入UE4中也是有大量工作要做的。这也只是在对角色动画比较了解的基础上，刚刚好我不了解，这也得学！不知道UE4能不能做到像下图那样的画出来的角色的质量？这也是我想研究的。
<img src="media/14218059079784/5bf24facgw1eo0sjmlsiwj20uk0hoju2.jpg" alt="5bf24facgw1eo0sjmlsiwj20uk0hoju2"/>￼￼￼￼
<img src="media/14218059079784/5bf24facgw1eo0sjsnjb6j20dw0cnta3.jpg" alt="5bf24facgw1eo0sjsnjb6j20dw0cnta3"/>￼￼￼￼</li>
</ul>

<p>游戏玩法部分，这部分需要我在学习中慢慢想了，这部分应该不难，只是做得好不好的问题，即使做得不好，也没关系了。我的方向不在这。</p>

<h2 id="toc_1">内容创作工具</h2>

<p>内容创作非工具部分花费时间最多，量最大，但是这部分我无法写更多的东西，只能说是边学边研究了。然后工具部分却有一些可写的。<br/>
硬件部分要求不大，我目前有一台高性能的PC，两台MacBook Pro，现用的是2013版的15寸MacBook Pro，还有一台绘画板子 cintiq 13HD，足够用了。软件部分如下</p>

<ul>
<li>Photoshop：这个神器肯定是必须要的，不管是设计或画画还是做材质，他都是首选的工具。</li>
<li>ZBrush：这个也属于易用性极好的神器，它大大降低了3D建模的难度。它也是我认为我可以掌握怪物和人物角色创作的理由。还有它的价格不贵，$795，在我可以接受范围。</li>
<li>Maya LT：为什么是Maya而不是免费的Blender？最主要是Maya提供了官方的.FBX导出支持，而Blender是以插件的形式出现的，还有就是《游戏引擎架构》多次提到Maya，想来是不会错的。为什么是Maya LT，有写错？没有！因为Maya太贵了，全买\(3675，订阅\)185每月。Maya LT订阅\(30每月，年订\)240。而且autodesk的软件都可以很方便地申请3年的教育学习用途。</li>
<li>我的另一款软件：这软件是要先做出来，当然不是什么强大的软件，这是我认为对内容创作和学习有用的小软件。</li>
</ul>

<p>软件部分除非以上的软件都不够用了，否则不会再引进新软件，因为评估和学习也是要成本的。当然，不用学的小软件是除外。</p>

<h2 id="toc_2">游戏音效、背景故事</h2>

<p>音效部分虽然也是属于非常重要的，但是我完全不懂音效，也没有兴趣深入研究它，大概来几个还算可以的音效就行了。背景故事部分在学习研究中跟游戏玩法一起慢慢考虑。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb Q & A]]></title>
    <link href="http://coderforart.com/qa.html"/>
    <updated>2015-01-20T10:04:01+08:00</updated>
    <id>http://coderforart.com/qa.html</id>
    <content type="html"><![CDATA[
<p>Updated: 2015/3/25</p>

<span id="more"></span><!-- more -->

<p>Question list: </p>

<ul>
<li>
<a href="#toc_0">What&#39;s difference between MWeb Lite and MWeb?</a>
</li>
<li>
<a href="#toc_1">How to enable MathJax preview support?</a>
</li>
<li>
<a href="#toc_2">How to enable blog MathJax support?</a>
</li>
<li>
<a href="#toc_3">How to backup MWeb&#39;s documents library to Dropbox？</a>
</li>
<li>
<a href="#toc_4">How to add Disqus support?</a>
</li>
</ul>


<h2 id="toc_0">What&#39;s difference between MWeb Lite and MWeb?</h2>

<p>MWeb design with two patterns: External Document pattern and Documents Library pattern. MWeb Lite&#39;s Documents Library limit to 10 documents.</p>

<h2 id="toc_1">How to enable MathJax preview support?</h2>

<p><code>CMD+,</code> open Preferences，<code>Themes</code> - <code>Enable MathJax</code>.</p>

<h2 id="toc_2">How to enable blog MathJax support?</h2>

<p><code>Right click blog setting</code> - <code>Edit</code> - <code>Enable MathJax</code></p>

<!-- more -->

<h2 id="toc_3">How to backup MWeb&#39;s documents library to Dropbox？</h2>

<p>Please open Terminal ( Spotlight - enter <code>terminal</code> ) and enter the following command. </p>

<pre><code>ln -s ~/Library/Containers/com.coderforart.MWeb/Data/Documents/MWeb ~/Dropbox/MWebBackup
</code></pre>

<h2 id="toc_4">How to add Disqus support?</h2>

<p>Please check this post: <a href="mweb-comment-and-share-help.html">Add AddThis Share and Disqus Comment</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb 所有问题和回答收集]]></title>
    <link href="http://coderforart.com/mweb-qa-zh.html"/>
    <updated>2015-01-20T10:03:00+08:00</updated>
    <id>http://coderforart.com/mweb-qa-zh.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">如何导出HTML样式的PDF？（1.2版已改进这个问题。）</h2>

<p><code>CMD+R</code>打开Live Preview窗口，点右边的分享按钮，选择<code>Save as PDF</code>即可。</p>

<h2 id="toc_1">如何开启MathJax预览支持？如何让网站支持MathJax？</h2>

<p><code>CMD+,</code>打开设置面板，切到Themes，勾选Enable Math选项。<br/>
如果要让网站支持MathJax，最简单的方法是在网站分类设置中的：Site other:的文本框中填入以下代码：</p>

<pre><code class="language-js">&lt;script type=&quot;text/x-mathjax-config&quot;&gt;
  MathJax.Hub.Config({tex2jax: {inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]]}});
&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot;
  src=&quot;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;&gt;
&lt;/script&gt;
</code></pre>

<p>如果您的网站是要用HTTPS，请把：<code>http://cdn.mathjax.org...</code>改为：<code>https://cdn.mathjax.org...</code></p>

<span id="more"></span><!-- more -->

<h2 id="toc_2">如何将MWeb的文档库备份至Dropbox？</h2>

<p>请打开终端工具(Terminal),并执行以下命令：</p>

<pre><code>ln -s ~/Library/Containers/com.coderforart.MWeb/Data/Documents/MWeb ~/Dropbox/MWebBackup
</code></pre>

<h2 id="toc_3">如何为文章增加Disqus或者多说等评论？</h2>

<p>Disqus的话，去<a href="https://disqus.com/">https://disqus.com/</a>，然后会得到像以下这样的代码，点到主题模板的post.html页的合适的位置即可。</p>

<pre><code class="language-js">&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
   var disqus_shortname = &#39;这个会不一样&#39;; 

   (function() {
       var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
       dsq.src = &#39;//&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
       (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
   })();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;https://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
</code></pre>

<p>多说应该是差不多的方法。可以参考这个网址的情况：<a href="https://github.com/oulvhai/MWeb-Themes/blob/master/mweb-greyshade/post.html">https://github.com/oulvhai/MWeb-Themes/blob/master/mweb-greyshade/post.html</a></p>

<h2 id="toc_4">虽然在后面打中文不会跳动，但是在文章中间插入中文时，下面的文本会跳动怎么办？</h2>

<p>这个解决办法好像只能换字体，就是在设置中把编辑器的字体换成<code>Hiragino Sans GB</code>，中文名称应该是叫<code>冬青黑体</code>。另外我有试过Yosemite下不会跳了，当然如果你在用Yosemite，就不会有这个问题了。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb 1.1 release]]></title>
    <link href="http://coderforart.com/mweb-v1.1-release.html"/>
    <updated>2015-01-19T15:02:30+08:00</updated>
    <id>http://coderforart.com/mweb-v1.1-release.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">New feature</h2>

<ul>
<li>Add import files (.txt and .md) featrue：File --&gt; Import Files To Library...</li>
<li>Add TOC（Table of Content）featrue: Preferences --&gt; Themes --&gt; Enable TOC (Table of Content)</li>
<li>Add MWeb Lite</li>
<li>Add sitemap suport.</li>
<li>Add right click for category edit.</li>
<li>Add syntax highlighting in fenced code blocks feature,for version 1.0 user, please go to <a href="https://github.com/oulvhai/MWeb-Themes/">https://github.com/oulvhai/MWeb-Themes/</a> download new themes. Language name detail:<a href="http://highlightjs.readthedocs.org/en/latest/css-classes-reference.html">http://highlightjs.readthedocs.org/en/latest/css-classes-reference.html</a></li>
</ul>

<span id="more"></span><!-- more -->

<h2 id="toc_1">Fixed</h2>

<ul>
<li>Live preview improved</li>
<li>Outline improved</li>
<li>case sensitive system can&#39;t open MWeb&#39;s document.</li>
</ul>

<h2 id="toc_2">Syntax highlighting in fenced code blocks screenshot</h2>

<p><img src="media/14216489427773/Snip20150119_6.png" alt=""/>￼￼￼￼￼￼￼</p>

<p><img src="media/14216489427773/Snip20150119_5.png" alt=""/>￼￼￼￼￼</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb 1.1 版更新说明]]></title>
    <link href="http://coderforart.com/mweb-v1.1-release-zh.html"/>
    <updated>2015-01-19T14:29:02+08:00</updated>
    <id>http://coderforart.com/mweb-v1.1-release-zh.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">新增</h2>

<ul>
<li>增加导入.txt或Markdown文档到文档库功能：File --&gt; Import Files To Library...</li>
<li>增加TOC（Table of Content）支持，和是否 Render TOC 选项</li>
<li>增加免费版</li>
<li>增加sitemap功能</li>
<li>站点文件夹增加右键菜单</li>
<li>增加代码高亮功能，支持超多编程语言，1.0版本的朋友请去<a href="https://github.com/oulvhai/MWeb-Themes/">https://github.com/oulvhai/MWeb-Themes/</a>下载最新的主题即可。支持语言及缩写详细请参考：<a href="http://highlightjs.readthedocs.org/en/latest/css-classes-reference.html">http://highlightjs.readthedocs.org/en/latest/css-classes-reference.html</a></li>
</ul>

<span id="more"></span><!-- more -->

<h2 id="toc_1">修正</h2>

<ul>
<li>即时预览功能大改进，现在是真正即时了，然后滚动时，同步的位置也比较准确了。</li>
<li>Outline跳到所在位置时高亮选中文字</li>
<li>区分大小写系统在初次打开时无法看到自带的文档问题</li>
<li>初次使用直接点Preview Site无效果问题</li>
</ul>

<h2 id="toc_2">代码高亮功能截图</h2>

<p><img src="media/14216489427773/Snip20150119_6.png" alt=""/>￼￼￼￼￼￼￼</p>

<p><img src="media/14216489427773/Snip20150119_5.png" alt=""/>￼￼￼￼￼￼￼</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[游戏制作之路：游戏引擎选择、Mac下和Windows下UnrealEngine 4体验对比、文档及其他]]></title>
    <link href="http://coderforart.com/unrealengine4-windows-mac.html"/>
    <updated>2015-01-16T14:19:42+08:00</updated>
    <id>http://coderforart.com/unrealengine4-windows-mac.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">UnrealEngine 4和Unity3d的选择</h2>

<p>订阅了UrealEngine4（UE4）开发者。我开始做网站用的是ASP.NET和C#，之后做网站虽然换用更方便的PHP（因为做的都是小网站）。我想说，做了长达7年的小网站就算我再水，但是C#我还是懂一些的，而Unity3d刚刚好最建议用的就是C#。C++我不懂，只在高中毕业后看了C++编程思想并把大部分例子都手打入电脑并运行。不极是在肖极Unity3d在移动端有大量成功的案例，文档非常好，视频教程也很全，研究的人也非常多，有问题很容易找到文案等等等等，简直是好得不能再好了！但是：UE4是开源的，《游戏引擎架构》里说游戏一般都用C++，我这次学是认真的！！作为一个有追求的人也必须选UE4等等！！最后我要说的是，这些都不是我选UE4的主要原因，真相是：Unity3D好贵！月付400多，不付就马上没有全功能的，全买更贵！UE4如果你不用最新的，你只要买一个月，之后都是免费的，全功能的。虽然这点钱对于真正做产品来说，不算什么，但是对于学习了说，不一样。反正做游戏也不单单是引擎的事，然后学会了一个引擎，再学另一个，或者也就是几天的事。</p>

<span id="more"></span><!-- more -->

<h2 id="toc_1">Mac OS X下下载和编译UnrealEngine 4</h2>

<p>UE4在github中有三个版本，我直接下载release版本的.zip（因为我用git clone太慢了）。我下载的是4.6.1版。下载完成解压后右键setup.command打开，然后还会要下载大概2G左右的东西，这个下载的速度不错。然后再右键GenerateProjectFiles.command打开。等一会儿后就生成UE4.xcodeproj了。打开UE4.xcodeproj后，选择UE4Editor-Mac，然后build，发现我下载这个版本会出错。出错是这行：</p>

<pre><code class="language-cpp">static bool GAllowApplePlatformSymbolication = PLATFORM_MAC &amp;&amp; IS_PROGRAM;
</code></pre>

<p>错误信息是：<code>Use of logical &#39;&amp;&amp;&#39; with constant operand</code>。<br/>
我看不大懂，实在是找不到好办法，看意思他肯定是<code>true</code>，就改成：</p>

<pre><code class="language-cpp">static bool GAllowApplePlatformSymbolication = true;//PLATFORM_MAC &amp;&amp; IS_PROGRAM;
</code></pre>

<p>然后就编译通过了。</p>

<p>但是，我运行的时候，好慢好慢，然后xcode下打出来一堆东西，然后就挂掉了，没办法运行。。</p>

<p>我去Epic打包好的地方下载一包试试。</p>

<p>伤心了，还是一样错误，变成以下这样看看。。</p>

<pre><code class="language-cpp">#if PLATFORM_MAC &amp;&amp; IS_PROGRAM
static bool GAllowApplePlatformSymbolication = true;
#else
static bool GAllowApplePlatformSymbolication = false;
#endif

</code></pre>

<p>编译过了，但是一样还是没办法运行。</p>

<p>没办法了，试试4.5.1版本看看。<br/>
下载后编译（方法跟4.6.1不大一样）。这次可以成功编译了。然后运行也没问题，但是好慢好慢好慢，好像我的rmbp15寸高配根本不大合适做这样的任务似的。新建项目xcode提示又出bug，我懒得管了，直接生成release版本的UE4Editor。应该会比debug版本的UE4Editor快很多吧。<del>先熟悉UE4Editor和学学Blueprints先了。C++什么的先不管先，因为太麻烦了，按照我编译后运行一下得要好久好久，估计10来分钟，如果全部编译，要大半个钟吧。。 如果改一下C++代码，还要编译后才能看到结果，那还得了。。 我直接不用学得了。（虽然可能不是这样，虽然Win下可能会快很多很多）</del> <strong>后来证明不是这样，然后如果用不到C++，UE4比想像中方便</strong></p>

<p>话说我都编译好Release版后，然后去看 Getting Started，看到这页：<a href="https://docs.unrealengine.com/latest/INT/Engine/QuickStart/4/index.html">https://docs.unrealengine.com/latest/INT/Engine/QuickStart/4/index.html</a>，发现我编译这版没有Geometry！不得已我又下载了4.1版，又编译了，然后终于可以学习了。有图有真相！左边是4.1版！<br/>
<img src="media/14213891828854/14214041748379.jpg" alt=""/>￼￼￼￼￼￼￼￼</p>

<p>不得不说我耐心真好，编译好花时间 ╮(╯▽╰)╭  </p>

<p><strong>注</strong> 后来发现4.5.1版只是换了名字，BSP 就是Geometry！╮(╯▽╰)╭  </p>

<h2 id="toc_2">Windows下编译UnrealEngine 4</h2>

<p>周未有点空，就开Windows挂着下载UE4，想试一下Window下的体验如何，因为UE4好像是Windows下优化极好的。</p>

<p>先说一下我的机器供参考：CPU:e3-1230v2  GPU:gtx660 内存:8G SSD:128G。</p>

<p>下载编译跟Mac差不多，时间上也差不多。Windows下编译4.6.1 完全没有任何出错。非常顺利！然后启动Debug版的Unreal Editor，比Mac下快很多，打开大场景也很快，很顺。试运行，很好，好得不能再好了！！但是好占空间，我随便试一下，下载三个Demo的游戏或场景，30多G空间就没了。 Mac下因为是512G所以没注意。</p>

<h2 id="toc_3">Windows、Mac下UnrealEngine 4使用C++项目对比</h2>

<p>再试了一下新建C++的项目看看。按 <a href="https://docs.unrealengine.com/latest/INT/Programming/QuickStart/index.html">https://docs.unrealengine.com/latest/INT/Programming/QuickStart/index.html</a> 这个文档加了几行C++代码，然后从开始编译到编译成功并打开Unreal Editor，大概1分钟左右。这并非不能接受。当然，这不能跟Unity3D用C#比，那才真正快。</p>

<p>然后好奇再在Mac上试了一下（版本是4.5.1，因为4.6.1我编译不成功），新建C++项目，然后也按 <a href="https://docs.unrealengine.com/latest/INT/Programming/QuickStart/index.html">https://docs.unrealengine.com/latest/INT/Programming/QuickStart/index.html</a> 这个文档加了几行C++代码，想不到却出错了！版本不一样的原因，修正了一下，让他结果一样，然后从开始编译到编译成功并打开Unreal Editor，也是大概1分钟左右！这个结果让我惊喜了，看来是如果做场景小些的游戏，Mac下用UE4完全没问题！而我大概也是也只能是做场景小些的游戏（场景小，但是画面质量可以超高，UE4的画面比Unity3d好太多了），因为目标是丢上iPad、iPhone上玩的。上一张Mac下的图吧：</p>

<p><img src="media/14213891828854/14215892261441.jpg" alt=""/>￼￼￼￼￼￼</p>

<h2 id="toc_4">如果用不到C++，只用Blueprints使用UnrealEngine 4的简单方法</h2>

<p>去 <a href="https://www.unrealengine.com/">https://www.unrealengine.com/</a> 登入后下载红线这个：<br/>
<img src="media/14213891828854/14215898337076.jpg" alt=""/>￼￼￼￼￼</p>

<p>下载后运行并登入，会自动下载4.6.1版的Unreal Editor，如下图，点Launch就可以了，还可以下载旧版本的Unreal Editor，如右边我就下载了4.5.1版的。╮(╯▽╰)╭  ，如果我是用不到C++我花这些时间到底在折腾什么？！！！</p>

<p><img src="media/14213891828854/Snip20150118_4.png" alt="Snip20150118_4"/>￼￼￼￼￼</p>

<h2 id="toc_5">关于UnrealEngine 4的文档和其他</h2>

<p>之前说UE4文档不如Unity3d好，但是我仔细看了，也是相当全面的，学会大概不成问题，更何况youtube上还有大量的视频可以看。C++也不成问题，按《游戏引擎架构》中说的，游戏中用到的C++不会太复杂，太复杂大不了不做那种特性就好。所以引擎部分应该不会对我产生大的难度了。但是做游戏引擎只是一小部分，最最重要部分：内容和玩法！首先说内容，这部分要学画画和3D了，而学3D软件对我来说也不成问题，只是画画目前还没有任何比较靠普的路子能成，至于动画随便弄一下然后买本《动画师生存手册》看看到底要如何了，也没有太大把握。。玩法部分，随便弄弄应该可以。因为时间不多只有一年，所以几个东西要并行学习，边学边加上引擎综合考虑。大概是这样想法先。</p>

]]></content>
  </entry>
  
</feed>
