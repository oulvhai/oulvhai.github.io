<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Coder For Art]]></title>
  <link href="http://coderforart.com/atom.xml" rel="self"/>
  <link href="http://coderforart.com/"/>
  <updated>2016-01-19T10:29:43+08:00</updated>
  <id>http://coderforart.com/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://www.mweb.im/">MWeb</generator>
  
  <entry>
    <title type="html"><![CDATA[MWeb 1.9.3 发布！图床支持七牛、修正发布到 Wordpress https 问题、中文版不能发布到 Medium 问题等]]></title>
    <link href="http://coderforart.com/mweb-1.9.3-release.html"/>
    <updated>2016-01-19T09:29:55+08:00</updated>
    <id>http://coderforart.com/mweb-1.9.3-release.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">详细更新说明：</h2>

<p>新增：</p>

<ul>
<li>图床功能现在支持七牛 (qiniu.com) 了</li>
<li>文档库增加清倒废纸篓功能</li>
<li>全屏快捷键：Control + CMD + F</li>
<li>发布到印象笔记时会记住上一次选择的笔记本</li>
</ul>

<p>修正：</p>

<ul>
<li>发布到 Wordpress 和 MetaWeblog API 不支持 https 问题</li>
<li>中文版不能发布到 Medium 问题</li>
<li>导出 PDF 选择带目录时某些情况下目录结构不对问题</li>
<li>特殊文档不能正确解析问题（CPU 100%，切换文档不能显示）</li>
<li>像 wow_great_stuff 这种写法不会解析成下划线了</li>
<li>其它一些 Bug 修正和细节改进。</li>
</ul>

<span id="more"></span><!-- more -->

<h2 id="toc_1">七牛图床设置详细说明</h2>

<p>如下图，进入 MWeb 的偏好设置 - 发布服务里，本地图片上传服务中，点右边的 <code>七牛云存储</code> 按钮，会跳出如下图的新增窗口：<br/>
<img src="media/14531669957228/14531677609529.jpg" alt="" style="width:697px;"/></p>

<ul>
<li>名称：填入自定的名称即可。</li>
<li>API 地址：用默认这个即可，也可以用另外的，详细请参考：<a href="http://developer.qiniu.com/docs/v6/api/reference/up/upload.html">http://developer.qiniu.com/docs/v6/api/reference/up/upload.html</a> 请求头部中的 Host 那里。</li>
<li>空间名称：你在七牛中新增的空间的名称。</li>
<li>Access Key 和 Secret Key：在 七牛个人首页 - 帐号 - 密钥 中可以找到，网址通常为：<a href="https://portal.qiniu.com/setting/key">https://portal.qiniu.com/setting/key</a>。</li>
<li>图片 URL 前缀：这个要去到空间，随便上传一张图，选中后就可以看到外链地址，这样就知道 URL 前缀了。</li>
</ul>

<p>设置完后可以点验证按钮，选择一张图片验证一下是否设置成功。设置成功后，打开要把本地图片上传到图床的文档，点软件右上角的 <code>分享</code> 按钮，在弹出的菜单中选择 <code>把本地图片上传至图床</code> ，如下图：<br/>
<img src="media/14531669957228/14531685550447.jpg" alt=""/></p>

<p>上面的下拉框可选择增加了的图床服务，中间会列出文档中的所有本地图片。选择刚刚新增的图床服务，点 <code>上传本地图片</code> 按钮即可。当文档中有新增的本地图片，重新调出这个界面，再点 <code>上传本地图片</code> 按钮即可把新增的图片上传。</p>

<h2 id="toc_2">分享一个图床服务的使用小技巧</h2>

<p>一般的博客、文章服务网站都支持查看 HTML 原码和直接填入 HTML 代码的，这种的话，点击本地图片上传至图床窗口中的 <code>复制 HTML</code> 按钮，然后粘贴即可。但是也有很多网站是不支持直接填入 HTML 代码的，比如说微薄中的发文章功能、微信公共号中的发文章功能等等。对于这些，可以点击 <code>新建文档</code> 按钮，这时 MWeb 会把文档中的本地图片地址替换为上传到图床后的地址并打开新建的文档。选择 视图菜单 - 实时预览 或者用快捷键 <code>CMD + R</code> 打开实时预览窗口，然后 <code>CMD + A</code> 全选预览中的文本和图片，<code>CMD + C</code> 复制。 然后再用 <code>CMD + V</code> 粘贴进不支持填入 HTML 代码的网站即可。下图为我粘贴到微薄文章中的效果。<br/>
<img src="media/14531669957228/14531698229567.jpg" alt=""/></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb 1.9 发布！新图标、编辑器大改进、导出 PDF 改进、增加图床功能、中文版等！]]></title>
    <link href="http://coderforart.com/mweb-1.9.1-release.html"/>
    <updated>2015-12-18T10:19:05+08:00</updated>
    <id>http://coderforart.com/mweb-1.9.1-release.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">新图标</h2>

<p><img src="media/14504051456811/1024.png" alt="" style="width:256px;"/><br/>
换了一个新的图标，新图标是由 Producter <a href="http://weibo.com/u/5642390620">http://weibo.com/u/5642390620</a> 设计的，MWeb 终于有了一个高大上的图标了！非常感谢 Producter！</p>

<span id="more"></span><!-- more -->

<h2 id="toc_1">编辑器大改进</h2>

<p>之前打字时会明显地看到字体颜色变化过程，现在不会了。之前在自定编辑器主题时，如果设置标题字体比较大，会明显看到字体变大过程，现在也修正了这个问题。MWeb 一直都是花比较多的时间在编辑器改进上，之后的版本也会这样做。</p>

<h2 id="toc_2">导出为 PDF 改进</h2>

<p>之前导出的 PDF 中，如果有 TOC 和 footnote，在 PDF 中点击时，是不正常的，不会跳到想要的位置。1.9 版修正了这个问题！另外 1.9 版在导出时还可以选择是否为 PDF 生成大纲视图（目录）。要注意的是这两个功能在 Lite 版中是没有的。现在开始慢慢加强和改进付费版了，希望能有多一点人购买，然后购买了的朋友也能觉得值，另外图床功能也是只支持付费版的。下图是为 PDF 增加目录后的效果。<br/>
<img src="media/14504051456811/14504125781979.jpg" alt="" style="width:847px;"/></p>

<h2 id="toc_3">增加图床功能</h2>

<p>MWeb 在编写 Markdown 文档时，不管文档库还是外部模式，插入图片都是复制原图到合适的位置，然后以相对引用的方式引用图片。这样做的好处是在编写文档时会感到非常顺畅，不会有等待图片上传完然后再复制地址的问题，然后图片也不会依赖于网络服务。这样就几乎不会丢失图片了（插入非图片也是这样处理的）。</p>

<p>当要把文档发布出去时，比如说导出 html，MWeb 会把本地的图片也一并导出。另外发布到 evernote、wordpress、blogger、medium 等服务，MWeb 也是会把本地图片上传到所属的服务。</p>

<p>现在再增加了图床功能，这样的话基本上就满足大部分使用情景了。下面介绍一下怎么使用这个图床功能。</p>

<h3 id="toc_4">增加图床服务</h3>

<p>像发布服务那样，首先要增加图床服务，在 偏好设置 - 发布服务 里，目前可以增加三种图床服务：Google Photos、imgur、自定义。前两种不用多说，点击然后用所属帐号登入即可，注意先翻墙就没问题了。主要要介绍的是<strong>自定义</strong>，如下图：<br/>
<img src="media/14504051456811/14504079331389.jpg" alt="" style="width:605px;"/></p>

<p>我会使用 <a href="https://sm.ms/doc/">https://sm.ms/doc/</a> 这个图床做介绍，主要是它的 API 最简单，按 API 说明填入相关信息如下：<br/>
<img src="media/14504051456811/14504081770612.jpg" alt="" style="width:605px;"/></p>

<p>需要说明的有： <br/>
<code>POST File Name</code>：这个是指表单的图片上传的名称<br/>
<code>图片 URL 路径</code>：是指返回的 JSON 结果中的图片网址值的路径。比如说 sm.ms 说明文档中，返回的 JSON 结果如下：</p>

<pre><code class="language-js">{
    &quot;code&quot;: &quot;success&quot;,
    &quot;data&quot;: {
        width: 1157,
        height: 680,
        filename: &quot;image_2015-08-26_10-54-48.png&quot;,
        storename: &quot;56249afa4e48b.png&quot;,
        size: 69525,
        path: &quot;/2015/10/19/56249afa4e48b.png&quot;,
        hash: &quot;nLbCw63NheaiJp1&quot;,
        timestamp: 1445239546,
        url: &quot;https://ooo.0o0.ooo/2015/10/19/56249afa4e48b.png&quot;,
        delete: &quot;https://sm.ms/api/delete/nLbCw63NheaiJp1&quot;
    }
}
</code></pre>

<p>可以看到它返回的图片的网址是 data 下的 url 字段的值，所以就填入 data/url，要注意的是，只支持 JSON 返回结果。</p>

<p><code>图片 URL 前缀</code>：这个是由于有些 API 可能只返回图片的保存位置，比如说七牛（只返回 key 和 hash），它还要在前面加上一个固定的网址才能得到真正的图片网址，可以参考下图的设置。下图是填好后并点验证按钮测试后的结果。点验证按钮，会让你选择一张图片，选择好会直接用填入的设置上传图片，如果上传成功，则会跳出如下图的提示。<br/>
<img src="media/14504051456811/14504094805560.jpg" alt="" style="width:621px;"/></p>

<p><strong>重要提示</strong>：目前还不支持七牛，因为七牛的 token 好像最多 12 个小时内就会无效了，也暂时不能生成长久 token （是否这样？）。连官方的 objc SDK 都是直接说从服务器获取 token 的。然后也不支持像 Google Photos 或 imgur 那样的 OAuth 2.0 的方式。貌似可以用官方文档说明的算法生成 token，但是 objc SDK 却不带这个，我暂时也懒得研究了。折中的方法是用官方提供的 php SDK，另外写一个  <a href="https://sm.ms/doc/">https://sm.ms/doc/</a> 这种类型的 API 自用。</p>

<h3 id="toc_5">上传本地图片至图床</h3>

<p><img src="media/14504051456811/14504103924368.jpg" alt="" style="width:456px;"/></p>

<p>图床服务增加后，如上图选择右上角的分享按钮下的 把本地图片传至图床 菜单，会出来如下图的窗口：<br/>
<img src="media/14504051456811/14504106293732.jpg" alt="" style="width:771px;"/></p>

<p>选择要上传到的图床后，点 <code>上传本地图片</code> 按钮即可。图片会自动上传并在<code>远程：</code> 右方显示上传后的网址。点右边的三个按钮可以删除、查看和复制网址。当你删除远程图片或者在文档中有新增本地图片时，只要再点一次 <code>上传本地图片</code> 按钮即可，未上传的图片会自动上传。 下图是点 <code>上传本地图片</code> 按钮后的结果。另外三个按钮不用介绍应该会用了。</p>

<p><img src="media/14504051456811/14504111413111.jpg" alt="" style="width:757px;"/></p>

<p>再发一张传到七牛的效果：<br/>
<img src="media/14504051456811/14504112138619.jpg" alt=""/></p>

<h2 id="toc_6">其他改进</h2>

<ul>
<li>导出为 html 增加覆盖已有文件选项。</li>
<li>增加简体中文和繁体中文语言支持。</li>
<li>一些 Bug 修正和细节改进。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb 1.8.3 发布！增加发布到 Medium、LaTex 预览修正、编辑器优化等]]></title>
    <link href="http://coderforart.com/mweb-1.8.3-release.html"/>
    <updated>2015-11-05T09:36:32+08:00</updated>
    <id>http://coderforart.com/mweb-1.8.3-release.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">发布到 Medium 详细说明</h2>

<p>在 <code>Preferences</code> - <code>Publishing</code> 可增加发布到 Medium 服务，点击后会出来以下画面：</p>

<p><img src="media/14466873920420/14466881412766.jpg" alt="" class="mw_img_center" style="width:609px;display: block; clear:both; margin: 0 auto;"/></p>

<span id="more"></span><!-- more -->

<p>点 <a href="https://medium.com/me/settings">Settings page</a> （oops! 图中打错字！）进入 Medium 设置，拉到最下面，会发现 Intgration Tokens，填入想要的名称标识，并点 <code>Get integartion token</code> 按钮，就会得到一串字符，复制并返回 MWeb，粘贴到 Integration Token 字段，并点 <code>OK</code> 按钮即可，如下图为所说的字符串。</p>

<p><img src="media/14466873920420/14466886017072.jpg" alt="" class="mw_img_center" style="width:774px;display: block; clear:both; margin: 0 auto;"/></p>

<p>目前 Medium 的 API 还不支持更新，所以现在只支持发布，然后 Medium 的图片上传 API 也还没开放，所以正常情况下也不支持本地图片自动上传，但是如果你有增加了发布到 Blogger 的服务，可以勾选 Upload local image to Google Picasa 这个选项，这样就支持本地图片自动上传了。</p>

<p>如下图左边是没有增加发布到 Blogger 服务的情况，可以看到选项是灰色的，右边是已经增加了发布到 Blogger 服务的情况，当勾选之后，MWeb 就会把本地图片自动上传至 Picasa，然后再发布到 Medium。发布到 Medium 之后，Medium 会自动把 Picasa 的图片保存到自己的服务器。</p>

<p><img src="media/14466873920420/publish-to-medium.jpg" alt="publish-to-mediu" class="mw_img_center" style="width:1440px;display: block; clear:both; margin: 0 auto;"/></p>

<p><strong>注意：</strong>发布到 Medium 的功能 Lite 版是没有的。</p>

<h2 id="toc_1">其它更新</h2>

<ul>
<li>修正 LaTex 编辑器内预览卡死、$$ 语法不出现公式问题。</li>
<li>修正脚注如果出现第二条引用会出错问题。</li>
<li>编辑器性能提升了点，现在编辑十万多字的文档比之前好了很多。也修正了编辑时有时候会跳动的 Bug。</li>
<li>其他小修正。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb 1.8 发布！LaTex 语法高亮和编辑器内预览、EL Capitan 优化、Bug 修正等]]></title>
    <link href="http://coderforart.com/mweb-1.8.1-release.html"/>
    <updated>2015-10-24T16:57:41+08:00</updated>
    <id>http://coderforart.com/mweb-1.8.1-release.html</id>
    <content type="html"><![CDATA[
<p><img src="media/14456770612819/cn-s-5-small.jpg" alt="" style="width:1280px;"/></p>

<ul>
<li>增加记忆文档滚动位置的功能，之前在切换文档时，会总是跳到顶部，现在会记住你之前滚动的位置，下次切换时会还原（Pro Only）。</li>
<li>增加 LaTex 语法高亮和编辑器内实时预览。之前写 LaTex 想要预览的话，要打开预览窗口，而且不大好用，现在可以在编辑器内实时预览，已经非常好用了（Pro Only）。</li>
<li>实时预览窗口工具栏上增加 Above 的选项，选中后会一直在编辑器上面。这个选项给切换文档时喜欢先看预览效果的朋友。</li>
<li>增加支持 EL Capitan 的 Split View 模式，现在可以在 Split View 的左边放编辑器，右边放实时预览窗口了。</li>
<li>如果取消 <code>Resize window when hide pane</code> 选项的话，在全屏模式下也支持 CMD + 1， CMD + 3 切换显示面板了。</li>
<li>修正文档库分类拖动和排序问题</li>
<li>修正文档列表拖动排序闪退问题</li>
<li>修正打开某些文档 CPU 会 100%， 文档库文档点开后要选择才看到字体问题。</li>
<li>修正文档库中文档列表输入标题前不能同步显示，直到写入内容才会同步显示的问题</li>
<li>修正文档库新增分类直接 Build Site 闪退问题。</li>
<li>修正 CMD + F 打开查找面板后，不能用 CMD + Option + F 切换为替换面板的问题。</li>
<li>修正一些文档导出为 PDF 闪退问题。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[准备入坑 C++ 和 UE4，花了两天时间研究了一下，写些大概方向]]></title>
    <link href="http://coderforart.com/14431468507612.html"/>
    <updated>2015-09-25T10:07:30+08:00</updated>
    <id>http://coderforart.com/14431468507612.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">C++ 学习</h2>

<p>C++ 博大精深，用途广泛，虽然现在新语言不断，好语言不少，但是 C++ 的王者地位就从来没有被撼动过，然后我认为，计算机软件方面的东西，并不是越新越好，而是历史越久的，现在也还在广泛使用的东西，通常都是成熟稳定的，都是经得起现实世界考验的！</p>

<p>C++ 太难学了，但是如果只针对特定领域，只学习跟特定领域相关的，我想应该会容易入门一点。我学习 C++ 的目的是为了用 UE4，所以就只针对 UE4 做优化学习了。</p>

<span id="more"></span><!-- more -->

<p>首先是 UE4 所使用的 C++ 版本。从 <a href="https://docs.unrealengine.com/latest/INT/Programming/Development/CodingStandard/index.html">Epic Games Coding Standard</a> 了解到 UE4 是使用 C++ 11。然后由于我已经有了一些编程经验，所以一开始只要了解 C++ 11 的语法就好。</p>

<p>学习 C++，我认为只要参考皓子哥的<a href="http://coolshell.cn/articles/4119.html">如何学好 C++ 语言</a>就可以了。可以看到开始学的建议的书是《C++ Primer》和《C++程序设计语言》。两本书我其实都了解了一下，我觉得《C++ Primer》比较合适我。然后了解了一下这本书的中文翻译的作者，普遍觉得第三版（潘爱民翻译）比较不错，然后就决定用这一版了。唯一的问题是第三过于古老，所以是没有 C++ 11 的新特性的介绍的。然而这关系不大，再找一本书看即可。调查得知，Wikipedia 的 C++ 11 词条已经差不多可以了，网址为：<a href="https://zh.wikipedia.org/wiki/C%2B%2B11">https://zh.wikipedia.org/wiki/C%2B%2B11</a>。如果还要深入一点，也找到一本：《深入理解C++11:C++11新特性解析与应用》。另外皓子哥也写了一篇 C++ 11 的博文，值得一读：<a href="http://coolshell.cn/articles/5265.html">http://coolshell.cn/articles/5265.html</a></p>

<p>其实我昨天和前天就是看上面所说的资料，对 C++ 11 的语法已经有了模糊的了解了。我觉得下一步应该是简单粗爆：直接撸代码！我是决定直接看 UE4 的文档开撸的。为什么不对着书里的代码撸一遍，然后才是 UE4 的文档？主要是觉得既然是针对特定领域，那么越早上手越好，然后当再回过来再看以上的资料时，就很有目的性了。如果觉得困难，或者有些语法不大清晰，再查回来就好。这样做应该也会有趣些。</p>

<p><strong>注：</strong>在找资料的过程中，发现一本好书，然后竟然是公开的，大讚作者！！也在这里记一下，书名为：《C++并发编程》，作者：陈晓伟，gitbook 地址：<a href="https://www.gitbook.com/book/chenxiaowei/cpp_concurrency_in_action/details">https://www.gitbook.com/book/chenxiaowei/cpp_concurrency_in_action/details</a>。</p>

<h2 id="toc_1">UE4 文档</h2>

<p>这个我大概研究了一下，我发现现在的 UE4 文档真是越来越完善了。我之前也有写过两篇文章，所以是了解过的。然后这次入坑，其实也是为了继续之前的想法。这里就随便写一下大概，当是笔记就好。</p>

<p>UE4 C++ 部分的文档全部都在：<a href="https://docs.unrealengine.com/latest/INT/Programming/index.html">https://docs.unrealengine.com/latest/INT/Programming/index.html</a> 这里了。我的计划是：</p>

<ul>
<li>看 <a href="https://docs.unrealengine.com/latest/INT/GettingStarted/Terminology/index.html">https://docs.unrealengine.com/latest/INT/GettingStarted/Terminology/index.html</a> 了解个大概。</li>
<li>看并做完 <a href="https://docs.unrealengine.com/latest/INT/Engine/QuickStart/index.html">https://docs.unrealengine.com/latest/INT/Engine/QuickStart/index.html</a> 了解一下 Unreal Editor 的大概使用。</li>
<li>看 <a href="https://docs.unrealengine.com/latest/INT/Programming/Introduction/index.html">https://docs.unrealengine.com/latest/INT/Programming/Introduction/index.html</a> 了解 C++ 在 UE4 的情况。再看上面所说的 Epic Game Coding Standard。</li>
<li>按顺序看完和撸完：<a href="https://docs.unrealengine.com/latest/INT/Programming/Tutorials/index.html">https://docs.unrealengine.com/latest/INT/Programming/Tutorials/index.html</a> 里的 Beginner 和 Intermediate。</li>
</ul>

<p>以上的东西搞完后，就试试做一个简单的游戏看看能否做出来。在过程中如果有任何知识问题随时补。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb 1.7.3 版已提交！兼容 EL Capitan、外部模式增强、Bug 修正等]]></title>
    <link href="http://coderforart.com/mweb-1.7.3-release.html"/>
    <updated>2015-09-23T09:06:05+08:00</updated>
    <id>http://coderforart.com/mweb-1.7.3-release.html</id>
    <content type="html"><![CDATA[
<p>这一版主要是修正 EL Capitan 的问题。</p>

<p>由于很快就中秋了，到时候博主要回乡下过中秋，加上 EL Capitan GM 版非常稳定好用，所以就不等 EL Capitan 正式版发布，先提交到 MAS 了。顺便介绍文章也一并发了，也不等审核通过了。</p>

<p>主要改进有：</p>

<span id="more"></span><!-- more -->

<ul>
<li>兼容 EL Capitan</li>
<li>外部模式增加是否列出子文件夹的文档（Load Sub Folder Documents）的选项。右键引入的文件夹 - Edit - Load Sub Folder Documents。注意：这个功能 Lite 版是没有的。</li>
<li>图片居左、居中、居右的语法现在可以不用写宽度了，比如说：<code>![-c](pic.jpg)</code> 就会为居中了。居左：<code>-l</code>，居右：<code>-r</code>。</li>
<li>字数统计和大纲视图增加快捷键：CMD + 8</li>
<li>文档设置增加快捷键：CMD + 7</li>
<li>发布到 Wordpress 的 Custom URL 栏会按标题自动转换为合适的 URL</li>
<li>修正打开 Preferences 的 Bug。</li>
</ul>

<p>另外 mweb-medium-like 主题有修正文章列表的 CSS 问题和增加文章可填入 SEO。都放到 github 了：<a href="https://github.com/oulvhai/mweb-medium-like">https://github.com/oulvhai/mweb-medium-like</a>，要更新的话，除了覆盖原来的主题外，还要在 <code>Preferences</code> - <code>Extension</code> 中，选择网站，选择 <code>Document Extension</code>，导入 <code>extensions/Document Extension.json</code> 这个档。如图是填入 SEO 的位置效果图。</p>

<p><img src="media/14429703655514/14429725606405.jpg" alt="" style="width:859px;"/></p>

<p>最后附上外部模式列出子文件夹的文档的效果图</p>

<p><img src="media/14429703655514/14429712479034.jpg" alt="" style="width:1226px;"/></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb 1.7.1 版发布！支持导出为 RTF 和 Docx、发布到 Evernote 带样式、文档库备份和新网站主题等大量改进！]]></title>
    <link href="http://coderforart.com/mweb-1.7.1-release.html"/>
    <updated>2015-09-14T09:23:51+08:00</updated>
    <id>http://coderforart.com/mweb-1.7.1-release.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">编辑器及发布服务改进</h2>

<p>增加设置图片宽度和居左、居右、居中的语法。<br/>
如：<code>![图片说明-w450](pic.jpg)</code> 这样表示设置图片宽度为 450。其中 <code>-w450</code> 为设置语法，生成 HTML 时会自动移除。<code>w</code> 表示设置宽度，居左为：<code>-l400</code>，居右为 <code>-r400</code>，居中为 <code>-c400</code>，其中前面的 <code>-</code> 为可选，比如设置一图片宽度为 500 并居中：<code>![c500](pic.jpg)</code>。<br/>
编辑器内显示的图片增加了右键菜单，右键图片即可查看图片大小、打开图片、复制图片。</p>

<p><img src="media/14421938311781/mweb-img-size.jpg" alt="mweb-img-size"/></p>

<span id="more"></span><!-- more -->

<p>增加导出为 RTF、Docx 和复制为富文本（Copy as Rich Text）功能。其中复制为富文本功能复制后，可以直接把格式化的内容粘贴到 mail 和 pages，带图片和格式。需要说明的是：导出为 Docx 功能目前并不带图片。</p>

<p><img src="media/14421938311781/mweb-docx-rtf.jpg" alt="mweb-docx-rtf"/></p>

<p>发布到 Evernote、印象笔记现在自带漂亮的默认样式。<br/>
<img src="media/14421938311781/mweb-evernote-format.jpg" alt="mweb-evernote-format"/></p>

<p>icon 有所调整，看上去更舒服了点，界面的颜值也有所提升。</p>

<p>MWeb 从 1.7 版开始将自带不可改动的预览 CSS，方便日后优化和更新。目前自带有 5 种，名称都是以 <code>mweb-</code> 开头。</p>

<p>编辑器右键增加 Copy HTML 菜单项。</p>

<p>增加是否用空格替换 Tabs 选项（Insert spaces instead of tabs），在 <code>Preferences</code> - <code>General</code> 里可以设置。</p>

<p>增加编辑器行最大宽度设置（Editor Line Width），默认为 800，这个设置一般的 Markdown 编辑器都有，主要是全屏写作时，内容能居中，这样看上去会舒服点。 <code>Preferences</code> - <code>Themes</code>。</p>

<p>搜寻改进：当搜寻时，如果打开搜寻结果中的文档，会直接以搜寻的关键字查找打开的文档并高亮显示搜寻的关键字的位置。</p>

<h2 id="toc_1">文档库改进</h2>

<p>文档库增加两个静态网站模版，分别为：mweb-medium-like 和 mweb-foundation-book。mweb-medium-like Demo 网址：<a href="http://coderforart.com/">http://coderforart.com/</a>，使用说明：<a href="http://coderforart.com/mweb-medium-like-theme.html">http://coderforart.com/mweb-medium-like-theme.html</a>。mweb-foundation-book Demo 网址和使用说明：<a href="http://coderforart.com/objccndemo/">http://coderforart.com/objccndemo/</a></p>

<p>文档库增加备份功能，按狡兔三窟的原理，可以备份到三处地方，<code>Preferences</code> - <code>Backup</code>。<br/>
<img src="media/14421938311781/mweb-backup.jpg" alt="mweb-backup"/></p>

<p>文档库现在支持把列表中的文档拖拽到左边的分类中以设置文档的分类。需要说明的是，这个功能也支持移除分类。比如说 A 文档设置了属于 <code>MWeb</code> 分类，如果想移除，可以再拖拽到 <code>MWeb</code> 这个分类，则会进行移除操作。</p>

<h2 id="toc_2">其他改进</h2>

<p>外部模式现在支持拖拽移动子文件夹。<br/>
其他的一些小修正</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb mweb-medium-like 网站主题]]></title>
    <link href="http://coderforart.com/mweb-medium-like-theme.html"/>
    <updated>2015-09-10T10:02:34+08:00</updated>
    <id>http://coderforart.com/mweb-medium-like-theme.html</id>
    <content type="html"><![CDATA[
<p>MWeb 1.7 版制作了新的博客/网站主题 mweb-medium-like。这个主题是基于 Foundation 前端框架做的，对移动端非常友好！<br/>
本博客的主题也是使用 mweb-medium-like。</p>

<span id="more"></span><!-- more -->

<h2 id="toc_0">使用方法</h2>

<h3 id="toc_1">设置网站为 mweb-medium-like 主题</h3>

<p>MWeb 1.7 版会自带 mweb-medium-like 主题，所以先设置你的网站的主题为 mweb-medium-like。 mweb-medium-like 主题也上传到 github 了，你也可以去 <a href="https://github.com/oulvhai/mweb-medium-like">https://github.com/oulvhai/mweb-medium-like</a> 看看是否有修正或者提建议。如下图我选择的是 Coder For Art。<br/>
<img src="media/14418505549476/14418512636784.jpg" alt="" style="width:688px;"/></p>

<h3 id="toc_2">导入网站扩展文件和文档扩展文件</h3>

<p>下载 <a href="media/14418505549476/Site%20Extension.json">Site Extension</a> 这个网站扩展设置文件，在 github 中这个文档在 <code>extensions/Site Extension.json</code> 里。</p>

<p>再转到 <code>Perfernces</code> - <code>Extensions</code>，Setting Site 中选择刚刚设定了 mweb-medium-like 主题的 Coder For Art 网站，然后切换到 Site Extension 标签，点 <code>Import</code> 导入刚刚下载的 Site Extension.json 设置文档。如下图是导入后的效果。<br/>
<img src="media/14418505549476/14418514048396.png" alt="" style="width:629px;"/><br/>
同样也下载 <a href="media/14418505549476/Document%20Extension.json">Document Extension</a> 这个文档扩展设置文件，切换到 Document Extension 并导入。</p>

<h3 id="toc_3">设置网站扩展</h3>

<p>网站/博客中往往会有一些个人信息要设定，刚刚导入的网站扩展就是为了设定这些信息的。mweb-medium-like 主题目前可以设定的有：个人图片、weibo、github、facebook、email 等等信息，还可以为网站/博客增加 disqus 和 多说的评论支持。其中 <code>logo path</code> 就是设置个人图片的，你可以在任何属于该网站的文档中（通常可以用 about 或 index）拖入图片，然后复制图片的地址到 <code>logo path</code> 这个字段中，如下图是我的博客 Coder For Art 的设置：<br/>
<img src="media/14418505549476/14418526095552.png" alt="" style="width:629px;"/><br/>
设置 disqus 和多说评论支持只需要填入两者的 shortname 即可。在 disqus 或多说注册完成后都可以得到 shortname。如果你想要两者的评论都支持，两者都填入即可，比如说我的 Coder For Art 博客就是两者的评论都支持，如图：<br/>
<img src="media/14418505549476/14418528119858.png" alt="" style="width:659px;"/></p>

<h3 id="toc_4">文档扩展的使用</h3>

<p>mweb-medium-like 主题设计了三个文档扩展：small img 用于文章列表时放在描述的左边，featured image 用于放在标题上面，excerpt 为描述，一般情况下 MWeb 是直接抓取文章内 read more 前的内容，如果有填入 excerpt 则会优先取 excerpt 为描述。<br/>
<img src="media/14418505549476/14418531852840.jpg" alt="" style="width:464px;"/></p>

<p>如下图第一篇演示文章为设置为 small image 的效果，第二篇文章为设置了 featured image 的效果：<br/>
<img src="media/14418505549476/14418537443808.jpg" alt="" style="width:724px;"/></p>

<h3 id="toc_5">设置 About 页面</h3>

<p>mweb-medium-like 主题的主菜单加上了 about 页面，所以请设置一个 about 页面，否则点了主菜单的 about 连接后会出错。如下图是 Coder For Art 博客的 About 页的设置：<br/>
<img src="media/14418505549476/14418540682024.jpg" alt="" style="width:766px;"/></p>

<h2 id="toc_6">其他有意思的玩法</h2>

<p>mweb-medium-like 主题是基于 Foundation 做的，然后因为 Markdown 支持 HML，所以如果你会 HTML，可以做出很有意思的效果，比如说：</p>

<ul class="example-orbit" data-orbit>
  <li>
    <img src="media/14418505549476/tt1.jpg" alt="" />
    <div class="orbit-caption">女天狗图 1</div>
  </li>
  <li>
    <img src="media/14418505549476/tt2.jpg" alt="" />
    <div class="orbit-caption">女天狗图 2</div>
  </li>
  <li>
    <img src="media/14418505549476/tt3.jpg" alt="" />
    <div class="orbit-caption">女天狗图 3</div>
  </li>
</ul>

<p>上面的效果，把图拖拽进来后，再修改图片地址即可。全部 HTML 如下：</p>

<pre><code class="language-html">&lt;ul class=&quot;example-orbit&quot; data-orbit&gt;
  &lt;li&gt;
    &lt;img src=&quot;media/14418505549476/tt1.jpg&quot; alt=&quot;&quot; /&gt;
    &lt;div class=&quot;orbit-caption&quot;&gt;女天狗图 1&lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;img src=&quot;media/14418505549476/tt2.jpg&quot; alt=&quot;&quot; /&gt;
    &lt;div class=&quot;orbit-caption&quot;&gt;女天狗图 2&lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;img src=&quot;media/14418505549476/tt3.jpg&quot; alt=&quot;&quot; /&gt;
    &lt;div class=&quot;orbit-caption&quot;&gt;女天狗图 3&lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</code></pre>

<p>缩略图效果，点小图看大图，如下：</p>

<ul class="clearing-thumbs small-block-grid-2" data-clearing>
  <li><a href="media/14418505549476/tt4.jpg"><img data-caption="女天狗 4" src="media/14418505549476/tt4-s.jpg"></a></li>
  <li><a href="media/14418505549476/tt5.jpg"><img data-caption="女天狗 5" src="media/14418505549476/tt5-s.jpg"></a></li>
</ul>

<p>上面的效果的全部 HTML 如下：</p>

<pre><code class="language-html">&lt;ul class=&quot;clearing-thumbs small-block-grid-2&quot; data-clearing&gt;
  &lt;li&gt;&lt;a href=&quot;media/14418505549476/tt4.jpg&quot;&gt;&lt;img data-caption=&quot;女天狗 4&quot; src=&quot;media/14418505549476/tt4-s.jpg&quot;&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;media/14418505549476/tt5.jpg&quot;&gt;&lt;img data-caption=&quot;女天狗 5&quot; src=&quot;media/14418505549476/tt5-s.jpg&quot;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</code></pre>

<p>效果 1 的 Foundation 参考网址：<a href="http://foundation.zurb.com/docs/components/orbit.html">http://foundation.zurb.com/docs/components/orbit.html</a><br/>
效果 2 的 Foundation 参考网址：<a href="http://foundation.zurb.com/docs/components/clearing.html">http://foundation.zurb.com/docs/components/clearing.html</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[把 MWeb Lite 的文档库文档和数据搬到 MWeb 正式版中]]></title>
    <link href="http://coderforart.com/move-lite-data-to-mweb.html"/>
    <updated>2015-07-31T15:28:02+08:00</updated>
    <id>http://coderforart.com/move-lite-data-to-mweb.html</id>
    <content type="html"><![CDATA[
<p>MWeb Lite 版的文档库中的文档要搬到 MWeb 正式版中，如果 Lite 版的文档中没有图片或者只有少量图片，可以用导入导出为 Markdown 的方法。</p>

<p>否则的话请用以下方式（注意下面这个方法会将 MWeb 正式版的所有内容都换为 Lite 版）：</p>

<span id="more"></span><!-- more -->

<h2 id="toc_0">1. 打开 Lite 版文档库文档所在的文件夹</h2>

<p><img src="media/14383276824570/14383283373250.jpg" alt="" style="width:634px;"/></p>

<p>如上图，选择 Lite 版文档库中的任何一篇文章，右键标题栏，从图中可以看到这个文档的保存位置，选择 <code>MWeb</code> 并点击，会打开 Lite 版文档库中的文档所保存的位置，会打开如下图的 Finder 窗口：<br/>
<img src="media/14383276824570/14383286526093.jpg" alt="" style="width:800px;"/><br/>
请注意上图中选中的 <code>LocalData</code> 文件夹，文档库中的所有数据都在这里。</p>

<h2 id="toc_1">2. 打开 MWeb 正式版文档库文档所在的文件夹</h2>

<p><img src="media/14383276824570/14383284793437.jpg" alt="" style="width:670px;"/></p>

<p>如下图，同样选择 <code>MWeb</code> 并点击就可以了，会打开如下图的 Finder 窗口：<br/>
<img src="media/14383276824570/14383287121781.jpg" alt="" style="width:800px;"/><br/>
请注意上图中选中的 <code>LocalData</code> 文件夹，文档库中的所有数据都在这里。</p>

<h2 id="toc_2">3. 搬移 Lite 版的数据到 MWeb 正式版中</h2>

<p><strong>重要：</strong>下面的操作前，请一定要先备份好 MWeb 正式版的 <code>LocalData</code> 文件夹。</p>

<ol>
<li>退出 Lite 版和正式版 App，注意是退出 <code>CMD + Q</code>。 </li>
<li>要搬移 Lite 版的数据到正式版中，非常简单，就是将 Lite 版的 <code>LocalData</code> 文件夹换到正式版中即可。所以就是删除正式版的 <code>LocalData</code> 文件夹，然后把 Lite 版的 <code>LocalData</code> 文件夹复制进来。</li>
<li>重新启动 MWeb 正式版。</li>
<li>搬移完成！</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb 1.6 发布！Dark Mode、全文搜寻、发布到Wordpress、Evernote 等支持更新、编辑/预览视图模式等]]></title>
    <link href="http://coderforart.com/mweb-1.6.1-release.html"/>
    <updated>2015-07-23T09:47:29+08:00</updated>
    <id>http://coderforart.com/mweb-1.6.1-release.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">Dark Mode</h2>

<p><img src="media/14376160492620/14376218615706.jpg" alt="" style="width:993px;"/><br/>
使用 <code>View</code> - <code>Dark Mode</code> 或快捷键 <code>CMD + Option + L</code> 开启或关闭 Dark Mode。可以在设置中设置 Dark Mode 状态下编辑器所使用的样式，如下图。<br/>
<img src="media/14376160492620/14376165481845.jpg" alt=""/></p>

<span id="more"></span><!-- more -->

<h2 id="toc_1">全文搜寻</h2>

<p>文档库模式会搜寻文档库中的所有文档，外部模式只搜寻当前选择的文件夹下的文档。为方便全键盘使用，增加了 Focus Search Field（CMD + Shift + F） 和 Focus Editor（CMD + Shift + E） 两个快捷键。</p>

<h2 id="toc_2">发布服务支持更新</h2>

<p>发布到  Wordpress、Metaweblog API、Evernote、印象笔记、Wordpress.com、Blogger 现在支持<strong>更新</strong>操作了。如下图，发布过之后，再次发布，会出现红线中的是否更新的选项。<br/>
<img src="media/14376160492620/14376173522487.jpg" alt=""/></p>

<h2 id="toc_3">其他更新</h2>

<ul>
<li>增加 编辑器 &amp; 实时预览 视图模式，<code>CMD + 4</code> 可以切换到这个视图模式。</li>
<li>增加可拖拽调整发布服务的顺序。</li>
<li>增加双击在新窗口中打开文档。</li>
<li>现在可以设置文档内容高度为多少时才激活打字机滚动 (Typewriter Scrolling) 功能。在 <code>Preferences</code> - <code>General</code> 中可以设置，默认为当文档内容达到编辑器的高度的 50% 时会激活。</li>
<li>修正点击 Dock 无法显示窗口问题。</li>
<li>undo 和 redo 改进。</li>
<li>导出为 PDF 文档的边距有改进。</li>
<li>一些 Bug 修正</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb 1.5 发布！增加打字机滚动模式、发布到 Evernote、印象笔记、Wordpress.com、Blogger、编辑器内代码块语法高亮]]></title>
    <link href="http://coderforart.com/mweb-1.5.1-release.html"/>
    <updated>2015-06-05T07:23:16+08:00</updated>
    <id>http://coderforart.com/mweb-1.5.1-release.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">打字机滚动模式（Typewriter Scrolling）</h2>

<p>快捷键：<code>CMD + Option + T</code>，菜单：<code>View</code> - <code>Typewriter Scrolling</code> ，效果如下图：</p>

<p><img src="media/14316499718847/mweb-typewriter-scrolling-demo.gif" alt="mweb-typewriter-scrolling-demo"/></p>

<span id="more"></span><!-- more -->

<h2 id="toc_1">发布到 Evernote、印象笔记、Wordpress.com、Blogger</h2>

<p>一如之前的发布到 Wordpress 博客和 Metaweblog API 服务的功能一样，如果文档内有图片，也会一并发布，其中发布到 Blogger 时图片会保存到 Picasa。然后 Evernote 和 印象笔记还支持发布附件，比如说你拖进来一个 MP3，发布时也会一并发布。</p>

<p><img src="media/14334601963783/publish-evernote-ect.jpg" alt="publish-evernote-ect"/></p>

<h2 id="toc_2">编辑器内代码块语法高亮</h2>

<p>支持大量常用代码，如图：<br/>
<img src="media/14334601963783/MWeb-Editor-highlight-6-5-2.gif" alt="MWeb-Editor-highlight-6-5"/></p>

<h2 id="toc_3">其他</h2>

<ul>
<li>增加 github issues <a href="https://github.com/oulvhai/MWeb-isssues/issues">https://github.com/oulvhai/MWeb-isssues/issues</a>，下个版本将放入 Help 菜单。</li>
<li>增加改变当前行背景色选项，菜单：<code>View</code> - <code>Change Current Line Background Color</code>。</li>
<li>外部模式右键增加 Expand All 和 Collapse All。</li>
<li>一些 Bug 修正</li>
</ul>

<h2 id="toc_4">MWeb 相关网址：</h2>

<p>付费版仅售 $9.9, MAS 网址：<a href="https://itunes.apple.com/cn/app/mweb-pro-markdown-writing/id954188948?l=zh&amp;ls=1&amp;mt=12">https://itunes.apple.com/cn/app/mweb-pro-markdown-writing/id954188948?l=zh&amp;ls=1&amp;mt=12</a><br/>
免费版 MAS 网址：<a href="https://itunes.apple.com/cn/app/mweb-lite-pro-markdown-writing/id979033429?l=zh&amp;ls=1&amp;mt=12">https://itunes.apple.com/cn/app/mweb-lite-pro-markdown-writing/id979033429?l=zh&amp;ls=1&amp;mt=12</a><br/>
官网：<a href="http://zh.mweb.im/">http://zh.mweb.im/</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb 1.4.1 发布！增加引入文件夹到 MWeb 中管理，支持拖拽插入图片和实时预览，静态博客功能增强]]></title>
    <link href="http://coderforart.com/mweb-1.4.1-releases.html"/>
    <updated>2015-05-15T08:32:51+08:00</updated>
    <id>http://coderforart.com/mweb-1.4.1-releases.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">MWeb 1.4.1 版新功能：</h2>

<p>因为这次发布的功能有点多，所以一开始提交到 MAS 前就写了两篇文章特别介绍了两个重要功能，这次更新主要有：</p>

<ol>
<li>外部文档模式增加可引入文件夹到 MWeb 中管理，支持 Octpress、Jekyll 等静态博客拖拽插入图片和实时预览。请按 <code>CMD + E</code> 或者用菜单：<code>View</code> - <code>Open External</code> 打开外部文档模式，点 App 左下脚的 <code>+</code> - <code>Add External Source...</code> 增加文件夹。更多介绍请看提前写好的介绍文章：<a href="http://zh.mweb.im/mweb-1.4-add-floder-octpress-support.html">http://zh.mweb.im/mweb-1.4-add-floder-octpress-support.html</a></li>
<li>静态博客功能增强，之前写好的文章 <a href="http://zh.mweb.im/mweb-1.4-static-blog-extension.html">http://zh.mweb.im/mweb-1.4-static-blog-extension.html</a> 介绍了如何用 MWeb 的静态博客增强功能为 greyshade 模板增加播客和输出 Apple Podcast 格式的 RSS 的功能。成品的 Demo 网址为：<a href="http://coderforart.com/bitvoice/">http://coderforart.com/bitvoice/</a>。</li>
<li>实时预览增加同步滚动功能</li>
<li>分享到 Email 由原来的图片改为 RTF 格式的文档。</li>
</ol>

<span id="more"></span><!-- more -->

<h2 id="toc_1">MWeb Lite 限定</h2>

<ol>
<li>文档库 MWeb Lite 限定为 10 个文档</li>
<li>发布服务只能增加 1 个。</li>
<li>外部文档模式只能引入一个文件夹。</li>
</ol>

<p>这里说明一下， MWeb Lite 打开外部 Markdown 文档、新增、保存等等功能是不限定的，外部模式只能引入一个文件夹的限定在某些情况下已经够用了。所以 MWeb Lite 绝对不单单只是 MWeb 付费版的功能演示，MWeb Lite 的目标是轻度 Markdown 用户。</p>

<h2 id="toc_2">MWeb 1.4.3 版功能预告</h2>

<p>在 1.4.1 版审核的时间里，我做了 Typewriter Scrolling（中文是打字机滚动？） 的功能。因为感觉这个功能蛮好用的，所以预告一下，请看下边的 GIF 图就可以了解了：</p>

<p><img src="media/14316499718847/mweb-typewriter-scrolling-demo.gif" alt="mweb-typewriter-scrolling-demo"/></p>

<p>另外会有的功能为发布到 evernote、wordpress.com、blogger。1.4.3 版会在下周某天提交，所以在月底应该能用上了。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb 1.4 新功能介绍二：静态博客功能增强]]></title>
    <link href="http://coderforart.com/mweb-1.4-static-blog-extension.html"/>
    <updated>2015-05-07T14:46:52+08:00</updated>
    <id>http://coderforart.com/mweb-1.4-static-blog-extension.html</id>
    <content type="html"><![CDATA[
<p>MWeb 比较有特色的是一键生成静态博客功能，然后从 MWeb 最开始规划要做静态博客生成功能时，我就希望 MWeb 的静态博客生成功能在易用的同时，还要有很强大的扩展性。</p>

<p>比如说能自己增加网站公告，这个公告可以随时更换和取消。再比如说能自己为网站增加广告，而且可以增加多个广告位，google 的或者自定的广告都可以。这些之前都可以通过修改模板解决，但是有些是解决不了的：比如说把文章列表做成像 theverge <a href="http://www.theverge.com/reviews">http://www.theverge.com/reviews</a> 的页的效果，就是列表中有设定的特色图片，有自定的简介，有评分，有价格时会显示价格等。比如说设定 SEO 的一些信息，设定分享到 Facebook 的一些信息。又比如说播客类的网站，要生成 Apple 规格的 RSS。</p>

<p>1.4 版的静态博客增强就是解决这些问题的。我一直考虑如何介绍这个功能，然后因为之前比特新声的主播之一 <a href="http://weibo.com/haohailong">郝海龙</a> 随意问了一下是否支持生成 Podcast 的 RSS。所以我想来想去，还是介绍用 MWeb 自带的 greyshade 网站模板做一个可以写博客又可以做为播客的新模板好了。</p>

<p>这个新模板的 Demo 网址是：<a href="http://coderforart.com/bitvoice/">http://coderforart.com/bitvoice/</a>，Podcast RSS 为：<a href="http://coderforart.com/bitvoice/podcast-atom.xml">http://coderforart.com/bitvoice/podcast-atom.xml</a>。 一般情况下只要到这个网址体验一下，并看一下《音乐《梁祝》及 MWeb 静态博客功能增强的使用体验》这篇文章即可，因为下边的内容是跟自定模板有关。</p>

<span id="more"></span><!-- more -->

<p>下面正式开始做这个新模板。<br/>
首先在 MWeb 中新增一个静态网站分类，名为比特新声。然后设置如下，我是想放在我的博客中做 Demo，所以网址为：<a href="http://coderforart.com/bitvoice/">http://coderforart.com/bitvoice/</a>。评论和分类代码、GA 代码都跟 coderforart 一样。</p>

<p><img src="media/14309812124046/14309891268944.jpg" alt=""/></p>

<p>点上图中最下边的 <code>Advanced Settings</code> 后会出来如下图的网站扩展设置。</p>

<p><img src="media/14309812124046/14309896174085.jpg" alt=""/></p>

<p>一开始打开时，<code>Site Setting</code> 这个 Tab 是没有内容的，可以看到 MWeb 支持整个网站的字段扩展（Site Extension）和网站所属文档的字段扩展（Document Extension）。</p>

<p>如下图，我在 <code>Site Extension</code> 这个 Tab 根据 <a href="https://www.apple.com/itunes/podcasts/specs.html">Apple Podcast RSS</a> 自定了一些必要字段，然后切到 <code>Site Setting</code> 这个 Tab，就会看到按照自定的字段生成可以输入的文本框了。</p>

<p><img src="media/14309812124046/14309917234549.jpg" alt=""/></p>

<p>如右边，我可以填入相关文案。然后如果有图片怎么办，简单的办法是打开比特新声分类内的一个文档，直接把图拖入编辑器中，从生成的 Markdown 语法中取其地址贴上就好。如上图右边的图中的 <code>Fb Image</code> 字段。</p>

<p>然后我也在 <code>Document Extension</code> 这个 Tab 也根据 <a href="https://www.apple.com/itunes/podcasts/specs.html">Apple Podcast RSS</a> 自定了一些必要字段，这些字段可以点软件右上角的设置按钮，并点第三个 Tab <code>Extension</code> 就能看到了按自定字段生成的可输入文本框了，如图。</p>

<p><img src="media/14309812124046/14309923959577.jpg" alt=""/></p>

<p>这样的话，如果想新增新一期播客，就点开第三个 <code>Extension</code> Tab，填入一些这一期播客的相关信息即可。如果新增的文档只是普通文章，则可以不用管扩展的信息。</p>

<p>下图是关于 <code>Base</code> Tab 和 <code>Media</code> Tab 的情况。</p>

<p><img src="media/14309812124046/14309931949625.jpg" alt=""/></p>

<p><code>Media</code> Tab 会列出所有你引入到当前文档中的图片、附件等等。比如要增加一张某期的播客的封面图片，文章里用不到，但是 <code>Extension</code> Tab 里要填入，就可以先把图拖入编辑器内，然后删除，再点 <code>Media</code> Tab 就会看到所拖入的图了，点 <code>Copy Path</code> 然后贴到 <code>Extension</code> Tab 的某字段即可。</p>

<p>字段设置好了，下面要开始修改 greyshade 网站模板了。目前看来只需要为属于播客的文章增加一个播放器，让它可以播放 MP3。然后修改 RSS，让 RSS 按 Apple 播客的格式即可。</p>

<p>以下为修改模板的内容，建议先参考 <a href="http://zh.mweb.im/custom-site-theme-detail-zh.html">自定网站或博客主题简单说明</a>。</p>

<p>首先增加播放器，我随便找了一下，看到 <a href="http://www.schillmania.com/projects/soundmanager2/demo/bar-ui/">http://www.schillmania.com/projects/soundmanager2/demo/bar-ui/</a> 这个播放器不错，所以就决定用这个了，首先复制 greyshade 模板，并重命名为：podcast-greyshade。把 soundmanager 的相关代码放到 asset/soundmanager 中。然后打开 header.html 文档，在上面增加 soundmanager2 播放器的代码，大概是这样：</p>

<pre><code class="language-js">&lt;link href=&quot;asset/soundmanager/css/bar-ui.css&quot; media=&quot;screen, projection&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot;&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;asset/soundmanager/soundmanager2-jsmin.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;asset/soundmanager/bar-ui.js&quot;&gt;&lt;/script&gt;
&lt;script&gt;
soundManager.setup({
  preferFlash: false,
  onready: function() {

  }
});
&lt;/script&gt;
</code></pre>

<p>因为我需要在文章列表和单篇文章都支持播放功能，所以为 category.html 和 post.html 增加播放支持。代码大概如下（我只选关键代码）。</p>

<pre><code class="language-html">{% if post.ext_enclosureURL.length %}
    &lt;div class=&quot;sm2-bar-ui compact full-width&quot;&gt;
        ....
        &lt;div class=&quot;sm2-inline-duration&quot;&gt;{{ post.ext_itunes_duration }}&lt;/div&gt;
                      
        &lt;div class=&quot;sm2-playlist-wrapper&quot;&gt;
            &lt;ul class=&quot;sm2-playlist-bd&quot;&gt;
             &lt;li&gt;&lt;a href=&quot;{{ post.ext_enclosureURL }}&quot;&gt;&lt;b&gt;{{ post.ext_itunes_author }}&lt;/b&gt; - {{ post.ext_title }}&lt;/a&gt;&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/div&gt;
        ...
        &lt;/div&gt;
    {% /if %}
</code></pre>

<p>下面解释一下上面这段代码。<br/>
MWeb 中 <code>Site Setting</code> 设置的所有值会传到所有模板页，比如说要输出上面设置的 SEO Des 的值，用 <code>{{ext_seo_des}}</code> 即可。可以看到，规则是： <code>ext_ + variable Name</code> 。然后用软件右上角第一个按钮设置的文档中的 <code>Extension</code> 的值，会传到所有 <code>文档对象变量</code> 中，如上面代码，文档对象变量为 <code>post</code>，访问规则为 <code>post.ext_ + variable Name</code>。 然后请注意 <code>{% if post.ext_enclosureURL.length %} {% /if %}</code> 这种写法，这是为了判断这文章是否有设置了播客的相关值，有设置，说明这文章为播客文章。</p>

<p>下面介绍一下如何增加输出 Apple 支持的播客的 RSS 格式。 </p>

<p>MWeb 一般情况下只生成全站文章的 RSS，名字为 atom.xml。然后 MWeb 为了满足扩展需要，增加了另外的规则，为：如果网站模板中存在有 <code>分类的 HTML File Name 的值 + -atom.xml</code> 这样的模板文档，则会为这个分类用 <code>分类的 HTML File Name 的值 + -atom.xml</code> 这个模板生成名为  <code>分类的 HTML File Name 的值 + -atom.xml</code> 的 RSS。</p>

<p>如上面，我增加了两个子分类：文章和播客。然后我设置了播客子分类的 <code>HTML File Name</code> 为 <code>podcast</code>。然后我在网站模板中也增加了名为 <code>podcast-atom.xml</code> 的模板，下面是这个模板的内容。</p>

<pre><code class="language-xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;rss xmlns:itunes=&quot;http://www.itunes.com/dtds/podcast-1.0.dtd&quot; version=&quot;2.0&quot;&gt;
    &lt;channel&gt;
        &lt;title&gt;&lt;![CDATA[{{ siteName }}]]&gt;&lt;/title&gt;
        &lt;link&gt;{{ siteURL }}&lt;/link&gt;
        &lt;language&gt;zh-CN&lt;/language&gt;
        {% if ext_copyright.length %}
            &lt;copyright&gt;{{ ext_copyright }}&lt;/copyright&gt;
        {% /if %}
        {% if ext_itunes_subtitle.length %}
            &lt;itunes:subtitle&gt;{{ ext_itunes_subtitle }}&lt;/itunes:subtitle&gt;
        {% /if %}
        {% if ext_itunes_author.length %}
            &lt;itunes:author&gt;{{ ext_itunes_author }}&lt;/itunes:author&gt;
        {% /if %}
        {% if ext_itunes_summary.length %}
            &lt;itunes:summary&gt;{{ ext_itunes_summary }}&lt;/itunes:summary&gt;
        {% /if %}
        {% if ext_itunes_description.length %}
            &lt;description&gt; {{ ext_itunes_description }} &lt;/description&gt;
        {% /if %}
        &lt;itunes:owner&gt;
            {% if ext_itunes_author.length %}&lt;itunes:name&gt;{{ ext_itunes_author }}&lt;/itunes:name&gt;{% /if %}
            {% if ext_itunes_email.length %}&lt;itunes:email&gt;{{ ext_itunes_email }}&lt;/itunes:email&gt;{% /if %}
        &lt;/itunes:owner&gt;
        {% if ext_itunes_image.length %}
            &lt;itunes:image href=&quot;{{ ext_itunes_image }}&quot; /&gt;
        {% /if %}
        {% if ext_itunes_category.length %}
            &lt;itunes:category text=&quot;{{ ext_itunes_category }}&quot;/&gt;
        {% /if %}
        {% for p in posts %}
            {% if p.ext_enclosureURL.length %}
                &lt;item&gt;
                    &lt;title&gt;{{ p.ext_title }}&lt;/title&gt;
                    &lt;itunes:author&gt; {{ p.ext_itunes_author }}&lt;/itunes:author&gt;
                    &lt;itunes:subtitle&gt; {{ p.ext_itunes_subtitle }} &lt;/itunes:subtitle&gt;
                    &lt;itunes:summary&gt;&lt;![CDATA[ 
                        {% if p.ext_itunes_summary.length %} 
                            {{ p.ext_itunes_summary }} 
                        {% else %}
                            {{ p.content }}
                        {% /if %} ]]&gt;
                    &lt;/itunes:summary&gt;
                    &lt;itunes:image href=&quot;{{ p.ext_itunes_image }}&quot; /&gt;
                    &lt;enclosure url=&quot;{{ p.ext_enclosureURL }}&quot;  length=&quot;{{ p.ext_enclosure_length }}&quot;   type=&quot;{{ p.ext_enclosure_type }}&quot;  /&gt;
                    &lt;guid&gt;{{ p.ext_guid }}&lt;/guid&gt;
                    &lt;pubDate&gt;{{ p.ext_pubDate }}&lt;/pubDate&gt;
                    &lt;itunes:duration&gt;{{ p.ext_itunes_duration }}&lt;/itunes:duration&gt;
                &lt;/item&gt;
            {% /if %}
        {% /for %}
    &lt;/channel&gt;
&lt;/rss&gt;
</code></pre>

<p>至此，podcast-greyshade 这个新模板已经完成了，增加了播放器支持和把所有播客文章生成为 Apple 播客格式的 RSS。</p>

<p>podcast-greyshade 这个网站模板已传到 github：<a href="https://github.com/oulvhai/MWeb-Themes/tree/master/podcast-greyshade">https://github.com/oulvhai/MWeb-Themes/tree/master/podcast-greyshade</a><br/>
使用 podcast-greyshade 这个网站模板的 Demo 的网址：<a href="http://coderforart.com/bitvoice/">http://coderforart.com/bitvoice/</a>。我只增加了两篇播客文章。然后 Apple 规格的 RSS 输出网址为：<a href="http://coderforart.com/bitvoice/podcast-atom.xml">http://coderforart.com/bitvoice/podcast-atom.xml</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb 1.4 新功能介绍一：引入文件夹到 MWeb 中管理，支持 Octpress、Jekyll 等静态博客拖拽插入图片和实时预览]]></title>
    <link href="http://coderforart.com/mweb-1.4-add-floder-octpress-support.html"/>
    <updated>2015-05-07T09:56:51+08:00</updated>
    <id>http://coderforart.com/mweb-1.4-add-floder-octpress-support.html</id>
    <content type="html"><![CDATA[
<p>之前在 MWeb 中打开非文档库中的 Markdown 文档，如果文档中有引用到本机图片，是没办法在 MWeb 中显示出来和预览的。这是因为 Apple 规定在 Mac App Store（MAS） 上的软件，都不能对软件自己的沙箱之外的文档进行任何操作，连读取都不能，除非用户明确授权。而用户授权的方式是使用打开、保存对话框。比如说你用 MWeb 打开一个 Markdown 文档，那么 MWeb 就能得到读写这个文档的权限。再比如说你用 MWeb 导出为 HTML 功能，在保存为对话框中选择一个要导出到的文件夹，那么 MWeb 就能得到读写这个文件夹的权限。</p>

<p>正因为这个原因，所以，一般情况下，如果一个软件有 MAS 版，都建议用 MAS 版，特别是国内大厂的软件，即使功能上少了点。</p>

<p>这次 1.4 版新增可以引入文件夹到 MWeb 中管理的功能，就是为了解决用 MWeb 打开非文档库中的 Markdown 文档无法用拖拽和粘贴插入图片，预览时无法显示引用的本机图片的问题。然后 1.4 版还对 Octpress、Jekyll 等静态博客进行了优化。在用 MWeb 编辑 Octpress、Jekyll 的 Markdown 文档时，也可以在编辑器中拖拽或粘贴插入图片并显示在编辑器中和进行实时预览了。</p>

<p>特别说明的是：1.4 版的实时预览增加了同步滚动功能！然后我觉得目前同步滚动功能是相当好用了，所以在这里特别说明一下。</p>

<span id="more"></span><!-- more -->

<h2 id="toc_0">MWeb 引入文件夹功能介绍</h2>

<p>为了方便使用引入文件夹功能，MWeb 的外部模式新增了一个快捷键：<code>CMD + E</code>。任何情况下按 <code>CMD + E</code> 即可打开外部模式，在外部模式中就可以看到所有引入的文件夹了。同样提示一下 MWeb 的文档库模式的快捷键是：<code>CMD + L</code>。如果你不喜欢用快捷键，也可以用菜单： <code>View</code> - <code>Open External</code> 打开外部模式。</p>

<p>点软件左下方的 <code>+</code> - <code>Add External Source...</code>，然后在对话框中选择要引入到 MWeb 的文件夹，再点 <code>Choose</code> 即可。还有更多的设置如下图。</p>

<p><img src="media/14309638110247/14309679087614.png" alt=""/></p>

<p>引入后，在最左边那栏选择文件夹，中间那栏则会显示该文件夹下的 Markdown 文档。如下图显示，引入后的文档可以方便地拖拽插入图片和附件，下图是增加了一个 MP3 和一张图。然后需要说一下的是，点击软件的标题栏可以修改文档名称和为文档增加 Tags，如下图。</p>

<p><img src="media/14309638110247/14309690743597.png" alt=""/></p>

<p>然后实时预览、导出为HTML/PDF、发布到 Wordpress 等文档库中可以用的一些功能在外部模式也是可以使用的。同样，发布到 Wordpress、新浪博客等支持 Metaweblog API 的服务时，文档中的图片也是会一起发布的。</p>

<h2 id="toc_1">对 Octpress、Jekyll 等静态博客优化介绍</h2>

<p>如上边所写，MWeb 引入的文件夹的 Markdown 文档插入图片的保存位置设置有两个选择：Relative 和 Absolute。</p>

<p>Octpress、Jekyll 等静态博客因为可以自定像 <code>http://域名/2015/3/the-blog-post/</code> 这样的网址，所以在增加图片时，都是用 <code>/images/pic.jpg</code> 这样的绝对路径。然后图片要放在 <code>source/images</code> 文件夹下。</p>

<p>正因为这个原因，引入 Octpress 等静态博客的文件夹到 MWeb 时，请引入 <code>source</code> 文件夹。引入后你可以修改 <code>Display Name</code> 来标识。<strong>最重要一点</strong>，<code>Media Save Path</code> 请选择 <code>Absolute</code>。<br/>
Octpress 的文档一般都在 <code>_posts</code> 这个资料夹下，在 MWeb 最左边那栏选择 <code>_posts</code> 文件夹，在中间那栏选择要编辑的文档即可。这时的文档已经是支持拖拽插入图片和实时预览了。然后无论你编辑 <code>source</code> 下的那个文档，你所插入的图片都会保存在 <code>source</code> 下的你在 <code>Media Floder Name</code> 中设置的文件夹下。 </p>

<p>如果要新增文档，你可以用 MWeb 中的新增文档功能（点软件中间那栏搜寻框右边的新增按钮），也可以用 Octpress 等所带的命令行新增文档（推荐）。你用命令行新增后，MWeb 会在列表中自动显示你新增的文档。然后删除文档、新增文件夹等，也会自动更新显示的，总之 MWeb 能侦测到你引入的文件夹的内容的变化而自动更新显示。所以 MWeb 没有做 <code>刷新</code> 这个功能。</p>

<p>引入 Otcpress 的 <code>source</code> 文件夹的属性设置、新增附件、图片效果，如图：<br/>
<img src="media/14309638110247/14309715741257.png" alt=""/></p>

<p>在 MWeb 中实时预览，MWeb 会对 Otcpress Markdown 文档中的 Meta 设置转成代码，如图：<br/>
<img src="media/14309638110247/14309717157125.png" alt=""/></p>

<p>用 Octpress 的网站预览功能，在 Safari 中查看的效果，如图：<br/>
<img src="media/14309638110247/14309719918323.png" alt=""/></p>

<p>其他如 hexo、Farbox 等引入 MWeb 中进行管理我想也差不多，不再多介绍了。引入文件夹比用 MWeb 文档库模式好的地方是同步和协作都比较方便。然后说明一下 MWeb 1.4 版现在还没有提交到 MAS 的，我还要多测试几天才会提交。所以看到这篇文章的朋友，如果有什么的建议，可以跟我说，这样就可以及时在提交前改进了。</p>

<p>然后 1.4 版还对 MWeb 静态博客功能进行了增强，我也正在考虑介绍文章怎么写，初步计划是写两篇，一篇是介绍功能，一篇是再做一个生成 Apple 播客 RSS 的例子。最晚的话，明天应该会把文章发出来。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb 1.3.7 发布！增加发布到 Wordpress 等支持 Metaweblog API 的服务，如：Wordpress 博客、新浪博客、cnblogs、oschina。]]></title>
    <link href="http://coderforart.com/mweb-1.3.7-releases.html"/>
    <updated>2015-04-17T07:45:08+08:00</updated>
    <id>http://coderforart.com/mweb-1.3.7-releases.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">MWeb 1.3.7 版的新功能</h2>

<ul>
<li>增加发布到 Wordpress 等支持 Metaweblog API 的服务，目前经测试过的有： Wordpress 博客、新浪博客、cnblogs、oschina。</li>
<li>增加发布到 Tumblr 和 Scriptogr.am </li>
<li>即时预览改进，原来会闪动，现在拿掉了同步滚动功能后不会了。</li>
<li>编辑器和三栏切换也有小改进。</li>
</ul>

<span id="more"></span><!-- more -->

<h2 id="toc_1">下边介绍一下发布到 Wordpress 等支持 Metaweblog API 的博客服务的功能</h2>

<p>我所知，Mac 下支持这一功能的 Native 的 Markdown 编辑器就只有 MWeb 了。之前用过 Live Writer 的朋友都知道这功能非常好用，因为加图片非常方便！然后是离线写作，不用担心内容丢失，还可以方便地发布到多处地方。我之前用 Live Writer 时还会时不时要切到 HTML 代码下去修正一下格式问题，有点难用，现在用 Markdown 的话，就不会有这情况了。可以说：Markdown 和 Metaweblog API 才是真正的完美结合！</p>

<p>在 MWeb 中点菜单：<code>MWeb</code> - <code>Preferences</code> - <code>Publishing</code> 即可进入发布设置界面，如下：</p>

<p><img src="media/14292279084701/14292295737706.jpg" alt=""/></p>

<h3 id="toc_2">增加发布到 Wordpress 的服务</h3>

<p>点 Wordpress.org 这个按钮，如下图，由于 Wordpress 的远程发布网址可以由博客网址得知，所以只需要填入博客网址、帐号、密码即可。密码是存到 Keychain，所以可无需担心。<br/>
<img src="media/14292279084701/14292301869922.jpg" alt=""/></p>

<p><strong>注意：</strong> 如果遇到 <code>validate</code> 不通过并提示 404 错误的话，目前有两个可能（感谢 <a href="http://weibo.com/u/1862562001">@iamliunian</a>）：</p>

<ol>
<li>可以查看 Wordpress 的设置里是否开启远程发布。位置是 <code>设置</code> - <code>撰写</code> - <code>远程发布</code> 并开启 <code>XML-RPC</code></li>
<li>检查 你的博客网址 + xmlrpc.php，看看是否正常，比如说我的 Wordpress 博客的是 <a href="http://appbk.sinaapp.com/xmlrpc.php">http://appbk.sinaapp.com/xmlrpc.php</a>，打开会显示 <code>XML-RPC server accepts POST requests only.</code> 是为正常，否则就有可能是 url rewrite 的设置，让 xmlrpc.php 不能用了。这要修改 .htaccess  让 xmlrpc.php 正常。</li>
</ol>

<h3 id="toc_3">增加发布到 新浪博客、cnblogs、oschina 的博客服务的服务</h3>

<p>点 Metaweblog API 这个按钮，如下图，必填的只有 帐号、密码、Publish URL。Publish URL 这个一般支持 Metaweblog API 的服务都会提供的。</p>

<p><img src="media/14292279084701/14292306829254.jpg" alt=""/></p>

<p>下面说一下新浪博客、cnblogs、oschina 的 Publish URL。</p>

<ul>
<li>新浪博客的 Publish URL：<a href="http://upload.move.blog.sina.com.cn/blog_rebuild/blog/xmlrpc.php">http://upload.move.blog.sina.com.cn/blog_rebuild/blog/xmlrpc.php</a></li>
<li>cnblogs 的 Publish URL：<a href="http://www.cnblogs.com/Blog%E5%90%8D/services/metaweblog.aspx">http://www.cnblogs.com/Blog名/services/metaweblog.aspx</a>。其中 <strong>Blog 名</strong> 请换为您的博客名。cnblogs 的博客后台设置，拉到最下面，也可以找到这个网址。比如说我的是  <a href="http://rpc.cnblogs.com/metaweblog/OtisBlog">http://rpc.cnblogs.com/metaweblog/OtisBlog</a> 两者网址不同，但是效果一样。</li>
<li>oschina 的 Publish URL：<a href="http://my.oschina.net/action/xmlrpc">http://my.oschina.net/action/xmlrpc</a></li>
</ul>

<h3 id="toc_4">发布</h3>

<p>如下图红框处，你可以在 MWeb 分享按钮（右上角的第三个按钮）中找到所增加的发布服务。名称会显示 <code>Blog Name</code> 中设定的名称。</p>

<p><img src="media/14292279084701/14292318507812.jpg" alt=""/></p>

<p>比如说我要发布到我的 Wordpress 博客，点 <code>oulvhai 的 Wordpress 博客</code>，如下图：<br/>
<img src="media/14292279084701/14292325545410.jpg" alt=""/></p>

<p>要注意的时，有些博客服务是不支持上边的一些设置的，比如说 <code>Custom URL</code>、<code>Publish Date</code>、<code>Status</code> 等。设定好后，点 <code>Publish</code> 按钮就可以发布了。</p>

<p>要说明的是：Metaweblog API 有自动上传图片的功能，有看到我现在这文章的图片都是在本地的，发布时就会自动把图片上传到所发布的博客服务。所以就不用找图床了。我这文章会发布到以下几个地方：</p>

<ul>
<li>我的用 MWeb 静态网站功能生成的个人博客：<a href="http://coderforart.com">http://coderforart.com</a></li>
<li>同样用 MWeb 静态网站功能生成的 MWeb 中文官网：<a href="http://zh.mweb.im">http://zh.mweb.im</a></li>
<li>我的 Wordpress 测试博客：<a href="http://appbk.sinaapp.com/">http://appbk.sinaapp.com/</a></li>
<li>我的新浪博客：<a href="http://blog.sina.com.cn/oulvhai">http://blog.sina.com.cn/oulvhai</a></li>
<li>我在 cnblogs 的博客：<a href="http://www.cnblogs.com/OtisBlog">http://www.cnblogs.com/OtisBlog</a></li>
<li>我在 oschina 的博客：<a href="http://my.oschina.net/oulvhai">http://my.oschina.net/oulvhai</a></li>
</ul>

<h2 id="toc_5">关于 MWeb Lite</h2>

<p>MWeb Lite 的定位是 Markdown 编辑器和一些 MWeb 正式版的功能的体验。对于轻度使用 Markdown 的朋友来说， MWeb Lite 已足够了，MWeb 正式版的功能大部分用不到。MWeb Lite 的 Markdown 编辑器功能是跟 MWeb 正式版一样的。这个功能会随着 MWeb 这个产品的不断打磨而得到更好的体验。目前 MWeb Lite 对于正式版不同的地方有：</p>

<ol>
<li>文档库 MWeb Lite 限定为 10 个文档</li>
<li>发布服务只能增加 1 个。</li>
</ol>

<h2 id="toc_6">其他</h2>

<p>这里说一下用 MWeb 生成的静态博客的好处：可直接打开所生成的 HTML 文档就能预览！这个是不同于 otcpress 等静态博客生成方式的。otcpress 等生成的 HTML 直接打开预览是没办法看到效果的，必须上传或者用 otcpress 来预览。MWeb 的静态博客功能没有 otcpress 这么强大，但是对于简单只想写一下博客的朋友来说，我觉得足够了。当然，下一版也会增强静态博客功能的。</p>

<p>另外发布到 Wordpress.com、bloger、evernote 功能也是会有的，这几个要在 1.4 版发布后才会开始弄。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb 1.3 release! 50% OFF, official site, new icon, task list support, optimized MathJax support etc...]]></title>
    <link href="http://coderforart.com/mweb1.3-release.html"/>
    <updated>2015-03-28T11:13:42+08:00</updated>
    <id>http://coderforart.com/mweb1.3-release.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">Official Site</h2>

<p>Chinese: <a href="http://zh.mweb.im">http://zh.mweb.im</a><br/>
English: <a href="http://www.mweb.im">http://www.mweb.im</a></p>

<h2 id="toc_1">Featrue</h2>

<ul>
<li>Add <code>CMD+Shift+V</code> paste PNG pictrue.</li>
<li>Add sequence and flow chart support</li>
<li>Add task lists support. <code>- + space + [ ]</code>or <code>- + space + [x]</code></li>
<li>Add Markdown export.</li>
<li>Add setting Disqus Comment code support, more info: <a href="http://www.mweb.im/mweb-comment-and-share-help.html">http://www.mweb.im/mweb-comment-and-share-help.html</a></li>
<li>Optimized MathJax support and add MathJax library to local.</li>
<li>Optimized PDF export.</li>
</ul>

<p>Fixed some crash.</p>

<h2 id="toc_2">For MWeb 1.2 users</h2>

<p>Site themes updated: greyshade, octopress themes updated for support setting Comment and Share code,MathJax ,sequence and flow chart. Three variables added like below:</p>

<pre><code>{{ commentAndShareCode }}
{{ seqAndFlowChartSupport }}
{{ mathJaxSupport }}
</code></pre>

<p>Updated template pages:</p>

<ol>
<li>footer.html add <code>{{ seqAndFlowChartSupport }}</code>, <code>{{ mathJaxSupport }}</code> code, please check this link: <a href="https://github.com/oulvhai/MWeb-Themes/blob/master/greyshade/footer.html">https://github.com/oulvhai/MWeb-Themes/blob/master/greyshade/footer.html</a></li>
<li>post.html add <code>{{ commentAndShareCode }}</code> code, please check this link: <a href="https://github.com/oulvhai/MWeb-Themes/blob/master/greyshade/post.html">https://github.com/oulvhai/MWeb-Themes/blob/master/greyshade/post.html</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb 1.3 版发布！半价促销，新官网，新图标，增加任务列表，顺序图和流程图，优化MathJax、PDF导出等]]></title>
    <link href="http://coderforart.com/mweb1.3-release-zh.html"/>
    <updated>2015-03-28T10:21:20+08:00</updated>
    <id>http://coderforart.com/mweb1.3-release-zh.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">新官网</h2>

<p>中文：<a href="http://zh.mweb.im">http://zh.mweb.im</a><br/>
英文：<a href="http://www.mweb.im">http://www.mweb.im</a></p>

<h2 id="toc_1">新增：</h2>

<ul>
<li>增加 <code>CMD+Shift+V</code> 粘贴 PNG 格式图片</li>
<li>增加sequence图和flow图支持</li>
<li>增加任务列表（Task lists）支持，列表后再加<code>[ ]</code>或<code>[x]</code></li>
<li>增加把分类或文档导出为Markdown</li>
<li>现在可以直接在设置中填入Disqus、多说等评论代码了，请参考：<a href="http://zh.mweb.im/mweb-comment-and-share-help.html">http://zh.mweb.im/mweb-comment-and-share-help.html</a></li>
<li>优化MathJax支持并把MathJax库放本地以提高预览速度</li>
<li>优化PDF导出</li>
</ul>

<h2 id="toc_2">修正</h2>

<ul>
<li>图标小调整，应该顺眼了点。</li>
<li>修正了一些BUG和闪退问题</li>
</ul>

<h2 id="toc_3">1.3 以下的朋友请注意：</h2>

<p>这次更新中，greyshade、octopress 博客主题模板有变动！由于增加了可设置评论和分类、勾选支持 MathJax 和顺序图、流程图，所以增加了以下三个变量：</p>

<pre><code>{{ commentAndShareCode }}
{{ seqAndFlowChartSupport }}
{{ mathJaxSupport }}
</code></pre>

<p>greyshade、octopress 博客主题模板有更新到的页为 footer.html 和 post.html。</p>

<p>footer.html 会在 <code>{{ siteOther }}</code> 上增加 <code>{{ seqAndFlowChartSupport }}</code> 和 <code>{{ mathJaxSupport }}</code>。</p>

<p>可参考这个网址：<a href="https://github.com/oulvhai/MWeb-Themes/blob/master/greyshade/footer.html">https://github.com/oulvhai/MWeb-Themes/blob/master/greyshade/footer.html</a></p>

<p>post.html 则在要放评论和分享的地方增加 <code>{{ commentAndShareCode }}</code>。</p>

<p>可参考这个网址：<a href="https://github.com/oulvhai/MWeb-Themes/blob/master/greyshade/post.html">https://github.com/oulvhai/MWeb-Themes/blob/master/greyshade/post.html</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Markdown syntax guide and writing on MWeb]]></title>
    <link href="http://coderforart.com/markdown-syntax-guide-suggest-version.html"/>
    <updated>2014-12-16T19:08:31+08:00</updated>
    <id>http://coderforart.com/markdown-syntax-guide-suggest-version.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">Philosophy</h2>

<blockquote>
<p>Markdown is intended to be as easy-to-read and easy-to-write as is feasible.<br/>
Readability, however, is emphasized above all else. A Markdown-formatted document should be publishable as-is, as plain text, without looking like it&#39;s been marked up with tags or formatting instructions.<br/>
Markdown&#39;s syntax is intended for one purpose: to be used as a format for <em>writing</em> for the web.</p>
</blockquote>

<span id="more"></span><!-- more -->

<h2 id="toc_1">Notice</h2>

<p>You can use  <code>CMD + R</code> to preview the result.</p>

<h2 id="toc_2">Headers</h2>

<p><strong>Example:</strong></p>

<pre><code># This is an `&lt;h1&gt;` tag
## This is an `&lt;h2&gt;` tag
###### This is an `&lt;h6&gt;` tag
</code></pre>

<p><strong>Result:</strong></p>

<h1 id="toc_3">This is an <code>&lt;h1&gt;</code> tag</h1>

<h2 id="toc_4">This is an <code>&lt;h2&gt;</code> tag</h2>

<h6 id="toc_5">This is an <code>&lt;h6&gt;</code> tag</h6>

<h2 id="toc_6">Emphasis</h2>

<p><strong>Example:</strong></p>

<pre><code>*This text will be italic*
_This will also be italic_

**This text will be bold**
__This will also be bold__

*You **can** combine them*
</code></pre>

<p><strong>Shortcuts:</strong>  <code>CMD + U</code>、<code>CMD + I</code>、<code>CMD + B</code><br/>
<strong>Result:</strong></p>

<p><em>This text will be italic</em><br/>
<u>This will also be italic</u></p>

<p><strong>This text will be bold</strong><br/>
<strong>This will also be bold</strong></p>

<p>*You <strong>can</strong> combine them*</p>

<h2 id="toc_7">Newlines</h2>

<p>End a line with two or more spaces + enter.<br/>
Just typing enter to newline,please set：<code>Preferences</code> - <code>Themes</code> - <code>Translate newlines to &lt;br&gt; tags</code>  enable ( default is enable )</p>

<h2 id="toc_8">Lists</h2>

<h3 id="toc_9">Unordered</h3>

<p><strong>Example:</strong></p>

<pre><code>* Item 1 unordered list `* + SPACE`
* Item 2
    * Item 2a unordered list `TAB + * + SPACE`
    * Item 2b
</code></pre>

<p><strong>Shortcuts:</strong>  <code>Option + U</code><br/>
<strong>Result:</strong></p>

<ul>
<li>Item 1 unordered list <code>* + SPACE</code></li>
<li>Item 2

<ul>
<li>Item 2a unordered list <code>TAB + * + SPACE</code></li>
<li>Item 2b</li>
</ul></li>
</ul>

<h3 id="toc_10">Ordered</h3>

<p><strong>Example:</strong></p>

<pre><code>1. Item 1 ordered list `Number + . + SPACE`
2. Item 2 
3. Item 3
    1. Item 3a ordered list `TAB + Number + . + SPACE`
    2. Item 3b
</code></pre>

<p><strong>Result:</strong></p>

<ol>
<li>Item 1 ordered list <code>Number + . + SPACE</code></li>
<li>Item 2 </li>
<li>Item 3

<ol>
<li>Item 3a ordered list <code>TAB + Number + . + SPACE</code></li>
<li>Item 3b</li>
</ol></li>
</ol>

<h3 id="toc_11">Task lists</h3>

<p><strong>Example:</strong></p>

<pre><code>- [ ] task one not finish `- + SPACE + [ ]`
- [x] task two finished `- + SPACE + [x]`
</code></pre>

<p><strong>Result:</strong></p>

<ul>
<li class="task-list-item"><input type="checkbox" /> task one not finish <code>- + SPACE + [ ]</code>
</li>
<li class="task-list-item"><input type="checkbox" checked /> task two finished <code>- + SPACE + [x]</code>
</li>
</ul>

<h2 id="toc_12">Images</h2>

<p><strong>Example:</strong></p>

<pre><code>![GitHub set up](https://help.github.com/assets/images/site/set-up-git.gif)
Format: ![Alt Text](url)
</code></pre>

<p><strong>Shortcuts:</strong>  <code>Control + Shift + I</code><br/>
The Library&#39;s document support drag &amp; drop or <code>CMD + V</code> paste or <code>CMD + Option + I</code> to insert  the pictrue.<br/>
<strong>Result:</strong></p>

<p><img src="https://help.github.com/assets/images/site/set-up-git.gif" alt="GitHub set up"/></p>

<h2 id="toc_13">Links</h2>

<p><strong>Example:</strong></p>

<pre><code>email &lt;example@example.com&gt;
[GitHub](http://github.com)
autolink  &lt;http://www.github.com/&gt;
</code></pre>

<p><strong>Shortcuts:</strong>  <code>Control + Shift + L</code><br/>
The Library&#39;s document support drag &amp; drop or <code>CMD + Option + I</code> to insert attachment.<br/>
<strong>Result:</strong></p>

<p>An email <a href="mailto:example@example.com">example@example.com</a> link.<br/>
<a href="http://github.com">GitHub</a><br/>
Automatic linking for URLs<br/>
Any URL (like <a href="http://www.github.com/">http://www.github.com/</a>) will be automatically converted into a clickable link.</p>

<h2 id="toc_14">Blockquotes</h2>

<p><strong>Example:</strong></p>

<pre><code>As Kanye West said:
&gt; We&#39;re living the future so
&gt; the present is our past.
</code></pre>

<p><strong>Shortcuts:</strong>  <code>CMD + Shift + B</code><br/>
<strong>Result:</strong></p>

<p>As Kanye West said:</p>

<blockquote>
<p>We&#39;re living the future so<br/>
the present is our past.</p>
</blockquote>

<h2 id="toc_15">Inline code</h2>

<p><strong>Example:</strong></p>

<pre><code>I think you should use an
`&lt;addr&gt;` `code` element here instead.
</code></pre>

<p><strong>Shortcuts:</strong>  <code>CMD + K</code><br/>
<strong>Result:</strong></p>

<p>I think you should use an<br/>
<code>&lt;addr&gt;</code> <code>code</code> element here instead.</p>

<h2 id="toc_16">Multi-line code</h2>

<p><strong>Example:</strong></p>

<pre><code>```js
function fancyAlert(arg) {
  if(arg) {
    $.facebox({div:&#39;#foo&#39;})
  }

}
```
</code></pre>

<p><strong>Shortcuts:</strong>  <code>CMD + Shift + K</code><br/>
<strong>Result:</strong></p>

<pre><code class="language-js">function fancyAlert(arg) {
  if(arg) {
    $.facebox({div:&#39;#foo&#39;})
  }

}
</code></pre>

<h2 id="toc_17">Sequence and Flow chart</h2>

<p><strong>Example:</strong></p>

<pre><code>```sequence
张三-&gt;李四: 嘿，小四儿, 写博客了没?
Note right of 李四: 李四愣了一下，说：
李四--&gt;张三: 忙得吐血，哪有时间写。
```

```flow
st=&gt;start: 开始
e=&gt;end: 结束
op=&gt;operation: 我的操作
cond=&gt;condition: 确认？

st-&gt;op-&gt;cond
cond(yes)-&gt;e
cond(no)-&gt;op
```
</code></pre>

<p><strong>Result:</strong> ( Please enable  <code>Preferences</code> - <code>Themes</code> - <code>Enable sequence &amp; flow chart</code>, default is enable. )</p>

<pre><code class="language-sequence">张三-&gt;李四: 嘿，小四儿, 写博客了没?
Note right of 李四: 李四愣了一下，说：
李四--&gt;张三: 忙得吐血，哪有时间写。
</code></pre>

<pre><code class="language-flow">st=&gt;start: 开始
e=&gt;end: 结束
op=&gt;operation: 我的操作
cond=&gt;condition: 确认？

st-&gt;op-&gt;cond
cond(yes)-&gt;e
cond(no)-&gt;op
</code></pre>

<p>More info: <a href="http://bramp.github.io/js-sequence-diagrams/">http://bramp.github.io/js-sequence-diagrams/</a>, <a href="http://adrai.github.io/flowchart.js/">http://adrai.github.io/flowchart.js/</a></p>

<h2 id="toc_18">Tables</h2>

<p><strong>Example:</strong></p>

<pre><code>First Header | Second Header
------------ | -------------
Content from cell 1 | Content from cell 2
Content in the first column | Content in the second column
</code></pre>

<p>You can create tables by assembling a list of words and dividing them with hyphens - (for the first row), and then separating each column with a pipe |:</p>

<p><strong>Result:</strong></p>

<table>
<thead>
<tr>
<th>First Header</th>
<th>Second Header</th>
</tr>
</thead>

<tbody>
<tr>
<td>Content from cell 1</td>
<td>Content from cell 2</td>
</tr>
<tr>
<td>Content in the first column</td>
<td>Content in the second column</td>
</tr>
</tbody>
</table>

<h2 id="toc_19">Strikethrough</h2>

<p><strong>Example:</strong></p>

<pre><code> (like ~~this~~)
</code></pre>

<p><strong>Result:</strong></p>

<p>Any word wrapped with two tildes (like <del>this</del>) will appear crossed out.</p>

<h2 id="toc_20">Horizontal Rules</h2>

<p>Following lines will produce a horizontal rule:</p>

<pre><code>***

*****

- - -
</code></pre>

<p><strong>Result:</strong></p>

<hr/>

<hr/>

<hr/>

<h2 id="toc_21">MathJax</h2>

<p>Use double US dollors sign pair for Block level Math formula, and one US dollor sign pair for Inline Level.</p>

<pre><code>For example this is a Block level $$x = {-b \pm \sqrt{b^2-4ac} \over 2a}$$ formula, and this is an inline Level $x = {-b \pm \sqrt{b^2-4ac} \over 2a}$ formula.

\\[ \frac{1}{\Bigl(\sqrt{\phi \sqrt{5}}-\phi\Bigr) e^{\frac25 \pi}} =
1+\frac{e^{-2\pi}} {1+\frac{e^{-4\pi}} {1+\frac{e^{-6\pi}}
{1+\frac{e^{-8\pi}} {1+\ldots} } } } \\]

</code></pre>

<p><strong>Result:</strong></p>

<p>For example this is a Block level \[x = {-b \pm \sqrt{b^2-4ac} \over 2a}\] formula, and this is an inline Level \(x = {-b \pm \sqrt{b^2-4ac} \over 2a}\) formula.</p>

<p>\[ \frac{1}{\Bigl(\sqrt{\phi \sqrt{5}}-\phi\Bigr) e^{\frac25 \pi}} =<br/>
1+\frac{e^{-2\pi}} {1+\frac{e^{-4\pi}} {1+\frac{e^{-6\pi}}<br/>
{1+\frac{e^{-8\pi}} {1+\ldots} } } } \]</p>

<h2 id="toc_22">Footnote</h2>

<p><strong>Example:</strong></p>

<pre><code>This is a footnote:[^sample_footnote]
</code></pre>

<p><strong>Result:</strong></p>

<p>This is a footnote:<sup id="fnref1"><a href="#fn1" rel="footnote">1</a></sup></p>

<h2 id="toc_23">Comment And Read More..</h2>

<!-- comment -->

<!-- more -->

<p>Actions-&gt;Insert Read More Comment <em>OR</em> <code>CMD + .</code></p>

<h2 id="toc_24">TOC</h2>

<p><strong>Example:</strong></p>

<pre><code>[TOC]
</code></pre>

<p><strong>Result:</strong></p>

<ul>
<li>
<a href="#toc_0">Philosophy</a>
</li>
<li>
<a href="#toc_1">Notice</a>
</li>
<li>
<a href="#toc_2">Headers</a>
</li>
</ul>
</li>
<li>
<a href="#toc_3">This is an <code>&lt;h1&gt;</code> tag</a>
<ul>
<li>
<a href="#toc_4">This is an <code>&lt;h2&gt;</code> tag</a>
<ul>
<li>
<ul>
<li>
<ul>
<li>
<ul>
<li>
<a href="#toc_5">This is an <code>&lt;h6&gt;</code> tag</a>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>
<a href="#toc_6">Emphasis</a>
</li>
<li>
<a href="#toc_7">Newlines</a>
</li>
<li>
<a href="#toc_8">Lists</a>
<ul>
<li>
<a href="#toc_9">Unordered</a>
</li>
<li>
<a href="#toc_10">Ordered</a>
</li>
<li>
<a href="#toc_11">Task lists</a>
</li>
</ul>
</li>
<li>
<a href="#toc_12">Images</a>
</li>
<li>
<a href="#toc_13">Links</a>
</li>
<li>
<a href="#toc_14">Blockquotes</a>
</li>
<li>
<a href="#toc_15">Inline code</a>
</li>
<li>
<a href="#toc_16">Multi-line code</a>
</li>
<li>
<a href="#toc_17">Sequence and Flow chart</a>
</li>
<li>
<a href="#toc_18">Tables</a>
</li>
<li>
<a href="#toc_19">Strikethrough</a>
</li>
<li>
<a href="#toc_20">Horizontal Rules</a>
</li>
<li>
<a href="#toc_21">MathJax</a>
</li>
<li>
<a href="#toc_22">Footnote</a>
</li>
<li>
<a href="#toc_23">Comment And Read More..</a>
</li>
<li>
<a href="#toc_24">TOC</a>
</li>
</ul>


<script src="asset/flow-sequence-chart/raphael-min.js"></script><script src="asset/flow-sequence-chart/underscore-min.js"></script><script src="asset/flow-sequence-chart/flowchart.min.js"></script><script src="asset/flow-sequence-chart/sequence-diagram-min.js"></script><script type="text/javascript">$(function(){    var mwebii=0;    var mwebChartEleId = 'mweb-chart-ele-';    $('pre>code').each(function(){        mwebii++;        var eleiid = mwebChartEleId+mwebii;        if($(this).hasClass('language-sequence')){            var ele = $(this).addClass('nohighlight').parent();            $('<div id="'+eleiid+'"><div>').insertAfter(ele);            ele.hide();            var diagram = Diagram.parse($(this).text());            diagram.drawSVG(eleiid,{theme: 'simple'});        }else if($(this).hasClass('language-flow')){            var ele = $(this).addClass('nohighlight').parent();            $('<div id="'+eleiid+'"><div>').insertAfter(ele);            ele.hide();            var diagram = flowchart.parse($(this).text());            diagram.drawSVG(eleiid);        }    });});</script>
<script type="text/x-mathjax-config">if (typeof MathJaxListener !== 'undefined') { MathJax.Hub.Register.StartupHook('End', function () { MathJaxListener.invokeCallbackForKey_('End'); }); } </script><script type="text/javascript" src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>

<div class="footnotes">
<hr/>
<ol>

<li id="fn1">
<p>footnote text detail...&nbsp;<a href="#fnref1" rev="footnote">&#8617;</a></p>
</li>

</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Markdown 语法和 MWeb 写作使用说明]]></title>
    <link href="http://coderforart.com/markdown-syntax-guide-suggest-version-zh.html"/>
    <updated>2014-12-16T21:57:10+08:00</updated>
    <id>http://coderforart.com/markdown-syntax-guide-suggest-version-zh.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">Markdown 的设计哲学</h2>

<blockquote>
<p>Markdown 的目標是實現「易讀易寫」。<br/>
不過最需要強調的便是它的可讀性。一份使用 Markdown 格式撰寫的文件應該可以直接以純文字發佈，並且看起來不會像是由許多標籤或是格式指令所構成。<br/>
Markdown 的語法有個主要的目的：用來作為一種網路內容的<em>寫作</em>用語言。</p>
</blockquote>

<span id="more"></span><!-- more -->

<h2 id="toc_1">本文约定</h2>

<p>如果有写 <code>效果如下：</code>， 在 MWeb 编辑状态下只有用 <code>CMD + R</code> 预览才可以看效果。</p>

<h2 id="toc_2">标题</h2>

<p>Markdown 语法：</p>

<pre><code># 第一级标题 `&lt;h1&gt;` 
## 第二级标题 `&lt;h2&gt;` 
###### 第六级标题 `&lt;h6&gt;` 
</code></pre>

<p>效果如下：</p>

<h1 id="toc_3">第一级标题 <code>&lt;h1&gt;</code></h1>

<h2 id="toc_4">第二级标题 <code>&lt;h2&gt;</code></h2>

<h6 id="toc_5">第六级标题 <code>&lt;h6&gt;</code></h6>

<h2 id="toc_6">强调</h2>

<p>Markdown 语法：</p>

<pre><code>*这些文字会生成`&lt;em&gt;`*
_这些文字会生成`&lt;u&gt;`_

**这些文字会生成`&lt;strong&gt;`**
__这些文字会生成`&lt;strong&gt;`__
</code></pre>

<p>在 MWeb 中的快捷键为： <code>CMD + U</code>、<code>CMD + I</code>、<code>CMD + B</code><br/>
效果如下：</p>

<p><em>这些文字会生成<code>&lt;em&gt;</code></em><br/>
<u>这些文字会生成<code>&lt;u&gt;</code></u></p>

<p><strong>这些文字会生成<code>&lt;strong&gt;</code></strong><br/>
<strong>这些文字会生成<code>&lt;strong&gt;</code></strong></p>

<h2 id="toc_7">换行</h2>

<p>四个及以上空格加回车。<br/>
如果不想打这么多空格，只要回车就为换行，请勾选：<code>Preferences</code> - <code>Themes</code> - <code>Translate newlines to &lt;br&gt; tags</code></p>

<h2 id="toc_8">列表</h2>

<h3 id="toc_9">无序列表</h3>

<p>Markdown 语法：</p>

<pre><code>* 项目一 无序列表 `* + 空格键`
* 项目二
    * 项目二的子项目一 无序列表 `TAB + * + 空格键`
    * 项目二的子项目二
</code></pre>

<p>在 MWeb 中的快捷键为： <code>Option + U</code><br/>
效果如下：</p>

<ul>
<li>项目一 无序列表 <code>* + 空格键</code></li>
<li>项目二

<ul>
<li>项目二的子项目一 无序列表 <code>TAB + * + 空格键</code></li>
<li>项目二的子项目二</li>
</ul></li>
</ul>

<h3 id="toc_10">有序列表</h3>

<p>Markdown 语法：</p>

<pre><code>1. 项目一 有序列表 `数字 + . + 空格键`
2. 项目二 
3. 项目三
    1. 项目三的子项目一 有序列表 `TAB + 数字 + . + 空格键`
    2. 项目三的子项目二
</code></pre>

<p>效果如下：</p>

<ol>
<li>项目一 有序列表 <code>数字 + . + 空格键</code></li>
<li>项目二 </li>
<li>项目三

<ol>
<li>项目三的子项目一 有序列表 <code>TAB + 数字 + . + 空格键</code></li>
<li>项目三的子项目二</li>
</ol></li>
</ol>

<h3 id="toc_11">任务列表（Task lists）</h3>

<p>Markdown 语法：</p>

<pre><code>- [ ] 任务一 未做任务 `- + 空格 + [ ]`
- [x] 任务二 已做任务 `- + 空格 + [x]`
</code></pre>

<p>效果如下：</p>

<ul>
<li class="task-list-item"><input type="checkbox" /> 任务一 未做任务 <code>- + 空格 + [ ]</code>
</li>
<li class="task-list-item"><input type="checkbox" checked /> 任务二 已做任务 <code>- + 空格 + [x]</code>
</li>
</ul>

<h2 id="toc_12">图片</h2>

<p>Markdown 语法：</p>

<pre><code>![GitHub set up](http://zh.mweb.im/asset/img/set-up-git.gif)
格式: ![Alt Text](url)
</code></pre>

<p><code>Control + Shift + I</code> 可插入Markdown语法。<br/>
如果是 MWeb 的文档库中的文档，还可以用拖放图片、<code>CMD + V</code> 粘贴、<code>CMD + Option + I</code> 导入这三种方式来增加图片。<br/>
效果如下：</p>

<p><img src="http://zh.mweb.im/asset/img/set-up-git.gif" alt="GitHub set up"/></p>

<h2 id="toc_13">链接</h2>

<p>Markdown 语法：</p>

<pre><code>email &lt;example@example.com&gt;
[GitHub](http://github.com)
自动生成连接  &lt;http://www.github.com/&gt;
</code></pre>

<p><code>Control + Shift + L</code> 可插入Markdown语法。<br/>
如果是 MWeb 的文档库中的文档，拖放或<code>CMD + Option + I</code> 导入非图片时，会生成连接。<br/>
效果如下：</p>

<p>Email 连接： <a href="mailto:example@example.com">example@example.com</a><br/>
<a href="http://github.com">连接标题Github网站</a><br/>
自动生成连接像： <a href="http://www.github.com/">http://www.github.com/</a> 这样</p>

<h2 id="toc_14">区块引用</h2>

<p>Markdown 语法：</p>

<pre><code>某某说:
&gt; 第一行引用
&gt; 第二行费用文字
</code></pre>

<p><code>CMD + Shift + B</code> 可插入Markdown语法。<br/>
效果如下：</p>

<p>某某说:</p>

<blockquote>
<p>第一行引用<br/>
第二行费用文字</p>
</blockquote>

<h2 id="toc_15">行内代码</h2>

<p>Markdown 语法：</p>

<pre><code>像这样即可：`&lt;addr&gt;` `code`
</code></pre>

<p><code>CMD + K</code> 可插入Markdown语法。<br/>
效果如下：</p>

<p>像这样即可：<code>&lt;addr&gt;</code> <code>code</code></p>

<h2 id="toc_16">多行或者一段代码</h2>

<p>Markdown 语法：</p>

<pre><code>```js
function fancyAlert(arg) {
  if(arg) {
    $.facebox({div:&#39;#foo&#39;})
  }

}
```
</code></pre>

<p><code>CMD + Shift + K</code> 可插入Markdown语法。<br/>
效果如下：</p>

<pre><code class="language-js">function fancyAlert(arg) {
    if(arg) {
        $.facebox({div:&#39;#foo&#39;})
    }

}
</code></pre>

<h2 id="toc_17">顺序图或流程图</h2>

<p>Markdown 语法：</p>

<pre><code>```sequence
张三-&gt;李四: 嘿，小四儿, 写博客了没?
Note right of 李四: 李四愣了一下，说：
李四--&gt;张三: 忙得吐血，哪有时间写。
```

```flow
st=&gt;start: 开始
e=&gt;end: 结束
op=&gt;operation: 我的操作
cond=&gt;condition: 确认？

st-&gt;op-&gt;cond
cond(yes)-&gt;e
cond(no)-&gt;op
```
</code></pre>

<p>效果如下（ <code>Preferences</code> - <code>Themes</code> - <code>Enable sequence &amp; flow chart</code> 才会看到效果 ）：</p>

<pre><code class="language-sequence">张三-&gt;李四: 嘿，小四儿, 写博客了没?
Note right of 李四: 李四愣了一下，说：
李四--&gt;张三: 忙得吐血，哪有时间写。
</code></pre>

<pre><code class="language-flow">st=&gt;start: 开始
e=&gt;end: 结束
op=&gt;operation: 我的操作
cond=&gt;condition: 确认？

st-&gt;op-&gt;cond
cond(yes)-&gt;e
cond(no)-&gt;op
</code></pre>

<p>更多请参考：<a href="http://bramp.github.io/js-sequence-diagrams/">http://bramp.github.io/js-sequence-diagrams/</a>, <a href="http://adrai.github.io/flowchart.js/">http://adrai.github.io/flowchart.js/</a></p>

<h2 id="toc_18">表格</h2>

<p>Markdown 语法：</p>

<pre><code>第一格表头 | 第二格表头
--------- | -------------
内容单元格 第一列第一格 | 内容单元格第二列第一格
内容单元格 第一列第二格 多加文字 | 内容单元格第二列第二格
</code></pre>

<p>效果如下：</p>

<table>
<thead>
<tr>
<th>第一格表头</th>
<th>第二格表头</th>
</tr>
</thead>

<tbody>
<tr>
<td>内容单元格 第一列第一格</td>
<td>内容单元格第二列第一格</td>
</tr>
<tr>
<td>内容单元格 第一列第二格 多加文字</td>
<td>内容单元格第二列第二格</td>
</tr>
</tbody>
</table>

<h2 id="toc_19">删除线</h2>

<p>Markdown 语法：</p>

<pre><code>加删除线像这样用： ~~删除这些~~
</code></pre>

<p>效果如下：</p>

<p>加删除线像这样用： <del>删除这些</del></p>

<h2 id="toc_20">分隔线</h2>

<p>以下三种方式都可以生成分隔线：</p>

<pre><code>***

*****

- - -
</code></pre>

<p>效果如下：</p>

<hr/>

<hr/>

<hr/>

<h2 id="toc_21">MathJax</h2>

<p>Markdown 语法：</p>

<pre><code>块级公式：
$$  x = \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a} $$

\\[ \frac{1}{\Bigl(\sqrt{\phi \sqrt{5}}-\phi\Bigr) e^{\frac25 \pi}} =
1+\frac{e^{-2\pi}} {1+\frac{e^{-4\pi}} {1+\frac{e^{-6\pi}}
{1+\frac{e^{-8\pi}} {1+\ldots} } } } \\]

行内公式： $\Gamma(n) = (n-1)!\quad\forall n\in\mathbb N$
</code></pre>

<p>效果如下（<code>Preferences</code> - <code>Themes</code> - <code>Enable MathJax</code> 才会看到效果）：</p>

<p>块级公式：<br/>
\[  x = \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a} \]</p>

<p>\[ \frac{1}{\Bigl(\sqrt{\phi \sqrt{5}}-\phi\Bigr) e^{\frac25 \pi}} =<br/>
1+\frac{e^{-2\pi}} {1+\frac{e^{-4\pi}} {1+\frac{e^{-6\pi}}<br/>
{1+\frac{e^{-8\pi}} {1+\ldots} } } } \]</p>

<p>行内公式： \(\Gamma(n) = (n-1)!\quad\forall n\in\mathbb N\)</p>

<h2 id="toc_22">脚注（Footnote）</h2>

<p>Markdown 语法：</p>

<pre><code>这是一个脚注：[^sample_footnote]
</code></pre>

<p>效果如下：</p>

<p>这是一个脚注：<sup id="fnref1"><a href="#fn1" rel="footnote">1</a></sup></p>

<h2 id="toc_23">注释和阅读更多</h2>

<!-- comment -->

<!-- more -->

<p>Actions-&gt;Insert Read More Comment <em>或者</em> <code>Command + .</code><br/>
<strong>注</strong> 阅读更多的功能只用在生成网站或博客时。</p>

<h2 id="toc_24">TOC</h2>

<p>Markdown 语法：</p>

<pre><code>[TOC]
</code></pre>

<p>效果如下：</p>

<ul>
<li>
<a href="#toc_0">Markdown 的设计哲学</a>
</li>
<li>
<a href="#toc_1">本文约定</a>
</li>
<li>
<a href="#toc_2">标题</a>
</li>
</ul>
</li>
<li>
<a href="#toc_3">第一级标题 <code>&lt;h1&gt;</code></a>
<ul>
<li>
<a href="#toc_4">第二级标题 <code>&lt;h2&gt;</code></a>
<ul>
<li>
<ul>
<li>
<ul>
<li>
<ul>
<li>
<a href="#toc_5">第六级标题 <code>&lt;h6&gt;</code></a>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>
<a href="#toc_6">强调</a>
</li>
<li>
<a href="#toc_7">换行</a>
</li>
<li>
<a href="#toc_8">列表</a>
<ul>
<li>
<a href="#toc_9">无序列表</a>
</li>
<li>
<a href="#toc_10">有序列表</a>
</li>
<li>
<a href="#toc_11">任务列表（Task lists）</a>
</li>
</ul>
</li>
<li>
<a href="#toc_12">图片</a>
</li>
<li>
<a href="#toc_13">链接</a>
</li>
<li>
<a href="#toc_14">区块引用</a>
</li>
<li>
<a href="#toc_15">行内代码</a>
</li>
<li>
<a href="#toc_16">多行或者一段代码</a>
</li>
<li>
<a href="#toc_17">顺序图或流程图</a>
</li>
<li>
<a href="#toc_18">表格</a>
</li>
<li>
<a href="#toc_19">删除线</a>
</li>
<li>
<a href="#toc_20">分隔线</a>
</li>
<li>
<a href="#toc_21">MathJax</a>
</li>
<li>
<a href="#toc_22">脚注（Footnote）</a>
</li>
<li>
<a href="#toc_23">注释和阅读更多</a>
</li>
<li>
<a href="#toc_24">TOC</a>
</li>
</ul>


<div class="footnotes">
<hr/>
<ol>

<li id="fn1">
<p>这里是脚注信息&nbsp;<a href="#fnref1" rev="footnote">&#8617;</a></p>
</li>

</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PinPhoto On OS X]]></title>
    <link href="http://coderforart.com/pinphoto-en.html"/>
    <updated>2015-03-05T16:21:11+08:00</updated>
    <id>http://coderforart.com/pinphoto-en.html</id>
    <content type="html"><![CDATA[
<p>Placement your photos to anywhere on the screen and save as a document, PinPhoto will restore the state when you reopen.</p>

<p style="text-align:center">
<a target="_blank" onclick="ga('send','event','download-PinPhoto-Page-EN');" href="https://itunes.apple.com/us/app/pinphoto/id972438457?mt=12" target="_blank"><img src="media/14195170907881/icon_apple_store-download-small.png" width="180" /></a><br />
<span style="color:#ff0000;">Free Download !</span>
</p>

<span id="more"></span><!-- more -->

<h2 id="toc_0">Introduction PinPhoto</h2>

<h3 id="toc_1">New PinPhoto document and import photos</h3>

<p><code>CMD+N</code> to new PinPhoto document. Use Drag &amp; drop or <code>Import</code> button to add photos. You can also press <code>CMD+V</code> to paste photo when you copy a photo to pasteboard.</p>

<p><img src="media/14255436714850/1.jpg" alt=""/></p>

<p>Tip: If you want to add some lovely photo from website to PinPhoto document, right click website&#39;s photo, choose <code>Copy Image</code>, and go to PinPhoto document press <code>CMD+V</code>.</p>

<h3 id="toc_2">Open and placement the photos</h3>

<p>Click <code>Main Window</code> photos list&#39;s photo to open <code>Photo View</code>. Mouse moves to the top of <code>Photo View</code> and drag to change the position. You can use two finger zoom the photo. Use the right click context menu or main menu --&gt; view for more.</p>

<p><img src="media/14255436714850/2.jpg" alt=""/></p>

<p><strong>Right click context menu:</strong></p>

<ul>
<li>Zoom In: <code>CMD+=</code></li>
<li>Zoom Out: <code>CMD+-</code></li>
<li>Zoom to Fix: <code>CMD+9</code></li>
<li>100%: actual size - <code>CMD+0</code></li>
<li>200%: double&#39;s actual size - <code>CMD+8</code></li>
<li>100% And Resize Window: actual size photo and view</li>
<li>Duplicate View</li>
<li>Colse View  - <code>CMD+W</code></li>
<li>Close All View</li>
<li>Show Main Window: <code>CMD+F</code></li>
<li>Toggle Main Window: <code>CMD+D</code></li>
<li>Toggle Floating: <code>CMD+T</code></li>
<li>All Floating: <code>CMD+Shift+T</code></li>
<li>Clear All Floating: <code>CMD+Option+T</code></li>
<li>Prev Document: <code>⇤</code></li>
<li>Next Document: <code>⇥</code></li>
<li>Close Document: <code>CMD+Shift+w</code></li>
</ul>

<p>Automatic placement selected photos:<br/>
You can select some photos --&gt; right click --&gt; choose <code>Open &amp; Placement Selected Photos</code>. PinPhoto will placement selected photos on full screen automatically.</p>

<p><img src="media/14255436714850/3.jpg" alt=""/></p>

<p><strong>Right click context menu:</strong></p>

<ul>
<li>Open Selected Photos View</li>
<li>Open &amp; Placement Selected Photos</li>
<li>Close Selected Photos View</li>
<li>Close All View</li>
<li>Deselect All</li>
<li>Select All</li>
<li>Delete: <code>CMD+Delete</code></li>
<li>Hide Main Window</li>
<li>All Floating: <code>CMD+Shift+T</code></li>
<li>Clear All Floating: - <code>CMD+Option+T</code></li>
<li>Prev Document: <code>⇤</code></li>
<li>Next Document: <code>⇥</code></li>
</ul>

<h3 id="toc_3">Floating Photo View</h3>

<p><code>CMD+T</code> to toggle floating <code>Photo View</code>, <code>CMD+Shift+T</code> floating all <code>Photo View</code>, <code>CMD+Option+T</code> cancels floating all <code>Photo View</code>.</p>

<p><img src="media/14255436714850/4.jpg" alt=""/></p>

<h3 id="toc_4">Hide/Show Main Window</h3>

<p><code>CMD+D</code> toggle hide/show <code>Main Window</code>, <code>CMD+F</code> show <code>Main Window</code></p>

<p><img src="media/14255436714850/5.jpg" alt=""/></p>

<h3 id="toc_5">Switch opened PinPhoto documents</h3>

<p>To switch prev document,please use <code>⇤</code> key. To switch next document,please use <code>⇥</code> key.</p>

<h2 id="toc_6">Questions?</h2>

<p>Please use Help --&gt; Send Feedback in PinPhoto or Twitter: <a href="https://twitter.com/oulvhai">@oulvhai</a></p>

]]></content>
  </entry>
  
</feed>
