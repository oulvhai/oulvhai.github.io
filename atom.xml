<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Coder For Art]]></title>
  <link href="http://coderforart.com/atom.xml" rel="self"/>
  <link href="http://coderforart.com/"/>
  <updated>2015-02-09T00:08:01+08:00</updated>
  <id>http://coderforart.com/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://www.coderforart.com/">CoderForArt</generator>

  
  <entry>
    <title type="html"><![CDATA[MWeb 1.2 release (Submited App Store Waiting For Review)]]></title>
    <link href="http://coderforart.com/mweb-v1.2-release.html"/>
    <updated>2015-02-08T23:50:28+08:00</updated>
    <id>http://coderforart.com/mweb-v1.2-release.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">New feature</h2>

<ul>
<li>Add auto insert list and blockquote prefix: Preferences &ndash;&gt; General &ndash;&gt; Auto insert list and blockquote prefix</li>
<li>In Editor share: Copy as image,Save as image,Save as PDF etc&hellip; now change to HTML style.</li>
<li>Add HTML or PDF export suport for documents. You can selected documents &ndash;&gt; Right Mouse Button Click(RMB) &ndash;&gt; Export as HTML or PDF.</li>
<li>Add HTML or PDF export suport for category. You can selected category &ndash;&gt; RMB &ndash;&gt; Export as HTML or PDF.</li>
<li>Add new preview css: octopress,greyshade.</li>
<li>Add drag &amp; drop to sort documents. RMB parent category &ndash;&gt; Edit &ndash;&gt; set Order by to Custom &ndash;&gt; you can drag &amp; drop to sort</li>
<li>Add drag &amp; drop to sort categories.</li>
</ul>

<h2 id="toc_1">Fixed</h2>

<ul>
<li>Build site crash some time</li>
<li>Preview site not work some time</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb 1.2 版更新说明（已提交到Apple等审核）]]></title>
    <link href="http://coderforart.com/mweb-v1.2-release-zh.html"/>
    <updated>2015-02-08T17:47:38+08:00</updated>
    <id>http://coderforart.com/mweb-v1.2-release-zh.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">新增</h2>

<ul>
<li>可选择在输入时是否自动插入列表编号，可以在 Preferences &ndash;&gt; General &ndash;&gt; Auto insert list and blockquote prefix 开启和关闭。</li>
<li>分享功能的 Copy as image、Save as image、Save as PDF 等现在统一都用HTML的样式了，另外还专门为分享到微薄等SNS生成的图片做了优化，比如说如果有代码，会强制换行。</li>
<li>新增把文档库里的单个或多个文档导出为HTML或者PDF。使用方法为：选择要导出的文档（可多选） &ndash;&gt; 鼠标右键 &ndash;&gt; Export as HTML、PDF</li>
<li>新增把整个分类导出为HTML或者PDF。使用方法为：右键要导出的分类 &ndash;&gt; Export as HTML、PDF。导出的PDF现在还没办法自动生成目录，下边的详细介绍会分享一个可以自动生成目录的方法，然后个人觉得生成的PDF非常好。</li>
<li>新增MWeb自带的两个主题octopress、greyshade的即时预览CSS。现在可以不用 Build site 就可以即时预览文章的大概效果了。另外自定网站的预览CSS非常简单，请看下边的详细介绍。</li>
<li>新增可以拖拽改变文档的顺序。使用方法为：鼠标右键父分类 &ndash;&gt; Edit &ndash;&gt; 把Order by设定为：Custom &ndash;&gt; 然后就可以用拖拽调节这个父分类下的文档顺序了。</li>
<li>新增可以拖拽改变分类的顺序。</li>
</ul>

<span id="more"></span><!-- more -->

<h2 id="toc_1">修正</h2>

<ul>
<li>Build site 闪退问题，这也是这次版本发布的原因。</li>
<li>Preview site 无效果问题。</li>
<li>编辑器小修正。</li>
</ul>

<h2 id="toc_2">生成带目录的PDF的方法</h2>

<p>先安装wkhtmltopdf，网址：<a href="http://wkhtmltopdf.org/">http://wkhtmltopdf.org/</a>。<br>
然后用Export as HTML把要生成带目录的PDF的内容导出为HTML。我这里是选择整个Coder For Art网站。如图是导出到tocPDF文件夹下的情况。<br>
<img src="media/14233888581377/14233994590970.jpg" alt="">￼￼￼￼￼￼￼￼</p>

<p>选择tocPDF文件夹，并<code>CMD+C</code>复制,打开终端工具(Terminal)，打<code>cd</code> （注意cd后带一空格），然后<code>CMD+V</code>，再 Enter。<br>
然后再执行以下命令</p>

<pre><code>wkhtmltopdf toc index.html CoderForArt.pdf
</code></pre>

<p>￼执行结果生成的PDF如图：<br>
<img src="media/14233888581377/14233999928601.jpg" alt="">￼￼￼￼￼￼￼￼</p>

<p>一般情况下有代码的地方如果过长会被切掉，可以加入以下CSS</p>

<pre><code class="css">.hljs{overflow: visible; word-wrap: break-word;}
</code></pre>

<p>就不会被切了。如图：<br>
<img src="media/14233888581377/14234006629706.jpg" alt="">￼￼￼￼￼￼￼￼</p>

<h2 id="toc_3">自定预览CSS</h2>

<p>把要自定的预览的网站的主题整个文件夹复制到预览CSS文件夹的layout文件夹下，如图是我要自定greyshade主题的预览CSS：</p>

<p><img src="media/14233888581377/14233974412288.jpg" alt="">￼￼￼￼￼￼￼￼￼￼</p>

<p>然后只留下layout/greyshade文件夹下的asset文件夹和随便两个.html文件，其他都删除。把留下的两个.html文件分别改名为：demo.html和index.html。</p>

<p>使用Build site &ndash;&gt; Preview site &ndash;&gt; 转到任何一个单独的文章页面 &ndash;&gt; 查看原代码 &ndash;&gt; 复制并把它粘贴到demo.html上。现在你可以直接打开demo.html看效果了。调整demo.html到合适的预览效果时，再把demo.html的所有内容粘贴到index.html上。</p>

<p>把index.html页的标题都用<code>{{title}}</code>替换，内容用<code>{{content}}</code>替换，并在<code>&lt;head&gt;&lt;/head&gt;</code>之间加上<code>{{head}}</code>，一般加在<code>&lt;/head&gt;</code>前面即可。</p>

<p>如图，在预览CSS的文件夹里新增一个名为greyshade.css的内容为空的文件即可。<br>
<img src="media/14233888581377/14233984379844.jpg" alt="">￼￼￼￼￼￼￼￼￼</p>

<p>要注意的是：greyshade.css的文件名greyshade和layout文件夹下的greyshade文件夹的名称是一样的。然后如果你引用的CSS加有<code>media=&quot;screen, projection&quot;</code>这样的限定，请删除，不然MWeb在导出PDF功能上会没有样式。还有如果你在用highlightjs这个代码高亮插件，导出PDF或者生成图片时，代码被切掉的话，可以用以下CSS强制换行：</p>

<pre><code class="css">.hljs{overflow: visible; word-wrap: break-word;}
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[万网（阿里云）免费虚拟主机体验]]></title>
    <link href="http://coderforart.com/aliyun-net-cn-free-web-host-express.html"/>
    <updated>2015-02-03T12:16:28+08:00</updated>
    <id>http://coderforart.com/aliyun-net-cn-free-web-host-express.html</id>
    <content type="html"><![CDATA[
<p>之前在v2ex听说万网出了一款免费主机，申请即可以用二年。我当时去抢，并没有抢到，结果今天万网发邮件给我免费试用！这种好事当然要试一试！开通很顺利，没有遇到什么问题。</p>

<p>我按步骤开通后，发现上传方式是FTP，因为买了ForkLift没怎么用过，现在正好试试他的同步功能如何。</p>

<span id="more"></span><!-- more -->

<p>我是用MWeb生成的静态网站并上传试试如何的。下图左边是我本机的用MWeb生成的静态网站的所在文件夹，然后右边是连上所给的FTP后，转到htdocs文件夹，在ForkLift中选择File&ndash;&gt;Sync to&hellip;</p>

<p><img src="media/14229369882579/14229376408401.jpg" alt="">￼￼</p>

<p>上传速度一般，我的宽带是电信20M。<br>
<img src="media/14229369882579/14229376940910.jpg" alt="">￼￼</p>

<p>上传后就可以去预览看看速度如何了。进去一看，发现是要用自己的FTP密码登录才可以看。也就是说不备案是不能给别人看的，必须备案才可以。<br>
浏览一下图很多的页面。速度还可以，比放在github快很多！</p>

<p>然后试试更新文章，看看ForkLift是否会自动同步！<br>
因为我现在是新写了一文章，所以在MWeb中 Build site 然后看看ForkLift会不会侦测到文件改变，然后自动同步更新到FTP。</p>

<p>可惜的是：ForkLift不会自动同步，还是要你去点File&ndash;&gt;Sync to&hellip;才可以。如图，他会找出那些文档有改动，然后点Sync，才会更新到FTP。</p>

<p><img src="media/14229369882579/14229393304301.jpg" alt="">￼￼</p>

<p>下图是上传后预览的结果：<br>
<img src="media/14229369882579/14229395629085.jpg" alt="">￼￼</p>

<h2 id="toc_0">备案和总结</h2>

<p>有看到过v2ex上有朋友说备案也不大麻烦，弄好资料差不多五天就可以了。我当然不会将coderforart网站放到万网，所以肯定是不会去备案的。然后总的来说，万网的免费主机还是不错的，免费二年、速度也还行、备案也不麻烦。当然PHP和Mysql的功能我没去试，感觉免费主机还是应该只放静态HTML就好。</p>

<p>MWeb用FTP的体验比github好很多，只要生成然后用FTP同步即可，非常简单，我想我开发MWeb的目的应该是达到了。虽然MWeb现在非常少人用，但是我还是会继续优化MWeb，让它能更简单。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[把生成的静态网站发布到github或FTP]]></title>
    <link href="http://coderforart.com/sync-webistes-to-github-or-ftp-zh.html"/>
    <updated>2015-01-28T11:23:05+08:00</updated>
    <id>http://coderforart.com/sync-webistes-to-github-or-ftp-zh.html</id>
    <content type="html"><![CDATA[
<p>看现在多几个人浏览，就花时间写这一篇了。</p>

<p>MWeb的优点是生成的网站都在你的本地电脑上，所以你可以备份、同步到Dropbox等网盘。当然也可以一键重新生成，您只需要备份好您的文档库即可。比如备份文档库到dropbox的方法为：</p>

<span id="more"></span><!-- more -->

<p>请打开终端工具(Terminal),并执行以下命令：</p>

<pre><code>ln -s ~/Library/Containers/com.coderforart.MWeb/Data/Documents/MWeb ~/Dropbox/MWebBackup
</code></pre>

<p>可以看出来大概语法是：</p>

<pre><code>ln -s ~/Library/Containers/com.coderforart.MWeb/Data/Documents/MWeb + 网盘同步的位置
</code></pre>

<p>这样就可以备份到任何网盘了。</p>

<p>您也可以把你的网站传到dropbox上，再分享出来，因为dropbox支持直接显示HTML，所以其它人就可以很方便查看。MWeb之后也会增加一些其他类型用途的主题模板。下面说一下如何找到MWeb生成的网站的位置，如图。<br>
<img src="media/14224153855854/14224159407048.jpg" alt="">￼￼￼￼￼￼<br>
如果你觉得MWeb默认的位置比较不好，您可以改变MWeb网站输出的文件夹，如图我把输出的文件夹改到我的<code>Documents/MWebSites</code>下了。<br>
<img src="media/14224153855854/14224164068185.jpg" alt="">￼￼￼￼￼￼</p>

<p>这样话就比较好找了。</p>

<h2 id="toc_0">发布到github</h2>

<p>github目前应该是最好的提供免费博客、网站服务的公司了（当然这其实并不是github的想法）。如果你有了github的帐号后只需要新增一个 <code>Github repository</code>，名称为<code>username.github.io</code>,如图<br>
<img src="media/14224153855854/14224167094764.jpg" alt="">￼￼￼￼￼￼</p>

<p>然后会看到这页：<br>
<img src="media/14224153855854/14224167472996.jpg" alt="">￼￼￼￼￼￼</p>

<p>这样就简单了，先进入MWeb生成的网站的所在文件夹（如上面所说，在MWeb中点<code>Show in finder</code>），我这里是选择 <code>Coder For Art</code> 然后 <code>CMD+C</code>。如图：<br>
<img src="media/14224153855854/14224170128740.jpg" alt="">￼￼￼￼￼￼</p>

<p>然后打开终端工具(Terminal)，打<code>cd</code> （注意cd后带一空格），然后<code>CMD+V</code>，然后Enter，如图：<br>
<img src="media/14224153855854/14224172504947.jpg" alt="">￼￼￼￼￼￼</p>

<p>然后再分别打入上边github提示的命令样本，注意我这边有改动到喔。再注意，如果你先前没有在MWeb中<code>Build site</code>，要先生成一下。</p>

<pre><code>echo &quot;# oimotis.github.io&quot; &gt;&gt; README.md
git init
git add .
git commit -m &quot;first commit&quot;
git remote add origin https://github.com/oimotis/oimotis.github.io.git
git push -u origin master
</code></pre>

<p>效果如图：<br>
<img src="media/14224153855854/14224176047741.jpg" alt="">￼￼￼￼￼￼<br>
<img src="media/14224153855854/14224181872446.jpg" alt="">￼￼￼￼￼￼</p>

<p>可以看到已经传成功了，<a href="http://oimotis.github.io/">http://oimotis.github.io/</a> 直接用这个网址就可以浏览了。</p>

<p>下面就要自定域名了。<br>
依次执行以下命令即可：</p>

<pre><code>echo &#39;blog.coderforart.com&#39; &gt;&gt; CNAME
git add --ignore-removal .
git commit -m &quot;cname&quot;
git push -u origin master
</code></pre>

<p>效果如图：<br>
<img src="media/14224153855854/14224187391174.jpg" alt="">￼￼￼￼￼￼</p>

<p>然后在域名中设定CNAME到<code>oimotis.github.io</code>（oimotis要换成你的github用户名）即可。 如图，这是我上边的设置<br>
<img src="media/14224153855854/14224192721298.jpg" alt="">￼￼￼￼￼￼</p>

<p>注意，我并没有真设置喔，所以 blog.coderforart.com 是无效的。<br>
我的网站<a href="http://coderforart.com">http://coderforart.com</a>是设定CNAME文件的内容为：coderforart.com，CNAME的host为 www, POINTS TO:为 oulvhai.github.io，然后还要把 A Record（A记录）设置为 <code>192.30.252.153</code> 和 <code>192.30.252.154</code> 才行。</p>

<p>以后发新文章要更新，就执行以下命令即可：</p>

<pre><code>git add --ignore-removal .
git commit -m &quot;cname&quot;
git push -u origin master
</code></pre>

<h2 id="toc_1">发布到FTP</h2>

<p>对于一般用户来说，github可能比较麻烦，还是FTP简单。就直接传上FTP即可。如果你是在用 ForkLift 或者 Yummy FTP 这种有 可以自动同步本地和服务器端的文件夹的功能的FTP就更好用了，比github方便多了。具体我就不介绍了。</p>

<p><strong>2/3更新</strong> FTP上传可以看看这篇 <a href="aliyun-net-cn-free-web-host-express.html">万网（阿里云）免费虚拟主机体验</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[游戏制作之路：一个对我来说可实现的High-end的Mac/iOS游戏制作大概计划]]></title>
    <link href="http://coderforart.com/make-a-simple-high-end-mac-ios-game.html"/>
    <updated>2015-01-21T10:05:07+08:00</updated>
    <id>http://coderforart.com/make-a-simple-high-end-mac-ios-game.html</id>
    <content type="html"><![CDATA[
<p>对于学习一些东西，我比较习惯任务驱动式的学习，也就是说，要事先订好一个目标，要做什么东西，达到什么效果，然后根据自己了解的知识作一个可以实现这个目标的计划。</p>

<p>现在要学的是游戏制作，而且是High-end的3D游戏制作。如前文 <a href="unrealengine4-windows-mac.html">游戏制作之路：游戏引擎选择、Mac下和Windows下UnrealEngine 4体验对比、文档及其他</a> 所说的，我已经选择了UE4这个画面最顶级的引擎，它即使是在iOS上，画面也是最高端的，可以参考 <a href="https://www.unrealengine.com/blog/unreal-engine-powered-zen-garden-released">Zen Garden</a> 这个Demo。然后我也大概确认了可行性，现在要解决的是玩法（游戏性）、内容创作、音效这些东西。</p>

<span id="more"></span><!-- more -->

<h2 id="toc_0">游戏的大概内容和玩法</h2>

<p>为了让目标尽可能得以实现，游戏要尽可能简单。考虑到内容创作难度太大，所以我要使用尽可能少的元素。目前确认的有山、树、花草、水、岩石火山怪物、钢铁怪物、一两个造型复杂点的Boss、一两个女性人物角色。下面分开说明</p>

<ul>
<li>山：UE4对山地的制作支持的比较好，所以我要做的只有设计山地的外形和画山地材质了。这点内容创作我相信能做好，只要仔细研究山的画法，表现形式和树、花草的布局即可</li>
<li>树：UE4有支持SpeedTree这样的简单可以做出各种外形的树的软件插件，但是这显然不是我的目标，在迫不得以的情况下才会用。我开始会从画画和3D建模去从头开始创作树，然后仔细研究树的材质和表现，从而真正掌握树的制作。</li>
<li>花草：UE4好像内置花草的支持，不大清楚是如何，但是应该是很好的消息。不过估计也是要去画花的材质和表现，花草这部分也是我要仔细研究和全程掌握的。从开始创作花草外形到如何做3D建模，上材质并引入到UE4都要掌握。</li>
<li>水：这部分在UE4中比较好实现，应该是只要设计位置和外形就好，任务比较简单。</li>
<li>岩石火山怪物、钢铁怪物：怪物制作在游戏中是重点，难度很高。从开始设计到引入UE4，像树或花草那样流程即可。真正有挑战的是怪物AI了，这部分就关系到游戏玩法和游戏性了。这部分我了解不多，反正是要花大量时间研究就是了，初步方向是UE4中内置的AI的组件如何使用，然后读一些游戏AI的书等等。估计是可能会用到C++了，这也是要学习的。</li>
<li>人物角色：人物角色是我学习的重点，我希望这部分在做完这个游戏后能真正掌握一些。这部分要研究的东西太多了，光是人物设计就是要花大量时间，人体结构，画法，服饰。还有是3D建模，人物皮肤材质，服饰材质等等。服饰部分东西太庞大，我只选一个小方向即可。还有比如说头发和衣服在游戏中的做法等等。再有就是角色动画，初步估计应该是在3D软件中调好，然后引入UE4中也是有大量工作要做的。这也只是在对角色动画比较了解的基础上，刚刚好我不了解，这也得学！不知道UE4能不能做到像下图那样的画出来的角色的质量？这也是我想研究的。
<img src="media/14218059079784/5bf24facgw1eo0sjmlsiwj20uk0hoju2.jpg" alt="5bf24facgw1eo0sjmlsiwj20uk0hoju2">￼￼￼
<img src="media/14218059079784/5bf24facgw1eo0sjsnjb6j20dw0cnta3.jpg" alt="5bf24facgw1eo0sjsnjb6j20dw0cnta3">￼￼￼</li>
</ul>

<p>游戏玩法部分，这部分需要我在学习中慢慢想了，这部分应该不难，只是做得好不好的问题，即使做得不好，也没关系了。我的方向不在这。</p>

<h2 id="toc_1">内容创作工具</h2>

<p>内容创作非工具部分花费时间最多，量最大，但是这部分我无法写更多的东西，只能说是边学边研究了。然后工具部分却有一些可写的。<br>
硬件部分要求不大，我目前有一台高性能的PC，两台MacBook Pro，现用的是2013版的15寸MacBook Pro，还有一台绘画板子 cintiq 13HD，足够用了。软件部分如下</p>

<ul>
<li>Photoshop：这个神器肯定是必须要的，不管是设计或画画还是做材质，他都是首选的工具。</li>
<li>ZBrush：这个也属于易用性极好的神器，它大大降低了3D建模的难度。它也是我认为我可以掌握怪物和人物角色创作的理由。还有它的价格不贵，$795，在我可以接受范围。</li>
<li>Maya LT：为什么是Maya而不是免费的Blender？最主要是Maya提供了官方的.FBX导出支持，而Blender是以插件的形式出现的，还有就是《游戏引擎架构》多次提到Maya，想来是不会错的。为什么是Maya LT，有写错？没有！因为Maya太贵了，全买$3675，订阅$185每月。Maya LT订阅$30每月，年订$240。而且autodesk的软件都可以很方便地申请3年的教育学习用途。</li>
<li>我的另一款软件：这软件是要先做出来，当然不是什么强大的软件，这是我认为对内容创作和学习有用的小软件。</li>
</ul>

<p>软件部分除非以上的软件都不够用了，否则不会再引进新软件，因为评估和学习也是要成本的。当然，不用学的小软件是除外。</p>

<h2 id="toc_2">游戏音效、背景故事</h2>

<p>音效部分虽然也是属于非常重要的，但是我完全不懂音效，也没有兴趣深入研究它，大概来几个还算可以的音效就行了。背景故事部分在学习研究中跟游戏玩法一起慢慢考虑。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb Q & A]]></title>
    <link href="http://coderforart.com/mweb-qa.html"/>
    <updated>2015-01-20T10:04:01+08:00</updated>
    <id>http://coderforart.com/mweb-qa.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">How to export HTML style PDF？</h2>

<p><code>CMD+R</code> open <q>Live Preview</q>,click share button,select <code>Save as PDF</code>.</p>

<h2 id="toc_1">How to enable MathJax preview support? How to enable website MathJax support?</h2>

<p><code>CMD+,</code> open Preferences，Themes &ndash;&gt; Enable Math.<br>
For enable website MathJax support,the simple way is copy below code to <code>Site category</code> &ndash;&gt; <code>Site other:</code> text box. </p>

<pre><code class="js">&lt;script type=&quot;text/x-mathjax-config&quot;&gt;
  MathJax.Hub.Config({tex2jax: {inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]]}});
&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot;
  src=&quot;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;&gt;
&lt;/script&gt;
</code></pre>

<p>If you website is https,please replace <code>http://cdn.mathjax.org...</code> to <code>https://cdn.mathjax.org...</code>.</p>

<span id="more"></span><!-- more -->

<h2 id="toc_2">How to backup MWeb&rsquo;s documents library to Dropbox？</h2>

<p>Please open Terminal ( Spotlight&ndash;&gt;enter <code>terminal</code> ) and enter the following command. </p>

<pre><code>ln -s ~/Library/Containers/com.coderforart.MWeb/Data/Documents/MWeb ~/Dropbox/MWebBackup
</code></pre>

<h2 id="toc_3">How to add Disqus support?</h2>

<p>go to <a href="https://disqus.com/">https://disqus.com/</a>,click <code>Add Disqus to Your Site</code>&hellip;. At last you will get code like below:</p>

<pre><code class="js">&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
   var disqus_shortname = &#39;your_shortname&#39;; 

   (function() {
       var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
       dsq.src = &#39;//&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
       (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
   })();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;https://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
</code></pre>

<p>Add the code to the themes template file: <code>post.html</code>, like this link: <a href="https://github.com/oulvhai/MWeb-Themes/blob/master/mweb-greyshade/post.html">https://github.com/oulvhai/MWeb-Themes/blob/master/mweb-greyshade/post.html</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb 所有问题和回答收集]]></title>
    <link href="http://coderforart.com/mweb-qa-zh.html.html"/>
    <updated>2015-01-20T10:03:00+08:00</updated>
    <id>http://coderforart.com/mweb-qa-zh.html.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">如何导出HTML样式的PDF？（1.2版已改进这个问题。）</h2>

<p><code>CMD+R</code>打开Live Preview窗口，点右边的分享按钮，选择<code>Save as PDF</code>即可。</p>

<h2 id="toc_1">如何开启MathJax预览支持？如何让网站支持MathJax？</h2>

<p><code>CMD+,</code>打开设置面板，切到Themes，勾选Enable Math选项。<br>
如果要让网站支持MathJax，最简单的方法是在网站分类设置中的：Site other:的文本框中填入以下代码：</p>

<pre><code class="js">&lt;script type=&quot;text/x-mathjax-config&quot;&gt;
  MathJax.Hub.Config({tex2jax: {inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]]}});
&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot;
  src=&quot;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;&gt;
&lt;/script&gt;
</code></pre>

<p>如果您的网站是要用HTTPS，请把：<code>http://cdn.mathjax.org...</code>改为：<code>https://cdn.mathjax.org...</code></p>

<span id="more"></span><!-- more -->

<h2 id="toc_2">如何将MWeb的文档库备份至Dropbox？</h2>

<p>请打开终端工具(Terminal),并执行以下命令：</p>

<pre><code>ln -s ~/Library/Containers/com.coderforart.MWeb/Data/Documents/MWeb ~/Dropbox/MWebBackup
</code></pre>

<h2 id="toc_3">如何为文章增加Disqus或者多说等评论？</h2>

<p>Disqus的话，去<a href="https://disqus.com/">https://disqus.com/</a>，然后会得到像以下这样的代码，点到主题模板的post.html页的合适的位置即可。</p>

<pre><code class="js">&lt;div id=&quot;disqus_thread&quot;&gt;&lt;/div&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
   var disqus_shortname = &#39;这个会不一样&#39;; 

   (function() {
       var dsq = document.createElement(&#39;script&#39;); dsq.type = &#39;text/javascript&#39;; dsq.async = true;
       dsq.src = &#39;//&#39; + disqus_shortname + &#39;.disqus.com/embed.js&#39;;
       (document.getElementsByTagName(&#39;head&#39;)[0] || document.getElementsByTagName(&#39;body&#39;)[0]).appendChild(dsq);
   })();
&lt;/script&gt;
&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;https://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;
</code></pre>

<p>多说应该是差不多的方法。可以参考这个网址的情况：<a href="https://github.com/oulvhai/MWeb-Themes/blob/master/mweb-greyshade/post.html">https://github.com/oulvhai/MWeb-Themes/blob/master/mweb-greyshade/post.html</a></p>

<h2 id="toc_4">虽然在后面打中文不会跳动，但是在文章中间插入中文时，下面的文本会跳动怎么办？</h2>

<p>这个解决办法好像只能换字体，就是在设置中把编辑器的字体换成<code>Hiragino Sans GB</code>，中文名称应该是叫<code>冬青黑体</code>。另外我有试过Yosemite下不会跳了，当然如果你在用Yosemite，就不会有这个问题了。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb 1.1 release]]></title>
    <link href="http://coderforart.com/mweb-v1.1-release.html"/>
    <updated>2015-01-19T15:02:30+08:00</updated>
    <id>http://coderforart.com/mweb-v1.1-release.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">New feature</h2>

<ul>
<li>Add import files (.txt and .md) featrue：File &ndash;&gt; Import Files To Library&hellip;</li>
<li>Add TOC（Table of Content）featrue: Preferences &ndash;&gt; Themes &ndash;&gt; Enable TOC (Table of Content)</li>
<li>Add MWeb Lite</li>
<li>Add sitemap suport.</li>
<li>Add right click for category edit.</li>
<li>Add syntax highlighting in fenced code blocks feature,for version 1.0 user, please go to <a href="https://github.com/oulvhai/MWeb-Themes/">https://github.com/oulvhai/MWeb-Themes/</a> download new themes. Language name detail:<a href="http://highlightjs.readthedocs.org/en/latest/css-classes-reference.html">http://highlightjs.readthedocs.org/en/latest/css-classes-reference.html</a></li>
</ul>

<span id="more"></span><!-- more -->

<h2 id="toc_1">Fixed</h2>

<ul>
<li>Live preview improved</li>
<li>Outline improved</li>
<li>case sensitive system can&rsquo;t open MWeb&rsquo;s document.</li>
</ul>

<h2 id="toc_2">Syntax highlighting in fenced code blocks screenshot</h2>

<p><img src="media/14216489427773/Snip20150119_6.png" alt="">￼￼￼￼￼￼￼</p>

<p><img src="media/14216489427773/Snip20150119_5.png" alt="">￼￼￼￼￼</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb 1.1 版更新说明]]></title>
    <link href="http://coderforart.com/mweb-v1.1-release-zh.html"/>
    <updated>2015-01-19T14:29:02+08:00</updated>
    <id>http://coderforart.com/mweb-v1.1-release-zh.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">新增</h2>

<ul>
<li>增加导入.txt或Markdown文档到文档库功能：File &ndash;&gt; Import Files To Library&hellip;</li>
<li>增加TOC（Table of Content）支持，和是否 Render TOC 选项</li>
<li>增加免费版</li>
<li>增加sitemap功能</li>
<li>站点文件夹增加右键菜单</li>
<li>增加代码高亮功能，支持超多编程语言，1.0版本的朋友请去<a href="https://github.com/oulvhai/MWeb-Themes/">https://github.com/oulvhai/MWeb-Themes/</a>下载最新的主题即可。支持语言及缩写详细请参考：<a href="http://highlightjs.readthedocs.org/en/latest/css-classes-reference.html">http://highlightjs.readthedocs.org/en/latest/css-classes-reference.html</a></li>
</ul>

<span id="more"></span><!-- more -->

<h2 id="toc_1">修正</h2>

<ul>
<li>即时预览功能大改进，现在是真正即时了，然后滚动时，同步的位置也比较准确了。</li>
<li>Outline跳到所在位置时高亮选中文字</li>
<li>区分大小写系统在初次打开时无法看到自带的文档问题</li>
<li>初次使用直接点Preview Site无效果问题</li>
</ul>

<h2 id="toc_2">代码高亮功能截图</h2>

<p><img src="media/14216489427773/Snip20150119_6.png" alt="">￼￼￼￼￼￼￼</p>

<p><img src="media/14216489427773/Snip20150119_5.png" alt="">￼￼￼￼￼￼￼</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[游戏制作之路：游戏引擎选择、Mac下和Windows下UnrealEngine 4体验对比、文档及其他]]></title>
    <link href="http://coderforart.com/unrealengine4-windows-mac.html"/>
    <updated>2015-01-16T14:19:42+08:00</updated>
    <id>http://coderforart.com/unrealengine4-windows-mac.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">UnrealEngine 4和Unity3d的选择</h2>

<p>订阅了UrealEngine4（UE4）开发者。我开始做网站用的是ASP.NET和C#，之后做网站虽然换用更方便的PHP（因为做的都是小网站）。我想说，做了长达7年的小网站就算我再水，但是C#我还是懂一些的，而Unity3d刚刚好最建议用的就是C#。C++我不懂，只在高中毕业后看了C++编程思想并把大部分例子都手打入电脑并运行。不极是在肖极Unity3d在移动端有大量成功的案例，文档非常好，视频教程也很全，研究的人也非常多，有问题很容易找到文案等等等等，简直是好得不能再好了！但是：UE4是开源的，《游戏引擎架构》里说游戏一般都用C++，我这次学是认真的！！作为一个有追求的人也必须选UE4等等！！最后我要说的是，这些都不是我选UE4的主要原因，真相是：Unity3D好贵！月付400多，不付就马上没有全功能的，全买更贵！UE4如果你不用最新的，你只要买一个月，之后都是免费的，全功能的。虽然这点钱对于真正做产品来说，不算什么，但是对于学习了说，不一样。反正做游戏也不单单是引擎的事，然后学会了一个引擎，再学另一个，或者也就是几天的事。</p>

<span id="more"></span><!-- more -->

<h2 id="toc_1">Mac OS X下下载和编译UnrealEngine 4</h2>

<p>UE4在github中有三个版本，我直接下载release版本的.zip（因为我用git clone太慢了）。我下载的是4.6.1版。下载完成解压后右键setup.command打开，然后还会要下载大概2G左右的东西，这个下载的速度不错。然后再右键GenerateProjectFiles.command打开。等一会儿后就生成UE4.xcodeproj了。打开UE4.xcodeproj后，选择UE4Editor-Mac，然后build，发现我下载这个版本会出错。出错是这行：</p>

<pre><code class="cpp">static bool GAllowApplePlatformSymbolication = PLATFORM_MAC &amp;&amp; IS_PROGRAM;
</code></pre>

<p>错误信息是：<code>Use of logical &#39;&amp;&amp;&#39; with constant operand</code>。<br>
我看不大懂，实在是找不到好办法，看意思他肯定是<code>true</code>，就改成：</p>

<pre><code class="cpp">static bool GAllowApplePlatformSymbolication = true;//PLATFORM_MAC &amp;&amp; IS_PROGRAM;
</code></pre>

<p>然后就编译通过了。</p>

<p>但是，我运行的时候，好慢好慢，然后xcode下打出来一堆东西，然后就挂掉了，没办法运行。。</p>

<p>我去Epic打包好的地方下载一包试试。</p>

<p>伤心了，还是一样错误，变成以下这样看看。。</p>

<pre><code class="cpp">#if PLATFORM_MAC &amp;&amp; IS_PROGRAM
static bool GAllowApplePlatformSymbolication = true;
#else
static bool GAllowApplePlatformSymbolication = false;
#endif

</code></pre>

<p>编译过了，但是一样还是没办法运行。</p>

<p>没办法了，试试4.5.1版本看看。<br>
下载后编译（方法跟4.6.1不大一样）。这次可以成功编译了。然后运行也没问题，但是好慢好慢好慢，好像我的rmbp15寸高配根本不大合适做这样的任务似的。新建项目xcode提示又出bug，我懒得管了，直接生成release版本的UE4Editor。应该会比debug版本的UE4Editor快很多吧。<del>先熟悉UE4Editor和学学Blueprints先了。C++什么的先不管先，因为太麻烦了，按照我编译后运行一下得要好久好久，估计10来分钟，如果全部编译，要大半个钟吧。。 如果改一下C++代码，还要编译后才能看到结果，那还得了。。 我直接不用学得了。（虽然可能不是这样，虽然Win下可能会快很多很多）</del> <strong>后来证明不是这样，然后如果用不到C++，UE4比想像中方便</strong></p>

<p>话说我都编译好Release版后，然后去看 Getting Started，看到这页：<a href="https://docs.unrealengine.com/latest/INT/Engine/QuickStart/4/index.html">https://docs.unrealengine.com/latest/INT/Engine/QuickStart/4/index.html</a>，发现我编译这版没有Geometry！不得已我又下载了4.1版，又编译了，然后终于可以学习了。有图有真相！左边是4.1版！<br>
<img src="media/14213891828854/14214041748379.jpg" alt="">￼￼￼￼￼￼￼￼</p>

<p>不得不说我耐心真好，编译好花时间 ╮(╯▽╰)╭  </p>

<p><strong>注</strong> 后来发现4.5.1版只是换了名字，BSP 就是Geometry！╮(╯▽╰)╭  </p>

<h2 id="toc_2">Windows下编译UnrealEngine 4</h2>

<p>周未有点空，就开Windows挂着下载UE4，想试一下Window下的体验如何，因为UE4好像是Windows下优化极好的。</p>

<p>先说一下我的机器供参考：CPU:e3-1230v2  GPU:gtx660 内存:8G SSD:128G。</p>

<p>下载编译跟Mac差不多，时间上也差不多。Windows下编译4.6.1 完全没有任何出错。非常顺利！然后启动Debug版的Unreal Editor，比Mac下快很多，打开大场景也很快，很顺。试运行，很好，好得不能再好了！！但是好占空间，我随便试一下，下载三个Demo的游戏或场景，30多G空间就没了。 Mac下因为是512G所以没注意。</p>

<h2 id="toc_3">Windows、Mac下UnrealEngine 4使用C++项目对比</h2>

<p>再试了一下新建C++的项目看看。按 <a href="https://docs.unrealengine.com/latest/INT/Programming/QuickStart/index.html">https://docs.unrealengine.com/latest/INT/Programming/QuickStart/index.html</a> 这个文档加了几行C++代码，然后从开始编译到编译成功并打开Unreal Editor，大概1分钟左右。这并非不能接受。当然，这不能跟Unity3D用C#比，那才真正快。</p>

<p>然后好奇再在Mac上试了一下（版本是4.5.1，因为4.6.1我编译不成功），新建C++项目，然后也按 <a href="https://docs.unrealengine.com/latest/INT/Programming/QuickStart/index.html">https://docs.unrealengine.com/latest/INT/Programming/QuickStart/index.html</a> 这个文档加了几行C++代码，想不到却出错了！版本不一样的原因，修正了一下，让他结果一样，然后从开始编译到编译成功并打开Unreal Editor，也是大概1分钟左右！这个结果让我惊喜了，看来是如果做场景小些的游戏，Mac下用UE4完全没问题！而我大概也是也只能是做场景小些的游戏（场景小，但是画面质量可以超高，UE4的画面比Unity3d好太多了），因为目标是丢上iPad、iPhone上玩的。上一张Mac下的图吧：</p>

<p><img src="media/14213891828854/14215892261441.jpg" alt="">￼￼￼￼￼￼</p>

<h2 id="toc_4">如果用不到C++，只用Blueprints使用UnrealEngine 4的简单方法</h2>

<p>去 <a href="https://www.unrealengine.com/">https://www.unrealengine.com/</a> 登入后下载红线这个：<br>
<img src="media/14213891828854/14215898337076.jpg" alt="">￼￼￼￼￼</p>

<p>下载后运行并登入，会自动下载4.6.1版的Unreal Editor，如下图，点Launch就可以了，还可以下载旧版本的Unreal Editor，如右边我就下载了4.5.1版的。╮(╯▽╰)╭  ，如果我是用不到C++我花这些时间到底在折腾什么？！！！</p>

<p><img src="media/14213891828854/Snip20150118_4.png" alt="Snip20150118_4">￼￼￼￼￼</p>

<h2 id="toc_5">关于UnrealEngine 4的文档和其他</h2>

<p>之前说UE4文档不如Unity3d好，但是我仔细看了，也是相当全面的，学会大概不成问题，更何况youtube上还有大量的视频可以看。C++也不成问题，按《游戏引擎架构》中说的，游戏中用到的C++不会太复杂，太复杂大不了不做那种特性就好。所以引擎部分应该不会对我产生大的难度了。但是做游戏引擎只是一小部分，最最重要部分：内容和玩法！首先说内容，这部分要学画画和3D了，而学3D软件对我来说也不成问题，只是画画目前还没有任何比较靠普的路子能成，至于动画随便弄一下然后买本《动画师生存手册》看看到底要如何了，也没有太大把握。。玩法部分，随便弄弄应该可以。因为时间不多只有一年，所以几个东西要并行学习，边学边加上引擎综合考虑。大概是这样想法先。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb Screenshot and in Yosemite]]></title>
    <link href="http://coderforart.com/me-screenshot-and-in-yosemite.html"/>
    <updated>2015-01-07T13:46:07+08:00</updated>
    <id>http://coderforart.com/me-screenshot-and-in-yosemite.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">Yosemite</h2>

<p><img src="media/14206095675933/yosemite-01.jpg" alt="yosemite-01">￼</p>

<span id="more"></span><!-- more -->

<p><img src="media/14206095675933/yosemite-02.jpg" alt="yosemite-02">￼</p>

<h2 id="toc_1">All menus</h2>

<p><img src="media/14206095675933/menus.jpg" alt="menus">￼￼￼</p>

<h2 id="toc_2">Preferences</h2>

<p><img src="media/14206095675933/preferences.jpg" alt="preferences">￼￼￼</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Custom site theme or design you owner theme]]></title>
    <link href="http://coderforart.com/custom-site-theme-detail.html"/>
    <updated>2015-01-07T14:52:03+08:00</updated>
    <id>http://coderforart.com/custom-site-theme-detail.html</id>
    <content type="html"><![CDATA[
<p>MWeb themes now add to github: <a href="https://github.com/oulvhai/MWeb-Themes">https://github.com/oulvhai/MWeb-Themes</a>.</p>

<h2 id="toc_0">MWeb theme structure</h2>

<p>Click <img src="media/14206135238767/14227577752365.jpg" alt="">￼, you will found a floder name is SiteThemes. MWeb all themes in this flodler,and a floder is a theme,it contains some documents and floders.</p>

<ul>
<li>asset &ndash; floder, contains all theme&rsquo;s picture,CSS,JS etc..</li>
<li>archives.html &ndash; archives.html page template</li>
<li>atom.xml &ndash; RSS page template</li>
<li>category.html &ndash; all categiries pages template</li>
<li>footer.html &ndash; bottom of each page</li>
<li>header.html &ndash; top of each page</li>
<li>page-index.html &ndash; custom home page template</li>
<li>page.html &ndash; document when enable <code>Is page</code> use this template</li>
<li>post.html &ndash; document when disable <code>Is page</code> use this template</li>
<li>sidebar.html &ndash; sidebar template</li>
<li>sitemap.xml &ndash; google sitemap template</li>
</ul>

<h2 id="toc_1">Custom home page</h2>

<p>Set a document&rsquo;s HTML file name value: <code>index</code> and enable <code>Is page</code>.<br>
<img src="media/14189904700669/14210659918568.jpg" alt="">￼￼￼￼￼￼￼￼￼</p>

<span id="more"></span><!-- more -->

<h2 id="toc_2">Custom <code>Is page</code> enable document&rsquo;s template</h2>

<p>Use <q>header.html+post.html+sidebar.html+footer.html</q> templates when the document <code>Is page</code> is disable; use <q>header.html+page.html+footer.html</q> templates when the document <code>Is page</code> is enable. You can add a page-{HTML file name}.html template for custom <code>Is page</code> enable document&rsquo;s template. MWeb will use <q>header.html+page-{HTML file name}.html+footer.html</q> when you add page-{HTML file name}.html template. For example:  <a href="http://coderforart.com">http://coderforart.com</a>&rsquo;s theme have page-index.html template for home page <a href="https://github.com/oulvhai/MWeb-Themes/blob/master/mweb-greyshade/page-index.html">https://github.com/oulvhai/MWeb-Themes/blob/master/mweb-greyshade/page-index.html</a> . </p>

<h2 id="toc_3">Custom category page template</h2>

<p>Use <q>header.html+category.html+sidebar.html+footer.html</q> by default. Use <q>header.html+category-{HTML file name}.html+sidebar.html+footer.html</q> when you add category-{HTML file name}.html template. For example: a category&rsquo;s HTML file name is <code>Cocoa</code> and the theme have category-Cocoa.html template, MWeb will use <q>header.html+category-Cocoa.html+sidebar.html</q>.</p>

<h2 id="toc_4">Common variables define</h2>

<h3 id="toc_5">the category object</h3>

<table><thead>
<tr>
<th>variable name</th>
<th>description</th>
</tr>
</thead><tbody>
<tr>
<td>name</td>
<td>category&rsquo;s name</td>
</tr>
<tr>
<td>url</td>
<td>category&rsquo;s url</td>
</tr>
</tbody></table>

<h3 id="toc_6">the document object</h3>

<table><thead>
<tr>
<th>variable name</th>
<th>description</th>
</tr>
</thead><tbody>
<tr>
<td>title</td>
<td>document&rsquo;s title</td>
</tr>
<tr>
<td>desContent</td>
<td>document&rsquo;s description for HTML format. Same with <code>content</code> when the document do not add <code>&lt;!-- more --&gt;</code>.</td>
</tr>
<tr>
<td>desContentTextOnly</td>
<td>document&rsquo;s description without HTML</td>
</tr>
<tr>
<td>content</td>
<td>document content</td>
</tr>
<tr>
<td>date</td>
<td>document&rsquo;s date,defalut format is:2014/10/24</td>
</tr>
<tr>
<td>dateGTM</td>
<td>document&rsquo;s date,format is: 2014-10-24T13:54:03GMT+08:00</td>
</tr>
<tr>
<td>artDate</td>
<td>document&rsquo;s create date,default format is: 2014/10/24</td>
</tr>
<tr>
<td>cats</td>
<td>document&rsquo;s categories,array &ndash;&gt; <code>the category object</code></td>
</tr>
<tr>
<td>readMore</td>
<td>document have <code>&lt;!-- more --&gt;</code> or not</td>
</tr>
<tr>
<td>url</td>
<td>document&rsquo;s url</td>
</tr>
</tbody></table>

<h3 id="toc_7">recent document object</h3>

<table><thead>
<tr>
<th>variable name</th>
<th>description</th>
</tr>
</thead><tbody>
<tr>
<td>title</td>
<td>document&rsquo;s title</td>
</tr>
<tr>
<td>url</td>
<td>document&rsquo;s url</td>
</tr>
</tbody></table>

<h3 id="toc_8">top category object</h3>

<table><thead>
<tr>
<th>variable name</th>
<th>description</th>
</tr>
</thead><tbody>
<tr>
<td>name</td>
<td>category&rsquo;s name</td>
</tr>
<tr>
<td>url</td>
<td>category&rsquo;s url</td>
</tr>
<tr>
<td>count</td>
<td>category documents count</td>
</tr>
</tbody></table>

<h2 id="toc_9">Build site</h2>

<h3 id="toc_10">All HTML page variables</h3>

<table><thead>
<tr>
<th>variable name</th>
<th>description</th>
</tr>
</thead><tbody>
<tr>
<td>siteURL</td>
<td>site URL</td>
</tr>
<tr>
<td>siteDomain</td>
<td>site domain</td>
</tr>
<tr>
<td>siteName</td>
<td>site name</td>
</tr>
<tr>
<td>pageTitle</td>
<td>site title</td>
</tr>
<tr>
<td>siteDes</td>
<td>site description</td>
</tr>
<tr>
<td>lastBuildDate</td>
<td>site last build date</td>
</tr>
<tr>
<td>siteOther</td>
<td>site other</td>
</tr>
<tr>
<td>recentPosts</td>
<td>array,the item is <code>recent document object</code></td>
</tr>
<tr>
<td>allCategories</td>
<td>array,the item is <code>top category object</code></td>
</tr>
<tr>
<td>categoriesTree</td>
<td>categories tree,array,the item is <code>top category object</code>, and children. reference: <a href="https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/sidebar.html">https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/sidebar.html</a></td>
</tr>
</tbody></table>

<h3 id="toc_11">build RSS: atom.xml</h3>

<p>template: atom.xml<br>
addition variables:</p>

<table><thead>
<tr>
<th>variable name</th>
<th>description</th>
</tr>
</thead><tbody>
<tr>
<td>posts</td>
<td>array,the item is <code>the document object</code></td>
</tr>
</tbody></table>

<p>Reference: <a href="https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/atom.xml">https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/atom.xml</a></p>

<h3 id="toc_12">build all posts template</h3>

<p>template: header.html + post.html + sidebar.html + footer.html<br>
addition variables:</p>

<table><thead>
<tr>
<th>variable name</th>
<th>description</th>
</tr>
</thead><tbody>
<tr>
<td>post</td>
<td><code>the document object</code></td>
</tr>
<tr>
<td>postNav</td>
<td>dictionary，has <code>next</code>,<code>prev</code> to item,item is  <code>recent document object</code></td>
</tr>
</tbody></table>

<p>Reference: <a href="https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/post.html">https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/post.html</a></p>

<h3 id="toc_13">build all cateogries template</h3>

<p>template:header.html + category.html + sidebar.html + footer.html<br>
addition variables:</p>

<table><thead>
<tr>
<th>variable name</th>
<th>description</th>
</tr>
</thead><tbody>
<tr>
<td>posts</td>
<td>array,the item is <code>the document object</code></td>
</tr>
<tr>
<td>prevPageUrl</td>
<td>prev page Url</td>
</tr>
<tr>
<td>nextPageUrl</td>
<td>next page Url</td>
</tr>
</tbody></table>

<p>Reference:<a href="https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/category.html">https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/category.html</a></p>

<h3 id="toc_14">build all pages template (<code>Is page</code> enable)</h3>

<p>template: header.html + page.html +  footer.html<br>
addition variables:</p>

<table><thead>
<tr>
<th>variable name</th>
<th>description</th>
</tr>
</thead><tbody>
<tr>
<td>posts</td>
<td>recent documents, array,the item is <code>the document object</code></td>
</tr>
<tr>
<td>post</td>
<td><code>the document object</code></td>
</tr>
</tbody></table>

<p>Reference: <a href="https://github.com/oulvhai/MWeb-Themes/blob/master/mweb-greyshade/page-index.html">https://github.com/oulvhai/MWeb-Themes/blob/master/mweb-greyshade/page-index.html</a></p>

<h3 id="toc_15">build archives.html</h3>

<p>template: header.html + archives.html + footer.html<br>
addition variables:</p>

<table><thead>
<tr>
<th>variable name</th>
<th>description</th>
</tr>
</thead><tbody>
<tr>
<td>posts</td>
<td>array, please reference below table for item detail</td>
</tr>
</tbody></table>

<table><thead>
<tr>
<th>variable name</th>
<th>description</th>
</tr>
</thead><tbody>
<tr>
<td>year</td>
<td>document&rsquo;s year</td>
</tr>
<tr>
<td>title</td>
<td>document&rsquo;s title</td>
</tr>
<tr>
<td>url</td>
<td>document&rsquo;s url</td>
</tr>
<tr>
<td>cats</td>
<td>document&rsquo;s categries, array, the item is <code>the category object</code></td>
</tr>
<tr>
<td>date</td>
<td>document&rsquo;s date,defalut format is:2014/10/24</td>
</tr>
<tr>
<td>dateMonth</td>
<td>document&rsquo;s month</td>
</tr>
<tr>
<td>dateDay</td>
<td>document&rsquo;s day</td>
</tr>
<tr>
<td>dateYear</td>
<td>document&rsquo;s year</td>
</tr>
<tr>
<td>dateGTM</td>
<td>document&rsquo;s date,format is:  2014-10-24T13:54:03GMT+08:00</td>
</tr>
<tr>
<td>artDate</td>
<td>document&rsquo;s create date,default format is:2014/10/24</td>
</tr>
</tbody></table>

<p>Reference: <a href="https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/archives.html">https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/archives.html</a></p>

<h3 id="toc_16">build sitemap.xml</h3>

<p>template: sitemap.xml<br>
addition variables:</p>

<table><thead>
<tr>
<th>variable name</th>
<th>description</th>
</tr>
</thead><tbody>
<tr>
<td>archives</td>
<td>array, please reference below table for item detail</td>
</tr>
<tr>
<td>pages</td>
<td>array, please reference below table for item detail</td>
</tr>
<tr>
<td>nowDateGTM</td>
<td>current date, format is:  2014-10-24T13:54:03GMT+08:00</td>
</tr>
</tbody></table>

<table><thead>
<tr>
<th>variable name</th>
<th>description</th>
</tr>
</thead><tbody>
<tr>
<td>title</td>
<td>document&rsquo;s title</td>
</tr>
<tr>
<td>url</td>
<td>document&rsquo;s url</td>
</tr>
<tr>
<td>date</td>
<td>document&rsquo;s date,defalut format is:2014/10/24</td>
</tr>
<tr>
<td>dateGTM</td>
<td>document&rsquo;s date,format is:2014-10-24T13:54:03GMT+08:00</td>
</tr>
<tr>
<td>artDate</td>
<td>document&rsquo;s create date,default format is:2014/10/24</td>
</tr>
</tbody></table>

<p>Reference: <a href="https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/sitemap.xml">https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/sitemap.xml</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[自定网站或博客主题简单说明]]></title>
    <link href="http://coderforart.com/custom-site-theme-detail-zh.html"/>
    <updated>2014-12-19T20:48:59+08:00</updated>
    <id>http://coderforart.com/custom-site-theme-detail-zh.html</id>
    <content type="html"><![CDATA[
<p>MWeb全部主题已上传到Github: <a href="https://github.com/oulvhai/MWeb-Themes">https://github.com/oulvhai/MWeb-Themes</a>.</p>

<h2 id="toc_0">MWeb主题模板结构</h2>

<p>MWeb所有网站主题模板都放在SiteThemes这个文件夹里，点击 <img src="media/14206135238767/14227577752365.jpg" alt="">￼￼￼ 这里可以直接显示SiteThemes文件夹，一个文件夹就表示一个主题。每个主题里包含的文档和文件夹的作用如下：</p>

<ul>
<li>asset &ndash; 主题所有要用到的东西，图片、CSS、JS等等都放这里</li>
<li>archives.html &ndash; archives.html页所使用的模板</li>
<li>atom.xml &ndash; RSS所使用的模板</li>
<li>category.html &ndash; 分类所使用的模板</li>
<li>footer.html &ndash; 页面的底部</li>
<li>header.html &ndash; 页面的顶部</li>
<li>page-index.html &ndash; 自定首页模板</li>
<li>page.html &ndash; 文档选中<code>Is page</code>时所使用的模板</li>
<li>post.html &ndash; 文档不选中<code>Is page</code>所使用的模板</li>
<li>sidebar.html &ndash; 侧边栏的模板</li>
<li>sitemap.xml &ndash; 网站sitemap所使用的模板</li>
</ul>

<h2 id="toc_1">自定首页</h2>

<p>如图，设定想要设置为首页的文档的 HTML file name 为 <code>index</code>, 选中 <code>Is page</code> 选项。<br>
<img src="media/14189904700669/14210659918568.jpg" alt="">￼￼￼￼￼￼￼￼￼￼￼￼</p>

<span id="more"></span><!-- more -->

<h2 id="toc_2">自定文档页的HTML模板</h2>

<p>不选<code>Is page</code>选项时，生成HTML时读取的模板为：header.html+post.html+sidebar.html+footer.html。选中了<code>Is page</code>选项后，生成HTML时会读取的模板为：header.html+page.html+footer.html，如果要自定文档的模板，可以在主题文件夹里新增一个名称为：page-{HTML file name}.html 的页面，这样生成HTML时的读取的模板就会变成：header.html+page-{HTML file name}.html+footer.html。比如说要自定首页的模板，则在主题文件夹里新增一个名为：page-index.html 的页面即可。如 <a href="http://coderforart.com">http://coderforart.com</a> 就自定了首页，内容为：<a href="https://github.com/oulvhai/MWeb-Themes/blob/master/mweb-greyshade/page-index.html">https://github.com/oulvhai/MWeb-Themes/blob/master/mweb-greyshade/page-index.html</a> </p>

<h2 id="toc_3">自定分类页的HTML模板</h2>

<p>分类页生成HTML时读取的模板为：header.html+category.html+sidebar.html+footer.html。 其中category.html可以自定，MWeb生成分类页的HTML时，会判定是否存在：category-{HTML file name}.html的模板，如果存在，则会优先使用category-{HTML file name}.html模板。比如说有一个分类的 HTML file name 为 Cocoa，如果要自定这个分类的分类页的模板，则只要在主题文件夹里新增一个名为：category-Cocoa.html的页面即可，MWeb生成HTML时读取模板就会变为：header.html+category-Cocoa.html+sidebar.html+footer.html。</p>

<h2 id="toc_4">生成HTML时传入模板页的变量说明</h2>

<h3 id="toc_5">文档分类对象变量</h3>

<table><thead>
<tr>
<th>变量名称</th>
<th>说明</th>
</tr>
</thead><tbody>
<tr>
<td>name</td>
<td>分类的名称</td>
</tr>
<tr>
<td>url</td>
<td>分类的网址</td>
</tr>
</tbody></table>

<h3 id="toc_6">文档对象变量</h3>

<table><thead>
<tr>
<th>变量名称</th>
<th>说明</th>
</tr>
</thead><tbody>
<tr>
<td>title</td>
<td>文章的标题，通常为第一行</td>
</tr>
<tr>
<td>desContent</td>
<td>文章的HTML格式的描述，如果文档中没有<code>&lt;!-- more --&gt;</code>则跟content一样</td>
</tr>
<tr>
<td>desContentTextOnly</td>
<td>文章的纯文字描述，不带HTML</td>
</tr>
<tr>
<td>content</td>
<td>文章的内容</td>
</tr>
<tr>
<td>date</td>
<td>文章的时间，格式按网站设定，默认为：2014/10/24</td>
</tr>
<tr>
<td>dateGTM</td>
<td>文章的时间，格式为 2014-10-24T13:54:03GMT+08:00</td>
</tr>
<tr>
<td>artDate</td>
<td>文章新增的时间，格式按网站设定，默认为：2014/10/24</td>
</tr>
<tr>
<td>cats</td>
<td>文章分类的数组，数组的对象为<code>文档分类对象变量</code></td>
</tr>
<tr>
<td>readMore</td>
<td>文章中是否有<code>&lt;!-- more --&gt;</code></td>
</tr>
<tr>
<td>url</td>
<td>文章的网址</td>
</tr>
</tbody></table>

<h3 id="toc_7">最近文章变量</h3>

<table><thead>
<tr>
<th>变量名称</th>
<th>说明</th>
</tr>
</thead><tbody>
<tr>
<td>title</td>
<td>文章的名称</td>
</tr>
<tr>
<td>url</td>
<td>文章的网址</td>
</tr>
</tbody></table>

<h3 id="toc_8">分类对象变量</h3>

<table><thead>
<tr>
<th>变量名称</th>
<th>说明</th>
</tr>
</thead><tbody>
<tr>
<td>name</td>
<td>分类的名称</td>
</tr>
<tr>
<td>url</td>
<td>分类的网址</td>
</tr>
<tr>
<td>count</td>
<td>分类的文章数量</td>
</tr>
</tbody></table>

<h2 id="toc_9">生成网站</h2>

<h3 id="toc_10">所有页面都会传入的变量</h3>

<table><thead>
<tr>
<th>变量名称</th>
<th>说明</th>
</tr>
</thead><tbody>
<tr>
<td>siteURL</td>
<td>网站设置中的网站网址</td>
</tr>
<tr>
<td>siteDomain</td>
<td>网站的域名</td>
</tr>
<tr>
<td>siteName</td>
<td>网站的名称</td>
</tr>
<tr>
<td>pageTitle</td>
<td>网站的标题</td>
</tr>
<tr>
<td>siteDes</td>
<td>网站的描述</td>
</tr>
<tr>
<td>lastBuildDate</td>
<td>网站最后生成时间</td>
</tr>
<tr>
<td>siteOther</td>
<td>网站设置中的<code>other</code></td>
</tr>
<tr>
<td>recentPosts</td>
<td>数组，数组的对象为<code>最近文章变量</code></td>
</tr>
<tr>
<td>allCategories</td>
<td>数组，数组的对象为<code>分类对象变量</code></td>
</tr>
<tr>
<td>categoriesTree</td>
<td>二层分类树，数组，数组的对象为<code>分类对象变量</code>，外加children。请参考 <a href="https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/sidebar.html">https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/sidebar.html</a></td>
</tr>
</tbody></table>

<h3 id="toc_11">生成RSS: atom.xml</h3>

<p>读取的模板：atom.xml<br>
传入的变量：</p>

<table><thead>
<tr>
<th>变量名称</th>
<th>说明</th>
</tr>
</thead><tbody>
<tr>
<td>posts</td>
<td>数组，数组对象为<code>文档对象变量</code></td>
</tr>
</tbody></table>

<p>参考模板：<a href="https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/atom.xml">https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/atom.xml</a></p>

<h3 id="toc_12">生成所有文章的页面</h3>

<p>读取的模板：header.html + post.html + sidebar.html + footer.html<br>
传入的变量：</p>

<table><thead>
<tr>
<th>变量名称</th>
<th>说明</th>
</tr>
</thead><tbody>
<tr>
<td>post</td>
<td>对象为<code>文档对象变量</code></td>
</tr>
<tr>
<td>postNav</td>
<td>字典，带有<code>next</code>，<code>prev</code>两个对象，对象为 <code>最近文章变量</code></td>
</tr>
</tbody></table>

<p>参考模板：<a href="https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/post.html">https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/post.html</a></p>

<h3 id="toc_13">生成所有分类的页面</h3>

<p>读取的模板：header.html + category.html + sidebar.html + footer.html<br>
传入的变量：</p>

<table><thead>
<tr>
<th>变量名称</th>
<th>说明</th>
</tr>
</thead><tbody>
<tr>
<td>posts</td>
<td>数组，数组的对象为<code>文档对象变量</code></td>
</tr>
<tr>
<td>prevPageUrl</td>
<td>上一页的网址</td>
</tr>
<tr>
<td>nextPageUrl</td>
<td>下一页的网址</td>
</tr>
</tbody></table>

<p>参考模板：<a href="https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/category.html">https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/category.html</a></p>

<h3 id="toc_14">生成所有文章选中<code>Is page</code>的页面</h3>

<p>读取的模板：header.html + page.html +  footer.html<br>
传入的变量：</p>

<table><thead>
<tr>
<th>变量名称</th>
<th>说明</th>
</tr>
</thead><tbody>
<tr>
<td>posts</td>
<td>数组，数组的对象为<code>文档对象变量</code></td>
</tr>
<tr>
<td>post</td>
<td>对象为<code>文档对象变量</code></td>
</tr>
</tbody></table>

<p>参考模板：<a href="https://github.com/oulvhai/MWeb-Themes/blob/master/mweb-greyshade/page-index.html">https://github.com/oulvhai/MWeb-Themes/blob/master/mweb-greyshade/page-index.html</a></p>

<h3 id="toc_15">生成archives.html</h3>

<p>读取的模板：header.html + archives.html + footer.html<br>
传入的变量：</p>

<table><thead>
<tr>
<th>变量名称</th>
<th>说明</th>
</tr>
</thead><tbody>
<tr>
<td>posts</td>
<td>数组，数组对象请参考下表</td>
</tr>
</tbody></table>

<table><thead>
<tr>
<th>变量名称</th>
<th>说明</th>
</tr>
</thead><tbody>
<tr>
<td>year</td>
<td>文章年份</td>
</tr>
<tr>
<td>title</td>
<td>文章标题</td>
</tr>
<tr>
<td>url</td>
<td>文章网址</td>
</tr>
<tr>
<td>cats</td>
<td>文章分类的数组，数组的对象为<code>文档分类对象变量</code></td>
</tr>
<tr>
<td>date</td>
<td>文章的时间，格式按网站设定，默认为：2014/10/24</td>
</tr>
<tr>
<td>dateMonth</td>
<td>文章月份</td>
</tr>
<tr>
<td>dateDay</td>
<td>文章日期</td>
</tr>
<tr>
<td>dateYear</td>
<td>文章年份</td>
</tr>
<tr>
<td>dateGTM</td>
<td>文章的时间，格式为 2014-10-24T13:54:03GMT+08:00</td>
</tr>
<tr>
<td>artDate</td>
<td>文章新增的时间，格式按网站设定，默认为：2014/10/24</td>
</tr>
</tbody></table>

<p>参考模板：<a href="https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/archives.html">https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/archives.html</a></p>

<h3 id="toc_16">生成sitemap.xml</h3>

<p>读取的模板：sitemap.xml<br>
传入的变量：</p>

<table><thead>
<tr>
<th>变量名称</th>
<th>说明</th>
</tr>
</thead><tbody>
<tr>
<td>archives</td>
<td>数组，数组对象请参考下表</td>
</tr>
<tr>
<td>pages</td>
<td>数组，数组对象请参考下表</td>
</tr>
<tr>
<td>nowDateGTM</td>
<td>当前时间</td>
</tr>
</tbody></table>

<table><thead>
<tr>
<th>变量名称</th>
<th>说明</th>
</tr>
</thead><tbody>
<tr>
<td>title</td>
<td>文章标题</td>
</tr>
<tr>
<td>url</td>
<td>文章网址</td>
</tr>
<tr>
<td>date</td>
<td>文章的时间，格式按网站设定，默认为：2014/10/24</td>
</tr>
<tr>
<td>dateGTM</td>
<td>文章的时间，格式为 2014-10-24T13:54:03GMT+08:00</td>
</tr>
<tr>
<td>artDate</td>
<td>文章新增的时间，格式按网站设定，默认为：2014/10/24</td>
</tr>
</tbody></table>

<p>参考模板：<a href="https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/sitemap.xml">https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/sitemap.xml</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb - Markdown editor for static websites and blogs on OS X]]></title>
    <link href="http://coderforart.com/mweb.html"/>
    <updated>2014-12-19T13:08:02+08:00</updated>
    <id>http://coderforart.com/mweb.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">MWeb Help</h2>

<h3 id="toc_1">Markdown syntax guide</h3>

<p><a href="markdown-syntax-guide-suggest-version.html">Markdown syntax guide suggest version</a><br>
<a href="markdown-syntax-guide-full-version.html">Markdown syntax guide full version</a></p>

<h3 id="toc_2">MWeb Q &amp; A</h3>

<p><a href="mweb-qa.html">MWeb Q &amp; A</a><br>
If you can&rsquo;t find the answer, please send feedback to me: Help &ndash;&gt; Send Feedback</p>

<h3 id="toc_3">Some may useful articles</h3>

<p><a href="custom-site-theme-detail.html">Custom site theme or design you owner theme&hellip;</a><br>
<a href="me-screenshot-and-in-yosemite.html">MWeb Screenshot and in Yosemite</a><br>
<a href="mweb-v1.1-release.html">MWeb 1.1 release</a><br>
<a href="mweb-v1.2-release.html">MWeb 1.2 release</a></p>

<h2 id="toc_4">Introduction MWeb</h2>

<p>MWeb is a markdown editor for static websites and blogs on OS X, like <a href="http://octopress.org/">Octopress</a> or <a href="http://jekyllrb.com/">Jekyll</a> but easy to use. You can write document with markdown,drag &amp; drop or paste photos to the editor, MWeb will automatically add markdown code and display photos in editor. You can choose some categories to organize the document, and build static websites and blogs <strong>One Click</strong>.</p>

<p><img src="media/14189656825627/MWeb.jpg" alt="MWeb">￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼</p>

<span id="more"></span><!-- more -->

<p style="text-align:center">
<a target="_blank" onclick="ga('send','event','buy-mweb');" href="http://itunes.apple.com/app/mweb-markdown-editor-for-static/id954188948?ls=1&mt=12" target="_blank"><img src="media/14195170907881/icon_apple_store-download-small.png" width="180" /></a><br />OR &nbsp;<a target="_blank" onclick="ga('send','event','download-mweb');" href="media/14195170907881/MWeb-Lite.zip">Free Download MWeb Lite</a>

</p>

<h2 id="toc_5">A markdown editor</h2>

<p>MWeb is a markdown editor support markdown syntax highlight, preview,syntax highlighting in fenced code blocks,Math ML,export to HTML/PDF, a custom editor theme, words counter, outline, autosave, full document versions and more.. It has two patterns:</p>

<ol>
<li>Library pattern, you can organize documents with categories,drag &amp; drop or paste photos to the editor and display. You can build static websites and blogs. <code>CMD + L</code> to display the Library pattern. </li>
<li>No library pattern, it just like <code>TextEdit</code> but has full markdown support like syntax highlight, preview, outline etc..</li>
</ol>

<p>￼￼￼￼￼￼￼￼￼￼￼￼<img src="media/14189656825627/MWeb-markdown-editor.jpg" alt="MWeb-markdown-editor">￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼</p>

<h2 id="toc_6">Drag &amp; drop or paste photos to the editor and display</h2>

<p>Drag &amp; drop or paste photo to the editor, the markdown code will automatically add and the photo will display in editor.</p>

<p>￼￼￼￼￼￼￼￼￼<img src="media/14189656825627/MWeb-inset-photo.jpg" alt="MWeb-inset-photo">￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼<br>
￼￼￼￼￼￼￼￼￼￼￼￼</p>

<h2 id="toc_7">Easy to build static websites and blogs</h2>

<p>Selected a category &ndash;&gt; Set to site, setting site name and description and just click <code>Build site</code>. click <code>Clear and rebuild site</code> button when the Theme is change. click <code>Preview site</code> button to preview. Just double click <code>Coder For Art</code> category and try.</p>

<p>￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼<img src="media/14187874991645/MWeb-build-static-websites-and-blogs-1-1-2.jpg" alt="MWeb-build-static-websites-and-blogs-1-1-2">￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼</p>

<p>More info, please read this post: <a href="custom-site-theme-detail.html">Custom site theme or design you owner theme&hellip;</a></p>

<h2 id="toc_8">Three view pattern</h2>

<p>Editor Only:<code>CMD + 1</code>, Two Panes:<code>CMD + 2</code>, Three Panes:<code>CMD + 3</code>. The editor area will not resize when the view pattern change.</p>

<p>￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼<img src="media/14189656825627/MWeb-view-pattern.jpg" alt="MWeb-view-pattern">￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼</p>

<h2 id="toc_9">Preview, Share,Save as PDF, More Screenshot</h2>

<p>Preview：<code>CMD + R</code>，Close Preview：<code>CMD + W</code> </p>

<p><img src="media/14187874991645/MWeb-preview-share-1-1.jpg" alt="MWeb-preview-share-1-1">￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼</p>

<p>Save as PDF: Difference between in editor share button and Preview share button.</p>

<p>More Screenshot: <a href="me-screenshot-and-in-yosemite.html">MWeb Screenshot and in Yosemite</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb - OS X上的Markdown编辑器和全静态网站、博客生成工具]]></title>
    <link href="http://coderforart.com/mweb-zh.html"/>
    <updated>2014-12-17T11:38:19+08:00</updated>
    <id>http://coderforart.com/mweb-zh.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">MWeb帮助</h2>

<h3 id="toc_1">如果您不知道什么是Markdown，请阅读以下两篇文章</h3>

<p><a href="markdown-syntax-guide-suggest-version-zh.html">Markdown 语法简单说明</a><br>
<a href="markdown-syntax-guide-full-version-zh.html">Markdown 语法官方说明繁体中文版</a></p>

<h3 id="toc_2">MWeb所有问题和回答收集（会不断更新）</h3>

<p><a href="mweb-qa-zh.html">MWeb问题和回答</a><br>
如果您在上面的连接中找不到答案，请在MWeb中点：Help &ndash;&gt; Send Feedback 写信给我！</p>

<h3 id="toc_3">MWeb其他可能有用的文章</h3>

<p><a href="custom-site-theme-detail-zh.html">自定网站主题、增加评论和分享和设计新主题&hellip;</a><br>
<a href="me-screenshot-and-in-yosemite.html">MWeb更多截图和在Yosemite下的效果</a><br>
<a href="mweb-v1.1-release-zh.html">MWeb 1.1 版更新说明</a><br>
<a href="mweb-v1.2-release-zh.html">MWeb 1.2 版更新说明</a><br>
<a href="sync-webistes-to-github-or-ftp-zh.html">把生成的静态网站发布到github或FTP</a><br>
 <a href="aliyun-net-cn-free-web-host-express.html">万网（阿里云）免费虚拟主机体验</a></p>

<h2 id="toc_4">MWeb简介</h2>

<p>MWeb是一个Markdown编辑器和全静态网站、博客生成工具，像<a href="http://octopress.org/">Octopress</a>和 <a href="http://jekyllrb.com/">Jekyll</a>，但是更简单易用。MWeb很合适经常用Markdown写文档、日记和经常要插入图片和大段代码的朋友。</p>

<p><img src="media/14189656825627/MWeb.jpg" alt="MWeb">￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼</p>

<span id="more"></span><!-- more -->

<p style="text-align:center">
<a target="_blank" onclick="ga('send','event','buy-mweb-zh');" href="http://itunes.apple.com/cn/app/mweb-markdown-editor-for-static/id954188948?ls=1&mt=12" target="_blank"><img src="media/14195170907881/icon_apple_store-download-small.png" width="180" /></a><br />或者&nbsp;<a target="_blank" onclick="ga('send','event','download-mweb-zh');" href="media/14195170907881/MWeb-Lite.zip">免费下载 MWeb Lite</a>

</p>

<h2 id="toc_5">MWeb的Markdown编辑功能</h2>

<p>首先MWeb必须是一个好用的Markdown编辑器，语法高亮，预览，Fenced code blocks和代码高亮支持，Math ML支持，导出HTML/PDF，自定编辑器主题，字数统计，大纲视图，autosave,文档历史版本什么的等等都是要有的。另外MWeb分为两种模式：</p>

<ul>
<li>一种是由MWeb管理的库文档模式，这种模式下可以用分类管理文档，可以拖拽插入图片，可以生成全静态网站。</li>
<li>一种是外部文文件模式，文件夹的Markdown文檔直接用MWeb打开就是这种模式，区别是无拖拽插入图片功能，不能生成网站。</li>
</ul>

<p>￼￼￼￼￼￼￼￼￼￼￼￼<img src="media/14189656825627/MWeb-markdown-editor.jpg" alt="MWeb-markdown-editor">￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼</p>

<h2 id="toc_6">插入图片并显示在编辑器内</h2>

<p>MWeb的设计就是为了能方便地用Markdown记日记、简单的管理日记并生成博客。而写日记时插入图片的功能是经常用到的。一般的Markdown工具如果要插入图片，要先丢到网上。像Ulysses是可以方便插入图片，但是要双击或者预览时才能看到。MWeb设计成可拖拽或直接粘贴即可插入图片并显示出来，以方便查看。</p>

<p>￼￼￼￼￼￼￼￼￼<img src="media/14189656825627/MWeb-inset-photo.jpg" alt="MWeb-inset-photo">￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼<br>
￼￼￼￼￼￼￼￼￼￼￼</p>

<h2 id="toc_7">一键将分类生成全静态的网站和博客</h2>

<p>MWeb的分类管理的设计跟博客的结构差不多，一个文档可以选择多个分类。将分类变成博客的方法为：选择该分类 &ndash;&gt; Set to site。设定好博客的名称和描述等等，点：<code>Build site</code> 按钮即可。如果有改动到 <code>Theme</code> 或者有任何没有在预料之中的结果，试试点 <code>Clear and rebuild site</code> 按钮。 点 <code>Preview site</code> 按钮可以预览生成的博客。<a href="http://coderforart.com/">http://coderforart.com/</a> 网站就是用MWeb生成的。</p>

<p><img src="media/14187874991645/MWeb-build-static-websites-and-blogs-1-1-2.jpg" alt="MWeb-build-static-websites-and-blogs-1-1-2">￼￼￼￼￼￼￼￼￼￼<br>
￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼<br>
MWeb还可以自定网站和博客主题，增加评论和分享功能，请参考这个网址: <a href="custom-site-theme-detail-zh.html">自定网站主题、增加评论和分享和设计新主题&hellip;</a></p>

<h2 id="toc_8">三种视图模式、改变视图时编辑器大小会固定</h2>

<p>Editor Only:<code>CMD + 1</code>, Two Pane:<code>CMD + 2</code>, There Pane:<code>CMD + 3</code>。我觉得改变视图时，编辑器区域大小也同时改变不大爽，所以改变视图时就直接改变窗口大小，而编辑器区域大小会保持不变。</p>

<p>￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼<img src="media/14189656825627/MWeb-view-pattern.jpg" alt="MWeb-view-pattern">￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼</p>

<h2 id="toc_9">预览、分享功能，更多截图</h2>

<p>预览快捷键：<code>CMD + R</code>，关闭预览：<code>CMD + W</code> </p>

<p><img src="media/14187874991645/MWeb-preview-share-1-1.jpg" alt="MWeb-preview-share-1-1">￼￼￼￼￼￼￼￼￼￼<br>
￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼</p>

<p>更多截图: <a href="me-screenshot-and-in-yosemite.html">MWeb更多截图和在Yosemite下的效果</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Insert photos and display in editor]]></title>
    <link href="http://coderforart.com/insert-photos-and-display-in-editor.html"/>
    <updated>2014-12-22T15:45:39+08:00</updated>
    <id>http://coderforart.com/insert-photos-and-display-in-editor.html</id>
    <content type="html"><![CDATA[
<p>Drag &amp; drop photo or paste to the editor, the markdown code will add automatically and the photo will display in editor.</p>

<span id="more"></span><!-- more -->

<p><img src="media/14187874991645/716_max.jpg" alt="716_max">￼￼￼￼￼￼</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[插入图片并显示在编辑器内]]></title>
    <link href="http://coderforart.com/insert-photos-and-display-in-editor-zh.html"/>
    <updated>2014-12-17T11:59:52+08:00</updated>
    <id>http://coderforart.com/insert-photos-and-display-in-editor-zh.html</id>
    <content type="html"><![CDATA[
<p>拖拽图片（支持多张）到编辑器或者直接用粘贴即可插入图片，图片会直接显示在编辑器里（也可设定不显示），像这样：</p>

<span id="more"></span><!-- more -->

<p><img src="media/14187874991645/716_max.jpg" alt="716_max">￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Markdown syntax guide suggest version]]></title>
    <link href="http://coderforart.com/markdown-syntax-guide-suggest-version.html"/>
    <updated>2014-12-16T19:08:31+08:00</updated>
    <id>http://coderforart.com/markdown-syntax-guide-suggest-version.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">Headers</h2>

<pre><code># This is an `&lt;h1&gt;` tag
## This is an `&lt;h2&gt;` tag
###### This is an `&lt;h6&gt;` tag
</code></pre>

<span id="more"></span><!-- more -->

<h1 id="toc_1">This is an <code>&lt;h1&gt;</code> tag</h1>

<h2 id="toc_2">This is an <code>&lt;h2&gt;</code> tag</h2>

<h6 id="toc_3">This is an <code>&lt;h6&gt;</code> tag</h6>

<h2 id="toc_4">Emphasis</h2>

<pre><code>*This text will be italic*
_This will also be italic_

**This text will be bold**
__This will also be bold__

*You **can** combine them*
</code></pre>

<p><em>This text will be italic</em><br>
<u>This will also be italic</u></p>

<p><strong>This text will be bold</strong><br>
<strong>This will also be bold</strong></p>

<p><em>You *</em>can** combine them*</p>

<h2 id="toc_5">Newlines</h2>

<p>End a line with two or more spaces + enter.<br>
Just typing enter to newline,please set：MWeb &ndash;&gt; Preferences &ndash;&gt; Themes &ndash;&gt; Translate newlines to <code>&lt;br&gt;</code> tags is On(default is On)</p>

<h2 id="toc_6">Lists</h2>

<h3 id="toc_7">Unordered</h3>

<pre><code>* Item 1 unordered list `* + SPACE`
* Item 2
    * Item 2a unordered list `* + TAB + SPACE`
    * Item 2b
</code></pre>

<ul>
<li>Item 1 unordered list <code>* + SPACE</code></li>
<li>Item 2

<ul>
<li>Item 2a unordered list <code>* + TAB + SPACE</code></li>
<li>Item 2b</li>
</ul></li>
</ul>

<h3 id="toc_8">Ordered</h3>

<pre><code>1. Item 1 ordered list `Number + . + SPACE`
2. Item 2 
3. Item 3
    1. Item 3a ordered list `Number + . + TAB + SPACE`
    2. Item 3b
</code></pre>

<ol>
<li>Item 1 ordered list <code>Number + . + SPACE</code></li>
<li>Item 2 </li>
<li>Item 3

<ol>
<li>Item 3a ordered list <code>Number + . + TAB + SPACE</code></li>
<li>Item 3b</li>
</ol></li>
</ol>

<h2 id="toc_9">Images</h2>

<pre><code>![GitHub set up](https://help.github.com/assets/images/site/set-up-git.gif)
Format: ![Alt Text](url)
</code></pre>

<p><img src="https://help.github.com/assets/images/site/set-up-git.gif" alt="GitHub set up"><br>
Format: <img src="url" alt="Alt Text"></p>

<h2 id="toc_10">Links</h2>

<pre><code>email &lt;example@example.com&gt;
[GitHub](http://github.com)
autolink  &lt;http://www.github.com/&gt;
</code></pre>

<p>An email <a href="mailto:example@example.com">example@example.com</a> link.<br>
<a href="http://github.com">GitHub</a><br>
Automatic linking for URLs<br>
Any URL (like <a href="http://www.github.com/">http://www.github.com/</a>) will be automatically converted into a clickable link.</p>

<h2 id="toc_11">Blockquotes</h2>

<pre><code>As Kanye West said:
&gt; We&#39;re living the future so
&gt; the present is our past.
</code></pre>

<p>As Kanye West said:</p>

<blockquote>
<p>We&rsquo;re living the future so<br>
the present is our past.</p>
</blockquote>

<h2 id="toc_12">Inline code</h2>

<pre><code>I think you should use an
`&lt;addr&gt;` `code` element here instead.
</code></pre>

<p>I think you should use an<br>
<code>&lt;addr&gt;</code> <code>code</code> element here instead.</p>

<h2 id="toc_13">Multi-line code</h2>

<pre><code>```js
function fancyAlert(arg) {
  if(arg) {
    $.facebox({div:&#39;#foo&#39;})
  }

}
```
</code></pre>

<pre><code class="js">function fancyAlert(arg) {
  if(arg) {
    $.facebox({div:&#39;#foo&#39;})
  }

}
</code></pre>

<h2 id="toc_14">Tables</h2>

<pre><code>First Header | Second Header
------------ | -------------
Content from cell 1 | Content from cell 2
Content in the first column | Content in the second column
</code></pre>

<p>You can create tables by assembling a list of words and dividing them with hyphens - (for the first row), and then separating each column with a pipe |:</p>

<table><thead>
<tr>
<th>First Header</th>
<th>Second Header</th>
</tr>
</thead><tbody>
<tr>
<td>Content from cell 1</td>
<td>Content from cell 2</td>
</tr>
<tr>
<td>Content in the first column</td>
<td>Content in the second column</td>
</tr>
</tbody></table>

<h2 id="toc_15">Strikethrough</h2>

<pre><code> (like ~~this~~)
</code></pre>

<p>Any word wrapped with two tildes (like <del>this</del>) will appear crossed out.</p>

<h2 id="toc_16">Horizontal Rules</h2>

<p>Following lines will produce a horizontal rule:</p>

<pre><code>***

*****

- - -
</code></pre>

<hr>

<hr>

<hr>

<h2 id="toc_17">Comment And Read More..</h2>

<!-- comment -->

<!-- more -->

<p>Actions-&gt;Insert Read More Comment <em>OR</em> <code>CMD + .</code></p>

<h2 id="toc_18">Reference:</h2>

<p><a href="https://guides.github.com/features/mastering-markdown/">https://guides.github.com/features/mastering-markdown/</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Markdown 语法简单说明]]></title>
    <link href="http://coderforart.com/markdown-syntax-guide-suggest-version-zh.html"/>
    <updated>2014-12-16T21:57:10+08:00</updated>
    <id>http://coderforart.com/markdown-syntax-guide-suggest-version-zh.html</id>
    <content type="html"><![CDATA[
<h2 id="toc_0">标题</h2>

<pre><code># 第一级标题 `&lt;h1&gt;` 
## 第二级标题 `&lt;h2&gt;` 
###### 第六级标题 `&lt;h6&gt;` 
</code></pre>

<span id="more"></span><!-- more -->

<h1 id="toc_1">第一级标题 <code>&lt;h1&gt;</code></h1>

<h2 id="toc_2">第二级标题 <code>&lt;h2&gt;</code></h2>

<h6 id="toc_3">第六级标题 <code>&lt;h6&gt;</code></h6>

<!-- more -->

<h2 id="toc_4">强调</h2>

<pre><code>*这些文字会生成`&lt;em&gt;`*
_这些文字会生成`&lt;u&gt;`_

**这些文字会生成`&lt;strong&gt;`**
__这些文字会生成`&lt;strong&gt;`__
</code></pre>

<p><em>这些文字会生成<code>&lt;em&gt;</code></em><br>
<u>这些文字会生成<code>&lt;u&gt;</code></u></p>

<p><strong>这些文字会生成<code>&lt;strong&gt;</code></strong><br>
<strong>这些文字会生成<code>&lt;strong&gt;</code></strong></p>

<h2 id="toc_5">换行</h2>

<p>四个及以上空格加回车。<br>
如果不想打这么多空格，只要回车就为换行，请勾选：MWeb&ndash;&gt;Preferences&ndash;&gt;Themes&ndash;&gt;Translate newlines to <code>&lt;br&gt;</code> tags</p>

<h2 id="toc_6">列表</h2>

<h3 id="toc_7">无序列表</h3>

<pre><code>* 项目一 无序列表 `* + 空格键`
* 项目二
    * 项目二的子项目一 无序列表 `* + TAB + 空格键`
    * 项目二的子项目二
</code></pre>

<ul>
<li>项目一 无序列表 <code>* + 空格键</code></li>
<li>项目二

<ul>
<li>项目二的子项目一 无序列表 <code>* + TAB + 空格键</code></li>
<li>项目二的子项目二</li>
</ul></li>
</ul>

<h3 id="toc_8">有序列表</h3>

<pre><code>1. 项目一 有序列表 `数字 + . + 空格键`
2. 项目二 
3. 项目三
    1. 项目三的子项目一 有序列表 `数字 + . + TAB + 空格键`
    2. 项目三的子项目二
</code></pre>

<ol>
<li>项目一 有序列表 <code>数字 + . + 空格键</code></li>
<li>项目二 </li>
<li>项目三

<ol>
<li>项目三的子项目一 有序列表 <code>数字 + . + TAB + 空格键</code></li>
<li>项目三的子项目二</li>
</ol></li>
</ol>

<h2 id="toc_9">图片</h2>

<pre><code>![GitHub set up](https://help.github.com/assets/images/site/set-up-git.gif)
格式: ![Alt Text](url)
</code></pre>

<p><img src="https://help.github.com/assets/images/site/set-up-git.gif" alt="GitHub set up"><br>
格式: <img src="url" alt="Alt Text"></p>

<h2 id="toc_10">链接</h2>

<pre><code>email &lt;example@example.com&gt;
[GitHub](http://github.com)
自动生成连接  &lt;http://www.github.com/&gt;
</code></pre>

<p>Email 连接： <a href="mailto:example@example.com">example@example.com</a><br>
<a href="http://github.com">连接标题Github网站</a><br>
自动生成连接像： <a href="http://www.github.com/">http://www.github.com/</a> 这样</p>

<h2 id="toc_11">区块引用</h2>

<pre><code>某某说:
&gt; 第一行引用
&gt; 第二行费用文字
</code></pre>

<p>某某说:</p>

<blockquote>
<p>第一行引用<br>
第二行费用文字</p>
</blockquote>

<h2 id="toc_12">行内代码</h2>

<pre><code>像这样即可：`&lt;addr&gt;` `code`
</code></pre>

<p>像这样即可：<code>&lt;addr&gt;</code> <code>code</code></p>

<h2 id="toc_13">多行或者一段代码</h2>

<pre><code>```js
function fancyAlert(arg) {
  if(arg) {
    $.facebox({div:&#39;#foo&#39;})
  }

}
```
</code></pre>

<pre><code class="js">function fancyAlert(arg) {
    if(arg) {
        $.facebox({div:&#39;#foo&#39;})
    }

}
</code></pre>

<h2 id="toc_14">表格</h2>

<pre><code>第一格表头 | 第二格表头
--------- | -------------
内容单元格 第一列第一格 | 内容单元格第二列第一格
内容单元格 第一列第二格 多加文字 | 内容单元格第二列第二格
</code></pre>

<p>以下即会生成一个表格：</p>

<table><thead>
<tr>
<th>第一格表头</th>
<th>第二格表头</th>
</tr>
</thead><tbody>
<tr>
<td>内容单元格 第一列第一格</td>
<td>内容单元格第二列第一格</td>
</tr>
<tr>
<td>内容单元格 第一列第二格 多加文字</td>
<td>内容单元格第二列第二格</td>
</tr>
</tbody></table>

<h2 id="toc_15">删除线</h2>

<pre><code>加删除线像这样用： ~~删除这些~~
</code></pre>

<p>加删除线像这样用： <del>删除这些</del></p>

<h2 id="toc_16">分隔线</h2>

<p>以下三种方式都可以生成分隔线：</p>

<pre><code>***

*****

- - -
</code></pre>

<hr>

<hr>

<hr>

<h2 id="toc_17">注释和阅读更多</h2>

<!-- comment -->

<!-- more -->

<p>Actions-&gt;Insert Read More Comment <em>或者</em> <code>Command + .</code><br>
<strong>注</strong> 阅读更多的功能只用在生成网站或博客时。</p>

<h2 id="toc_18">此文参考:</h2>

<p><a href="https://guides.github.com/features/mastering-markdown/">https://guides.github.com/features/mastering-markdown/</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Markdown syntax guide full version]]></title>
    <link href="http://coderforart.com/markdown-syntax-guide-full-version.html"/>
    <updated>2014-12-16T20:10:44+08:00</updated>
    <id>http://coderforart.com/markdown-syntax-guide-full-version.html</id>
    <content type="html"><![CDATA[
<ul>
<li><a href="#overview">Overview</a>

<ul>
<li><a href="#philosophy">Philosophy</a></li>
<li><a href="#html">Inline HTML</a></li>
<li><a href="#autoescape">Automatic Escaping for Special Characters</a></li>
</ul></li>
<li><a href="#block">Block Elements</a>

<ul>
<li><a href="#p">Paragraphs and Line Breaks</a></li>
<li><a href="#header">Headers</a></li>
<li><a href="#blockquote">Blockquotes</a></li>
<li><a href="#list">Lists</a></li>
<li><a href="#precode">Code Blocks</a></li>
<li><a href="#hr">Horizontal Rules</a></li>
</ul></li>
<li><a href="#span">Span Elements</a>

<ul>
<li><a href="#link">Links</a></li>
<li><a href="#em">Emphasis</a></li>
<li><a href="#code">Code</a></li>
<li><a href="#img">Images</a></li>
</ul></li>
<li><a href="#misc">Miscellaneous</a>

<ul>
<li><a href="#backslash">Backslash Escapes</a></li>
<li><a href="#autolink">Automatic Links</a></li>
</ul></li>
</ul>

<span id="more"></span><!-- more -->

<p><strong>Note:</strong> This document is itself written using Markdown; you<br>
can <a href="/projects/markdown/syntax.text">see the source for it by adding &lsquo;.text&rsquo; to the URL</a>.</p>

<hr>

<h2 id="toc_0">Overview</h2>

<p><a id="overview"></a></p>

<h3 id="toc_1">Philosophy</h3>

<p><a id="philosophy"></a></p>

<p>Markdown is intended to be as easy-to-read and easy-to-write as is feasible.</p>

<p>Readability, however, is emphasized above all else. A Markdown-formatted<br>
document should be publishable as-is, as plain text, without looking<br>
like it&rsquo;s been marked up with tags or formatting instructions. While<br>
Markdown&rsquo;s syntax has been influenced by several existing text-to-HTML<br>
filters &ndash; including <a href="http://docutils.sourceforge.net/mirror/setext.html">Setext</a>, <a href="http://www.aaronsw.com/2002/atx/">atx</a>, <a href="http://textism.com/tools/textile/">Textile</a>, <a href="http://docutils.sourceforge.net/rst.html">reStructuredText</a>,<br>
<a href="http://www.triptico.com/software/grutatxt.html">Grutatext</a>, and <a href="http://ettext.taint.org/doc/">EtText</a> &ndash; the single biggest source of<br>
inspiration for Markdown&rsquo;s syntax is the format of plain text email.</p>

<p>To this end, Markdown&rsquo;s syntax is comprised entirely of punctuation<br>
characters, which punctuation characters have been carefully chosen so<br>
as to look like what they mean. E.g., asterisks around a word actually<br>
look like *emphasis*. Markdown lists look like, well, lists. Even<br>
blockquotes look like quoted passages of text, assuming you&rsquo;ve ever<br>
used email.</p>

<h3 id="toc_2">Inline HTML</h3>

<p><a id="html"></a></p>

<p>Markdown&rsquo;s syntax is intended for one purpose: to be used as a<br>
format for <em>writing</em> for the web.</p>

<p>Markdown is not a replacement for HTML, or even close to it. Its<br>
syntax is very small, corresponding only to a very small subset of<br>
HTML tags. The idea is <em>not</em> to create a syntax that makes it easier<br>
to insert HTML tags. In my opinion, HTML tags are already easy to<br>
insert. The idea for Markdown is to make it easy to read, write, and<br>
edit prose. HTML is a <em>publishing</em> format; Markdown is a <em>writing</em><br>
format. Thus, Markdown&rsquo;s formatting syntax only addresses issues that<br>
can be conveyed in plain text.</p>

<p>For any markup that is not covered by Markdown&rsquo;s syntax, you simply<br>
use HTML itself. There&rsquo;s no need to preface it or delimit it to<br>
indicate that you&rsquo;re switching from Markdown to HTML; you just use<br>
the tags.</p>

<p>The only restrictions are that block-level HTML elements &ndash; e.g. <code>&lt;div&gt;</code>,<br>
<code>&lt;table&gt;</code>, <code>&lt;pre&gt;</code>, <code>&lt;p&gt;</code>, etc. &ndash; must be separated from surrounding<br>
content by blank lines, and the start and end tags of the block should<br>
not be indented with tabs or spaces. Markdown is smart enough not<br>
to add extra (unwanted) <code>&lt;p&gt;</code> tags around HTML block-level tags.</p>

<p>For example, to add an HTML table to a Markdown article:</p>

<pre><code>This is a regular paragraph.

&lt;table&gt;
    &lt;tr&gt;
        &lt;td&gt;Foo&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

This is another regular paragraph.
</code></pre>

<p>Note that Markdown formatting syntax is not processed within block-level<br>
HTML tags. E.g., you can&rsquo;t use Markdown-style <code>*emphasis*</code> inside an<br>
HTML block.</p>

<p>Span-level HTML tags &ndash; e.g. <code>&lt;span&gt;</code>, <code>&lt;cite&gt;</code>, or <code>&lt;del&gt;</code> &ndash; can be<br>
used anywhere in a Markdown paragraph, list item, or header. If you<br>
want, you can even use HTML tags instead of Markdown formatting; e.g. if<br>
you&rsquo;d prefer to use HTML <code>&lt;a&gt;</code> or <code>&lt;img&gt;</code> tags instead of Markdown&rsquo;s<br>
link or image syntax, go right ahead.</p>

<p>Unlike block-level HTML tags, Markdown syntax <em>is</em> processed within<br>
span-level tags.</p>

<h3 id="toc_3">Automatic Escaping for Special Characters</h3>

<p><a id="autoescape"></a></p>

<p>In HTML, there are two characters that demand special treatment: <code>&lt;</code><br>
and <code>&amp;</code>. Left angle brackets are used to start tags; ampersands are<br>
used to denote HTML entities. If you want to use them as literal<br>
characters, you must escape them as entities, e.g. <code>&amp;lt;</code>, and<br>
<code>&amp;amp;</code>.</p>

<p>Ampersands in particular are bedeviling for web writers. If you want to<br>
write about &lsquo;AT&amp;T&rsquo;, you need to write &lsquo;<code>AT&amp;amp;T</code>&rsquo;. You even need to<br>
escape ampersands within URLs. Thus, if you want to link to:</p>

<pre><code>http://images.google.com/images?num=30&amp;q=larry+bird
</code></pre>

<p>you need to encode the URL as:</p>

<pre><code>http://images.google.com/images?num=30&amp;amp;q=larry+bird
</code></pre>

<p>in your anchor tag <code>href</code> attribute. Needless to say, this is easy to<br>
forget, and is probably the single most common source of HTML validation<br>
errors in otherwise well-marked-up web sites.</p>

<p>Markdown allows you to use these characters naturally, taking care of<br>
all the necessary escaping for you. If you use an ampersand as part of<br>
an HTML entity, it remains unchanged; otherwise it will be translated<br>
into <code>&amp;amp;</code>.</p>

<p>So, if you want to include a copyright symbol in your article, you can write:</p>

<pre><code>&amp;copy;
</code></pre>

<p>and Markdown will leave it alone. But if you write:</p>

<pre><code>AT&amp;T
</code></pre>

<p>Markdown will translate it to:</p>

<pre><code>AT&amp;amp;T
</code></pre>

<p>Similarly, because Markdown supports <a href="#html">inline HTML</a>, if you use<br>
angle brackets as delimiters for HTML tags, Markdown will treat them as<br>
such. But if you write:</p>

<pre><code>4 &lt; 5
</code></pre>

<p>Markdown will translate it to:</p>

<pre><code>4 &amp;lt; 5
</code></pre>

<p>However, inside Markdown code spans and blocks, angle brackets and<br>
ampersands are <em>always</em> encoded automatically. This makes it easy to use<br>
Markdown to write about HTML code. (As opposed to raw HTML, which is a<br>
terrible format for writing about HTML syntax, because every single <code>&lt;</code><br>
and <code>&amp;</code> in your example code needs to be escaped.)</p>

<hr>

<h2 id="toc_4">Block Elements</h2>

<p><a id="block"></a></p>

<h3 id="toc_5">Paragraphs and Line Breaks</h3>

<p><a id="p"></a></p>

<p>A paragraph is simply one or more consecutive lines of text, separated<br>
by one or more blank lines. (A blank line is any line that looks like a<br>
blank line &ndash; a line containing nothing but spaces or tabs is considered<br>
blank.) Normal paragraphs should not be indented with spaces or tabs.</p>

<p>The implication of the <q>one or more consecutive lines of text</q> rule is<br>
that Markdown supports <q>hard-wrapped</q> text paragraphs. This differs<br>
significantly from most other text-to-HTML formatters (including Movable<br>
Type&rsquo;s <q>Convert Line Breaks</q> option) which translate every line break<br>
character in a paragraph into a <code>&lt;br /&gt;</code> tag.</p>

<p>When you <em>do</em> want to insert a <code>&lt;br /&gt;</code> break tag using Markdown, you<br>
end a line with two or more spaces, then type return.</p>

<p>Yes, this takes a tad more effort to create a <code>&lt;br /&gt;</code>, but a simplistic<br>
<q>every line break is a `<br />`</q> rule wouldn&rsquo;t work for Markdown.<br>
Markdown&rsquo;s email-style <a href="#blockquote">blockquoting</a> and multi-paragraph <a href="#list">list items</a><br>
work best &ndash; and look better &ndash; when you format them with hard breaks.</p>

<h3 id="toc_6">Headers</h3>

<p><a id="header"></a></p>

<p>Markdown supports two styles of headers, <a href="http://docutils.sourceforge.net/mirror/setext.html">Setext</a> and <a href="http://www.aaronsw.com/2002/atx/">atx</a>.</p>

<p>Setext-style headers are <q>underlined</q> using equal signs (for first-level<br>
headers) and dashes (for second-level headers). For example:</p>

<pre><code>This is an H1
=============

This is an H2
-------------
</code></pre>

<p>Any number of underlining <code>=</code>&rsquo;s or <code>-</code>&rsquo;s will work.</p>

<p>Atx-style headers use 1-6 hash characters at the start of the line,<br>
corresponding to header levels 1-6. For example:</p>

<pre><code># This is an H1

## This is an H2

###### This is an H6
</code></pre>

<p>Optionally, you may <q>close</q> atx-style headers. This is purely<br>
cosmetic &ndash; you can use this if you think it looks better. The<br>
closing hashes don&rsquo;t even need to match the number of hashes<br>
used to open the header. (The number of opening hashes<br>
determines the header level.) :</p>

<pre><code># This is an H1 #

## This is an H2 ##

### This is an H3 ######
</code></pre>

<h3 id="toc_7">Blockquotes</h3>

<p><a id="blockquote"></a></p>

<p>Markdown uses email-style <code>&gt;</code> characters for blockquoting. If you&rsquo;re<br>
familiar with quoting passages of text in an email message, then you<br>
know how to create a blockquote in Markdown. It looks best if you hard<br>
wrap the text and put a <code>&gt;</code> before every line:</p>

<pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
&gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.
&gt; 
&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
&gt; id sem consectetuer libero luctus adipiscing.
</code></pre>

<p>Markdown allows you to be lazy and only put the <code>&gt;</code> before the first<br>
line of a hard-wrapped paragraph:</p>

<pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.

&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
id sem consectetuer libero luctus adipiscing.
</code></pre>

<p>Blockquotes can be nested (i.e. a blockquote-in-a-blockquote) by<br>
adding additional levels of <code>&gt;</code>:</p>

<pre><code>&gt; This is the first level of quoting.
&gt;
&gt; &gt; This is nested blockquote.
&gt;
&gt; Back to the first level.
</code></pre>

<p>Blockquotes can contain other Markdown elements, including headers, lists,<br>
and code blocks:</p>

<pre><code>&gt; ## This is a header.
&gt; 
&gt; 1.   This is the first list item.
&gt; 2.   This is the second list item.
&gt; 
&gt; Here&#39;s some example code:
&gt; 
&gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);
</code></pre>

<p>Any decent text editor should make email-style quoting easy. For<br>
example, with BBEdit, you can make a selection and choose Increase<br>
Quote Level from the Text menu.</p>

<h3 id="toc_8">Lists</h3>

<p><a id="list"></a></p>

<p>Markdown supports ordered (numbered) and unordered (bulleted) lists.</p>

<p>Unordered lists use asterisks, pluses, and hyphens &ndash; interchangably<br>
&ndash; as list markers:</p>

<pre><code>*   Red
*   Green
*   Blue
</code></pre>

<p>is equivalent to:</p>

<pre><code>+   Red
+   Green
+   Blue
</code></pre>

<p>and:</p>

<pre><code>-   Red
-   Green
-   Blue
</code></pre>

<p>Ordered lists use numbers followed by periods:</p>

<pre><code>1.  Bird
2.  McHale
3.  Parish
</code></pre>

<p>It&rsquo;s important to note that the actual numbers you use to mark the<br>
list have no effect on the HTML output Markdown produces. The HTML<br>
Markdown produces from the above list is:</p>

<pre><code>&lt;ol&gt;
&lt;li&gt;Bird&lt;/li&gt;
&lt;li&gt;McHale&lt;/li&gt;
&lt;li&gt;Parish&lt;/li&gt;
&lt;/ol&gt;
</code></pre>

<p>If you instead wrote the list in Markdown like this:</p>

<pre><code>1.  Bird
1.  McHale
1.  Parish
</code></pre>

<p>or even:</p>

<pre><code>3. Bird
1. McHale
8. Parish
</code></pre>

<p>you&rsquo;d get the exact same HTML output. The point is, if you want to,<br>
you can use ordinal numbers in your ordered Markdown lists, so that<br>
the numbers in your source match the numbers in your published HTML.<br>
But if you want to be lazy, you don&rsquo;t have to.</p>

<p>If you do use lazy list numbering, however, you should still start the<br>
list with the number 1. At some point in the future, Markdown may support<br>
starting ordered lists at an arbitrary number.</p>

<p>List markers typically start at the left margin, but may be indented by<br>
up to three spaces. List markers must be followed by one or more spaces<br>
or a tab.</p>

<p>To make lists look nice, you can wrap items with hanging indents:</p>

<pre><code>*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.
    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,
    viverra nec, fringilla in, laoreet vitae, risus.
*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.
    Suspendisse id sem consectetuer libero luctus adipiscing.
</code></pre>

<p>But if you want to be lazy, you don&rsquo;t have to:</p>

<pre><code>*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.
Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,
viverra nec, fringilla in, laoreet vitae, risus.
*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.
Suspendisse id sem consectetuer libero luctus adipiscing.
</code></pre>

<p>If list items are separated by blank lines, Markdown will wrap the<br>
items in <code>&lt;p&gt;</code> tags in the HTML output. For example, this input:</p>

<pre><code>*   Bird
*   Magic
</code></pre>

<p>will turn into:</p>

<pre><code>&lt;ul&gt;
&lt;li&gt;Bird&lt;/li&gt;
&lt;li&gt;Magic&lt;/li&gt;
&lt;/ul&gt;
</code></pre>

<p>But this:</p>

<pre><code>*   Bird

*   Magic
</code></pre>

<p>will turn into:</p>

<pre><code>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Bird&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Magic&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</code></pre>

<p>List items may consist of multiple paragraphs. Each subsequent<br>
paragraph in a list item must be indented by either 4 spaces<br>
or one tab:</p>

<pre><code>1.  This is a list item with two paragraphs. Lorem ipsum dolor
    sit amet, consectetuer adipiscing elit. Aliquam hendrerit
    mi posuere lectus.

    Vestibulum enim wisi, viverra nec, fringilla in, laoreet
    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum
    sit amet velit.

2.  Suspendisse id sem consectetuer libero luctus adipiscing.
</code></pre>

<p>It looks nice if you indent every line of the subsequent<br>
paragraphs, but here again, Markdown will allow you to be<br>
lazy:</p>

<pre><code>*   This is a list item with two paragraphs.

    This is the second paragraph in the list item. You&#39;re
only required to indent the first line. Lorem ipsum dolor
sit amet, consectetuer adipiscing elit.

*   Another item in the same list.
</code></pre>

<p>To put a blockquote within a list item, the blockquote&rsquo;s <code>&gt;</code><br>
delimiters need to be indented:</p>

<pre><code>*   A list item with a blockquote:

    &gt; This is a blockquote
    &gt; inside a list item.
</code></pre>

<p>To put a code block within a list item, the code block needs<br>
to be indented <em>twice</em> &ndash; 8 spaces or two tabs:</p>

<pre><code>*   A list item with a code block:

        &lt;code goes here&gt;
</code></pre>

<p>It&rsquo;s worth noting that it&rsquo;s possible to trigger an ordered list by<br>
accident, by writing something like this:</p>

<pre><code>1986. What a great season.
</code></pre>

<p>In other words, a <em>number-period-space</em> sequence at the beginning of a<br>
line. To avoid this, you can backslash-escape the period:</p>

<pre><code>1986\. What a great season.
</code></pre>

<h3 id="toc_9">Code Blocks</h3>

<p><a id="precode"></a></p>

<p>Pre-formatted code blocks are used for writing about programming or<br>
markup source code. Rather than forming normal paragraphs, the lines<br>
of a code block are interpreted literally. Markdown wraps a code block<br>
in both <code>&lt;pre&gt;</code> and <code>&lt;code&gt;</code> tags.</p>

<p>To produce a code block in Markdown, simply indent every line of the<br>
block by at least 4 spaces or 1 tab. For example, given this input:</p>

<pre><code>This is a normal paragraph:

    This is a code block.
</code></pre>

<p>Markdown will generate:</p>

<pre><code>&lt;p&gt;This is a normal paragraph:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;This is a code block.
&lt;/code&gt;&lt;/pre&gt;
</code></pre>

<p>One level of indentation &ndash; 4 spaces or 1 tab &ndash; is removed from each<br>
line of the code block. For example, this:</p>

<pre><code>Here is an example of AppleScript:

    tell application &quot;Foo&quot;
        beep
    end tell
</code></pre>

<p>will turn into:</p>

<pre><code>&lt;p&gt;Here is an example of AppleScript:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tell application &quot;Foo&quot;
    beep
end tell
&lt;/code&gt;&lt;/pre&gt;
</code></pre>

<p>A code block continues until it reaches a line that is not indented<br>
(or the end of the article).</p>

<p>Within a code block, ampersands (<code>&amp;</code>) and angle brackets (<code>&lt;</code> and <code>&gt;</code>)<br>
are automatically converted into HTML entities. This makes it very<br>
easy to include example HTML source code using Markdown &ndash; just paste<br>
it and indent it, and Markdown will handle the hassle of encoding the<br>
ampersands and angle brackets. For example, this:</p>

<pre><code>    &lt;div class=&quot;footer&quot;&gt;
        &amp;copy; 2004 Foo Corporation
    &lt;/div&gt;
</code></pre>

<p>will turn into:</p>

<pre><code>&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&quot;footer&quot;&amp;gt;
    &amp;amp;copy; 2004 Foo Corporation
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</code></pre>

<p>Regular Markdown syntax is not processed within code blocks. E.g.,<br>
asterisks are just literal asterisks within a code block. This means<br>
it&rsquo;s also easy to use Markdown to write about Markdown&rsquo;s own syntax.</p>

<h3 id="toc_10">Horizontal Rules</h3>

<p><a id="hr"></a></p>

<p>You can produce a horizontal rule tag (<code>&lt;hr /&gt;</code>) by placing three or<br>
more hyphens, asterisks, or underscores on a line by themselves. If you<br>
wish, you may use spaces between the hyphens or asterisks. Each of the<br>
following lines will produce a horizontal rule:</p>

<pre><code>* * *

***

*****

- - -

---------------------------------------
</code></pre>

<hr>

<h2 id="toc_11">Span Elements</h2>

<p><a id="span"></a></p>

<h3 id="toc_12">Links</h3>

<p><a id="link"></a></p>

<p>Markdown supports two style of links: <em>inline</em> and <em>reference</em>.</p>

<p>In both styles, the link text is delimited by [square brackets].</p>

<p>To create an inline link, use a set of regular parentheses immediately<br>
after the link text&rsquo;s closing square bracket. Inside the parentheses,<br>
put the URL where you want the link to point, along with an <em>optional</em><br>
title for the link, surrounded in quotes. For example:</p>

<pre><code>This is [an example](http://example.com/ &quot;Title&quot;) inline link.

[This link](http://example.net/) has no title attribute.
</code></pre>

<p>Will produce:</p>

<pre><code>&lt;p&gt;This is &lt;a href=&quot;http://example.com/&quot; title=&quot;Title&quot;&gt;
an example&lt;/a&gt; inline link.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://example.net/&quot;&gt;This link&lt;/a&gt; has no
title attribute.&lt;/p&gt;
</code></pre>

<p>If you&rsquo;re referring to a local resource on the same server, you can<br>
use relative paths:</p>

<pre><code>See my [About](/about/) page for details.   
</code></pre>

<p>Reference-style links use a second set of square brackets, inside<br>
which you place a label of your choosing to identify the link:</p>

<pre><code>This is [an example][id] reference-style link.
</code></pre>

<p>You can optionally use a space to separate the sets of brackets:</p>

<pre><code>This is [an example] [id] reference-style link.
</code></pre>

<p>Then, anywhere in the document, you define your link label like this,<br>
on a line by itself:</p>

<pre><code>[id]: http://example.com/  &quot;Optional Title Here&quot;
</code></pre>

<p>That is:</p>

<ul>
<li>  Square brackets containing the link identifier (optionally
indented from the left margin using up to three spaces);</li>
<li>  followed by a colon;</li>
<li>  followed by one or more spaces (or tabs);</li>
<li>  followed by the URL for the link;</li>
<li>  optionally followed by a title attribute for the link, enclosed
in double or single quotes, or enclosed in parentheses.</li>
</ul>

<p>The following three link definitions are equivalent:</p>

<pre><code>[foo]: http://example.com/  &quot;Optional Title Here&quot;
[foo]: http://example.com/  &#39;Optional Title Here&#39;
[foo]: http://example.com/  (Optional Title Here)
</code></pre>

<p><strong>Note:</strong> There is a known bug in Markdown.pl 1.0.1 which prevents<br>
single quotes from being used to delimit link titles.</p>

<p>The link URL may, optionally, be surrounded by angle brackets:</p>

<pre><code>[id]: &lt;http://example.com/&gt;  &quot;Optional Title Here&quot;
</code></pre>

<p>You can put the title attribute on the next line and use extra spaces<br>
or tabs for padding, which tends to look better with longer URLs:</p>

<pre><code>[id]: http://example.com/longish/path/to/resource/here
    &quot;Optional Title Here&quot;
</code></pre>

<p>Link definitions are only used for creating links during Markdown<br>
processing, and are stripped from your document in the HTML output.</p>

<p>Link definition names may consist of letters, numbers, spaces, and<br>
punctuation &ndash; but they are <em>not</em> case sensitive. E.g. these two<br>
links:</p>

<pre><code>[link text][a]
[link text][A]
</code></pre>

<p>are equivalent.</p>

<p>The <em>implicit link name</em> shortcut allows you to omit the name of the<br>
link, in which case the link text itself is used as the name.<br>
Just use an empty set of square brackets &ndash; e.g., to link the word<br>
<q>Google</q> to the google.com web site, you could simply write:</p>

<pre><code>[Google][]
</code></pre>

<p>And then define the link:</p>

<pre><code>[Google]: http://google.com/
</code></pre>

<p>Because link names may contain spaces, this shortcut even works for<br>
multiple words in the link text:</p>

<pre><code>Visit [Daring Fireball][] for more information.
</code></pre>

<p>And then define the link:</p>

<pre><code>[Daring Fireball]: http://daringfireball.net/
</code></pre>

<p>Link definitions can be placed anywhere in your Markdown document. I<br>
tend to put them immediately after each paragraph in which they&rsquo;re<br>
used, but if you want, you can put them all at the end of your<br>
document, sort of like footnotes.</p>

<p>Here&rsquo;s an example of reference links in action:</p>

<pre><code>I get 10 times more traffic from [Google] [1] than from
[Yahoo] [2] or [MSN] [3].

  [1]: http://google.com/        &quot;Google&quot;
  [2]: http://search.yahoo.com/  &quot;Yahoo Search&quot;
  [3]: http://search.msn.com/    &quot;MSN Search&quot;
</code></pre>

<p>Using the implicit link name shortcut, you could instead write:</p>

<pre><code>I get 10 times more traffic from [Google][] than from
[Yahoo][] or [MSN][].

  [google]: http://google.com/        &quot;Google&quot;
  [yahoo]:  http://search.yahoo.com/  &quot;Yahoo Search&quot;
  [msn]:    http://search.msn.com/    &quot;MSN Search&quot;
</code></pre>

<p>Both of the above examples will produce the following HTML output:</p>

<pre><code>&lt;p&gt;I get 10 times more traffic from &lt;a href=&quot;http://google.com/&quot;
title=&quot;Google&quot;&gt;Google&lt;/a&gt; than from
&lt;a href=&quot;http://search.yahoo.com/&quot; title=&quot;Yahoo Search&quot;&gt;Yahoo&lt;/a&gt;
or &lt;a href=&quot;http://search.msn.com/&quot; title=&quot;MSN Search&quot;&gt;MSN&lt;/a&gt;.&lt;/p&gt;
</code></pre>

<p>For comparison, here is the same paragraph written using<br>
Markdown&rsquo;s inline link style:</p>

<pre><code>I get 10 times more traffic from [Google](http://google.com/ &quot;Google&quot;)
than from [Yahoo](http://search.yahoo.com/ &quot;Yahoo Search&quot;) or
[MSN](http://search.msn.com/ &quot;MSN Search&quot;).
</code></pre>

<p>The point of reference-style links is not that they&rsquo;re easier to<br>
write. The point is that with reference-style links, your document<br>
source is vastly more readable. Compare the above examples: using<br>
reference-style links, the paragraph itself is only 81 characters<br>
long; with inline-style links, it&rsquo;s 176 characters; and as raw HTML,<br>
it&rsquo;s 234 characters. In the raw HTML, there&rsquo;s more markup than there<br>
is text.</p>

<p>With Markdown&rsquo;s reference-style links, a source document much more<br>
closely resembles the final output, as rendered in a browser. By<br>
allowing you to move the markup-related metadata out of the paragraph,<br>
you can add links without interrupting the narrative flow of your<br>
prose.</p>

<h3 id="toc_13">Emphasis</h3>

<p><a id="em"></a></p>

<p>Markdown treats asterisks (<code>*</code>) and underscores (<code>_</code>) as indicators of<br>
emphasis. Text wrapped with one <code>*</code> or <code>_</code> will be wrapped with an<br>
HTML <code>&lt;em&gt;</code> tag; double <code>*</code>&rsquo;s or <code>_</code>&rsquo;s will be wrapped with an HTML<br>
<code>&lt;strong&gt;</code> tag. E.g., this input:</p>

<pre><code>*single asterisks*

_single underscores_

**double asterisks**

__double underscores__
</code></pre>

<p>will produce:</p>

<pre><code>&lt;em&gt;single asterisks&lt;/em&gt;

&lt;em&gt;single underscores&lt;/em&gt;

&lt;strong&gt;double asterisks&lt;/strong&gt;

&lt;strong&gt;double underscores&lt;/strong&gt;
</code></pre>

<p>You can use whichever style you prefer; the lone restriction is that<br>
the same character must be used to open and close an emphasis span.</p>

<p>Emphasis can be used in the middle of a word:</p>

<pre><code>un*frigging*believable
</code></pre>

<p>But if you surround an <code>*</code> or <code>_</code> with spaces, it&rsquo;ll be treated as a<br>
literal asterisk or underscore.</p>

<p>To produce a literal asterisk or underscore at a position where it<br>
would otherwise be used as an emphasis delimiter, you can backslash<br>
escape it:</p>

<pre><code>\*this text is surrounded by literal asterisks\*
</code></pre>

<h3 id="toc_14">Code</h3>

<p><a id="code"></a></p>

<p>To indicate a span of code, wrap it with backtick quotes (<code>`</code>).<br>
Unlike a pre-formatted code block, a code span indicates code within a<br>
normal paragraph. For example:</p>

<pre><code>Use the `printf()` function.
</code></pre>

<p>will produce:</p>

<pre><code>&lt;p&gt;Use the &lt;code&gt;printf()&lt;/code&gt; function.&lt;/p&gt;
</code></pre>

<p>To include a literal backtick character within a code span, you can use<br>
multiple backticks as the opening and closing delimiters:</p>

<pre><code>``There is a literal backtick (`) here.``
</code></pre>

<p>which will produce this:</p>

<pre><code>&lt;p&gt;&lt;code&gt;There is a literal backtick (`) here.&lt;/code&gt;&lt;/p&gt;
</code></pre>

<p>The backtick delimiters surrounding a code span may include spaces &ndash;<br>
one after the opening, one before the closing. This allows you to place<br>
literal backtick characters at the beginning or end of a code span:</p>

<pre><code>A single backtick in a code span: `` ` ``

A backtick-delimited string in a code span: `` `foo` ``
</code></pre>

<p>will produce:</p>

<pre><code>&lt;p&gt;A single backtick in a code span: &lt;code&gt;`&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;A backtick-delimited string in a code span: &lt;code&gt;`foo`&lt;/code&gt;&lt;/p&gt;
</code></pre>

<p>With a code span, ampersands and angle brackets are encoded as HTML<br>
entities automatically, which makes it easy to include example HTML<br>
tags. Markdown will turn this:</p>

<pre><code>Please don&#39;t use any `&lt;blink&gt;` tags.
</code></pre>

<p>into:</p>

<pre><code>&lt;p&gt;Please don&#39;t use any &lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;
</code></pre>

<p>You can write this:</p>

<pre><code>`&amp;#8212;` is the decimal-encoded equivalent of `&amp;mdash;`.
</code></pre>

<p>to produce:</p>

<pre><code>&lt;p&gt;&lt;code&gt;&amp;amp;#8212;&lt;/code&gt; is the decimal-encoded
equivalent of &lt;code&gt;&amp;amp;mdash;&lt;/code&gt;.&lt;/p&gt;
</code></pre>

<h3 id="toc_15">Images</h3>

<p><a id="img"></a></p>

<p>Admittedly, it&rsquo;s fairly difficult to devise a <q>natural</q> syntax for<br>
placing images into a plain text document format.</p>

<p>Markdown uses an image syntax that is intended to resemble the syntax<br>
for links, allowing for two styles: <em>inline</em> and <em>reference</em>.</p>

<p>Inline image syntax looks like this:</p>

<pre><code>![Alt text](/path/to/img.jpg)

![Alt text](/path/to/img.jpg &quot;Optional title&quot;)
</code></pre>

<p>That is:</p>

<ul>
<li>  An exclamation mark: <code>!</code>;</li>
<li>  followed by a set of square brackets, containing the <code>alt</code>
attribute text for the image;</li>
<li>  followed by a set of parentheses, containing the URL or path to
the image, and an optional <code>title</code> attribute enclosed in double
or single quotes.</li>
</ul>

<p>Reference-style image syntax looks like this:</p>

<pre><code>![Alt text][id]
</code></pre>

<p>Where <q>id</q> is the name of a defined image reference. Image references<br>
are defined using syntax identical to link references:</p>

<pre><code>[id]: url/to/image  &quot;Optional title attribute&quot;
</code></pre>

<p>As of this writing, Markdown has no syntax for specifying the<br>
dimensions of an image; if this is important to you, you can simply<br>
use regular HTML <code>&lt;img&gt;</code> tags.</p>

<hr>

<h2 id="toc_16">Miscellaneous</h2>

<p><a id="misc"></a></p>

<h3 id="toc_17">Automatic Links</h3>

<p><a id="autolink"></a></p>

<p>Markdown supports a shortcut style for creating <q>automatic</q> links for URLs and email addresses: simply surround the URL or email address with angle brackets. What this means is that if you want to show the actual text of a URL or email address, and also have it be a clickable link, you can do this:</p>

<pre><code>&lt;http://example.com/&gt;
</code></pre>

<p>Markdown will turn this into:</p>

<pre><code>&lt;a href=&quot;http://example.com/&quot;&gt;http://example.com/&lt;/a&gt;
</code></pre>

<p>Automatic links for email addresses work similarly, except that<br>
Markdown will also perform a bit of randomized decimal and hex<br>
entity-encoding to help obscure your address from address-harvesting<br>
spambots. For example, Markdown will turn this:</p>

<pre><code>&lt;address@example.com&gt;
</code></pre>

<p>into something like this:</p>

<pre><code>&lt;a href=&quot;&amp;#x6D;&amp;#x61;i&amp;#x6C;&amp;#x74;&amp;#x6F;:&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;
&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;
&amp;#109;&quot;&gt;&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;
&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;
</code></pre>

<p>which will render in a browser as a clickable link to <q>address@example.com</q>.</p>

<p>(This sort of entity-encoding trick will indeed fool many, if not<br>
most, address-harvesting bots, but it definitely won&rsquo;t fool all of<br>
them. It&rsquo;s better than nothing, but an address published in this way<br>
will probably eventually start receiving spam.)</p>

<h3 id="toc_18">Backslash Escapes</h3>

<p><a id="backslash"></a></p>

<p>Markdown allows you to use backslash escapes to generate literal<br>
characters which would otherwise have special meaning in Markdown&rsquo;s<br>
formatting syntax. For example, if you wanted to surround a word<br>
with literal asterisks (instead of an HTML <code>&lt;em&gt;</code> tag), you can use<br>
backslashes before the asterisks, like this:</p>

<pre><code>\*literal asterisks\*
</code></pre>

<p>Markdown provides backslash escapes for the following characters:</p>

<pre><code>\   backslash
`   backtick
*   asterisk
_   underscore
{}  curly braces
[]  square brackets
()  parentheses
#   hash mark
+   plus sign
-   minus sign (hyphen)
.   dot
!   exclamation mark
</code></pre>

]]></content>
  </entry>
  
</feed>
