<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Coder For Art]]></title>
  <link href="http://coderforart.com/atom.xml" rel="self"/>
  <link href="http://coderforart.com/"/>
  <updated>2015-01-20T10:51:09GMT+08:00</updated>
  <id>http://coderforart.com/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>
  <generator uri="http://www.coderforart.com/">CoderForArt</generator>

  
  <entry>
    <title type="html"><![CDATA[MWeb Q & A]]></title>
    <link href="http://coderforart.com/mweb-qa.html"/>
    <updated>2015-01-20T10:04:01GMT+08:00</updated>
    <id>http://coderforart.com/mweb-qa.html</id>
    <content type="html"><![CDATA[
<h2>How to export HTML style PDF？</h2>

<p><code>CMD+R</code> open <q>Live Preview</q>,click share button,select <code>Save as PDF</code>.</p>

<h2>How to enable MathJax preview support? How to enable website MathJax support?</h2>

<p><code>CMD+,</code> open Preferences，Themes &ndash;&gt; Enable Math.<br>
For enable website MathJax support,the simple way is copy below code to <code>Site category</code> &ndash;&gt; <code>Site other:</code> text box. </p>

<pre><code class="js">&lt;script type=&quot;text/x-mathjax-config&quot;&gt;
  MathJax.Hub.Config({tex2jax: {inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]]}});
&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot;
  src=&quot;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;&gt;
&lt;/script&gt;
</code></pre>

<p>If you website is https,please replace <code>http://cdn.mathjax.org...</code> to <code>https://cdn.mathjax.org...</code>.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb 所有问题和回答收集]]></title>
    <link href="http://coderforart.com/mweb-qa-zh.html.html"/>
    <updated>2015-01-20T10:03:00GMT+08:00</updated>
    <id>http://coderforart.com/mweb-qa-zh.html.html</id>
    <content type="html"><![CDATA[
<h2>如何导出HTML样式的PDF？</h2>

<p><code>CMD+R</code>打开Live Preview窗口，点右边的分享按钮，选择<code>Save as PDF</code>即可。</p>

<h2>如何开启MathJax预览支持？如何让网站支持MathJax？</h2>

<p><code>CMD+,</code>打开设置面板，切到Themes，勾选Enable Math选项。<br>
如果要让网站支持MathJax，最简单的方法是在网站分类设置中的：Site other:的文本框中填入以下代码：</p>

<pre><code class="js">&lt;script type=&quot;text/x-mathjax-config&quot;&gt;
  MathJax.Hub.Config({tex2jax: {inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]]}});
&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot;
  src=&quot;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;&gt;
&lt;/script&gt;
</code></pre>

<p>如果您的网站是要用HTTPS，请把：<code>http://cdn.mathjax.org...</code>改为：<code>https://cdn.mathjax.org...</code></p>

<h2>虽然在后面打中文不会跳动，但是在文章中间插入中文时，下面的文本会跳动怎么办？</h2>

<p>这个解决办法只有一个，就是在设置中把编辑器的字体换成<code>Hiragino Sans GB</code>，中文名称应该是叫<code>冬青黑体</code>。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb 1.1 release (Submited to App Store Waiting For Review)]]></title>
    <link href="http://coderforart.com/mweb-v1.1-release.html"/>
    <updated>2015-01-19T15:02:30GMT+08:00</updated>
    <id>http://coderforart.com/mweb-v1.1-release.html</id>
    <content type="html"><![CDATA[
<h2>New feature</h2>

<ul>
<li>Add import files (.txt and .md) featrue：File &ndash;&gt; Import Files To Library&hellip;</li>
<li>Add TOC（Table of Content）featrue: Preferences &ndash;&gt; Themes &ndash;&gt; Enable TOC (Table of Content)</li>
<li>Add MWeb Lite</li>
<li>Add sitemap suport.</li>
<li>Add right click for category edit.</li>
<li>Add syntax highlighting in fenced code blocks feature,for version 1.0 user, please go to <a href="https://github.com/oulvhai/MWeb-Themes/">https://github.com/oulvhai/MWeb-Themes/</a> download new themes. Language name detail:<a href="http://highlightjs.readthedocs.org/en/latest/css-classes-reference.html">http://highlightjs.readthedocs.org/en/latest/css-classes-reference.html</a></li>
</ul>

<span id="more"></span><!-- more -->

<h2>Fixed</h2>

<ul>
<li>Live preview improved</li>
<li>Outline improved</li>
<li>case sensitive system can&rsquo;t open MWeb&rsquo;s document.</li>
</ul>

<h2>Syntax highlighting in fenced code blocks screenshot</h2>

<p><img src="media/14216489427773/Snip20150119_6.png" alt="">￼￼￼￼￼￼</p>

<p><img src="media/14216489427773/Snip20150119_5.png" alt="">￼￼￼￼</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb 1.1 版更新说明 （已提交到App Store，目前在等待审核中）]]></title>
    <link href="http://coderforart.com/mweb-v1.1-release-zh.html"/>
    <updated>2015-01-19T14:29:02GMT+08:00</updated>
    <id>http://coderforart.com/mweb-v1.1-release-zh.html</id>
    <content type="html"><![CDATA[
<h2>新增</h2>

<ul>
<li>增加导入.txt或Markdown文档到文档库功能：File &ndash;&gt; Import Files To Library&hellip;</li>
<li>增加TOC（Table of Content）支持，和是否 Render TOC 选项</li>
<li>增加免费版</li>
<li>增加sitemap功能</li>
<li>站点文件夹增加右键菜单</li>
<li>增加代码高亮功能，支持超多编程语言，1.0版本的朋友请去<a href="https://github.com/oulvhai/MWeb-Themes/">https://github.com/oulvhai/MWeb-Themes/</a>下载最新的主题即可。支持语言及缩写详细请参考：<a href="http://highlightjs.readthedocs.org/en/latest/css-classes-reference.html">http://highlightjs.readthedocs.org/en/latest/css-classes-reference.html</a></li>
</ul>

<span id="more"></span><!-- more -->

<h2>修正</h2>

<ul>
<li>即时预览功能大改进，现在是真正即时了，然后滚动时，同步的位置也比较准确了。</li>
<li>Outline跳到所在位置时高亮选中文字</li>
<li>区分大小写系统在初次打开时无法看到自带的文档问题</li>
<li>初次使用直接点Preview Site无效果问题</li>
</ul>

<h2>代码高亮功能截图</h2>

<p><img src="media/14216489427773/Snip20150119_6.png" alt="">￼￼￼￼</p>

<p><img src="media/14216489427773/Snip20150119_5.png" alt="">￼￼￼￼</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[游戏制作之路：游戏引擎选择、Mac下和Windows下UnrealEngine 4体验对比、文档及其他]]></title>
    <link href="http://coderforart.com/unrealengine4-windows-mac.html"/>
    <updated>2015-01-16T14:19:42GMT+08:00</updated>
    <id>http://coderforart.com/unrealengine4-windows-mac.html</id>
    <content type="html"><![CDATA[
<h2>UnrealEngine 4和Unity3d的选择</h2>

<p>订阅了UrealEngine4（UE4）开发者。我开始做网站用的是ASP.NET和C#，之后做网站虽然换用更方便的PHP（因为做的都是小网站）。我想说，做了长达7年的小网站就算我再水，但是C#我还是懂一些的，而Unity3d刚刚好最建议用的就是C#。C++我不懂，只在高中毕业后看了C++编程思想并把大部分例子都手打入电脑并运行。Unity3d在移动端有大量成功的案例，文档非常好，视频教程也很全，研究的人也非常多，有问题很容易找到文案等等等等，简直是好得不能再好了！但是：UE4是开源的，《游戏引擎架构》里说游戏一般都用C++，我这次学是认真的！！作为一个有追求的人也必须选UE4等等！！最后我要说的是，这些都不是我选UE4的主要原因，真相是：Unity3D好贵！月付400多，不付就马上没有全功能的，全买更贵！UE4如果你不用最新的，你只要买一个月，之后都是免费的，全功能的。虽然这点钱对于真正做产品来说，不算什么，但是对于学习了说，不一样。反正做游戏也不单单是引擎的事，然后学会了一个引擎，再学另一个，或者也就是几天的事。</p>

<span id="more"></span><!-- more -->

<h2>Mac OS X下下载和编译UnrealEngine 4</h2>

<p>UE4在github中有三个版本，我直接下载release版本的.zip（因为我用git clone太慢了）。我下载的是4.6.1版。下载完成解压后右键setup.command打开，然后还会要下载大概2G左右的东西，这个下载的速度不错。然后再右键GenerateProjectFiles.command打开。等一会儿后就生成UE4.xcodeproj了。打开UE4.xcodeproj后，选择UE4Editor-Mac，然后build，发现我下载这个版本会出错。出错是这行：</p>

<pre><code class="cpp">static bool GAllowApplePlatformSymbolication = PLATFORM_MAC &amp;&amp; IS_PROGRAM;
</code></pre>

<p>错误信息是：<code>Use of logical &#39;&amp;&amp;&#39; with constant operand</code>。<br>
我看不大懂，实在是找不到好办法，看意思他肯定是<code>true</code>，就改成：</p>

<pre><code class="cpp">static bool GAllowApplePlatformSymbolication = true;//PLATFORM_MAC &amp;&amp; IS_PROGRAM;
</code></pre>

<p>然后就编译通过了。</p>

<p>但是，我运行的时候，好慢好慢，然后xcode下打出来一堆东西，然后就挂掉了，没办法运行。。</p>

<p>我去Epic打包好的地方下载一包试试。</p>

<p>伤心了，还是一样错误，变成以下这样看看。。</p>

<pre><code class="cpp">#if PLATFORM_MAC &amp;&amp; IS_PROGRAM
static bool GAllowApplePlatformSymbolication = true;
#else
static bool GAllowApplePlatformSymbolication = false;
#endif

</code></pre>

<p>编译过了，但是一样还是没办法运行。</p>

<p>没办法了，试试4.5.1版本看看。<br>
下载后编译（方法跟4.6.1不大一样）。这次可以成功编译了。然后运行也没问题，但是好慢好慢好慢，好像我的rmbp15寸高配根本不大合适做这样的任务似的。新建项目xcode提示又出bug，我懒得管了，直接生成release版本的UE4Editor。应该会比debug版本的UE4Editor快很多吧。<del>先熟悉UE4Editor和学学Blueprints先了。C++什么的先不管先，因为太麻烦了，按照我编译后运行一下得要好久好久，估计10来分钟，如果全部编译，要大半个钟吧。。 如果改一下C++代码，还要编译后才能看到结果，那还得了。。 我直接不用学得了。（虽然可能不是这样，虽然Win下可能会快很多很多）</del> <strong>后来证明不是这样，然后如果用不到C++，UE4比想像中方便</strong></p>

<p>话说我都编译好Release版后，然后去看 Getting Started，看到这页：<a href="https://docs.unrealengine.com/latest/INT/Engine/QuickStart/4/index.html">https://docs.unrealengine.com/latest/INT/Engine/QuickStart/4/index.html</a>，发现我编译这版没有Geometry！不得已我又下载了4.1版，又编译了，然后终于可以学习了。有图有真相！左边是4.1版！<br>
<img src="media/14213891828854/14214041748379.jpg" alt="">￼￼￼￼￼￼￼</p>

<p>不得不说我耐心真好，编译好花时间 ╮(╯▽╰)╭  </p>

<p><strong>注</strong> 后来发现4.5.1版只是换了名字，BSP 就是Geometry！╮(╯▽╰)╭  </p>

<h2>Windows下编译UnrealEngine 4</h2>

<p>周未有点空，就开Windows挂着下载UE4，想试一下Window下的体验如何，因为UE4好像是Windows下优化极好的。</p>

<p>先说一下我的机器供参考：CPU:e3-1230v2  GPU:gtx660 内存:8G SSD:128G。</p>

<p>下载编译跟Mac差不多，时间上也差不多。Windows下编译4.6.1 完全没有任何出错。非常顺利！然后启动Debug版的Unreal Editor，比Mac下快很多，打开大场景也很快，很顺。试运行，很好，好得不能再好了！！但是好占空间，我随便试一下，下载三个Demo的游戏或场景，30多G空间就没了。 Mac下因为是512G所以没注意。</p>

<h2>Windows、Mac下UnrealEngine 4使用C++项目对比</h2>

<p>再试了一下新建C++的项目看看。按 <a href="https://docs.unrealengine.com/latest/INT/Programming/QuickStart/index.html">https://docs.unrealengine.com/latest/INT/Programming/QuickStart/index.html</a> 这个文档加了几行C++代码，然后从开始编译到编译成功并打开Unreal Editor，大概1分钟左右。这并非不能接受。当然，这不能跟Unity3D用C#比，那才真正快。</p>

<p>然后好奇再在Mac上试了一下（版本是4.5.1，因为4.6.1我编译不成功），新建C++项目，然后也按 <a href="https://docs.unrealengine.com/latest/INT/Programming/QuickStart/index.html">https://docs.unrealengine.com/latest/INT/Programming/QuickStart/index.html</a> 这个文档加了几行C++代码，想不到却出错了！版本不一样的原因，修正了一下，让他结果一样，然后从开始编译到编译成功并打开Unreal Editor，也是大概1分钟左右！这个结果让我惊喜了，看来是如果做场景小些的游戏，Mac下用UE4完全没问题！而我大概也是也只能是做场景小些的游戏（场景小，但是画面质量可以超高，UE4的画面比Unity3d好太多了），因为目标是丢上iPad、iPhone上玩的。上一张Mac下的图吧：</p>

<p><img src="media/14213891828854/14215892261441.jpg" alt="">￼￼￼￼￼</p>

<h2>如果用不到C++，只用Blueprints使用UnrealEngine 4的简单方法</h2>

<p>去 <a href="https://www.unrealengine.com/">https://www.unrealengine.com/</a> 登入后下载红线这个：<br>
<img src="media/14213891828854/14215898337076.jpg" alt="">￼￼￼￼</p>

<p>下载后运行并登入，会自动下载4.6.1版的Unreal Editor，如下图，点Launch就可以了，还可以下载旧版本的Unreal Editor，如右边我就下载了4.5.1版的。╮(╯▽╰)╭  ，如果我是用不到C++我花这些时间到底在折腾什么？！！！</p>

<p><img src="media/14213891828854/Snip20150118_4.png" alt="Snip20150118_4">￼￼￼￼</p>

<h2>关于UnrealEngine 4的文档和其他</h2>

<p>之前说UE4文档不如Unity3d好，但是我仔细看了，也是相当全面的，学会大概不成问题，更何况youtube上还有大量的视频可以看。C++也不成问题，按《游戏引擎架构》中说的，游戏中用到的C++不会太复杂，太复杂大不了不做那种特性就好。所以引擎部分应该不会对我产生大的难度了。但是做游戏引擎只是一小部分，最最重要部分：内容和玩法！首先说内容，这部分要学画画和3D了，而学3D软件对我来说也不成问题，只是画画目前还没有任何比较靠普的路子能成，至于动画随便弄一下然后买本《动画师生存手册》看看到底要如何了，也没有太大把握。。玩法部分，随便弄弄应该可以。因为时间不多只有一年，所以几个东西要并行学习，边学边加上引擎综合考虑。大概是这样想法先。</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb Screenshot and in Yosemite]]></title>
    <link href="http://coderforart.com/me-screenshot-and-in-yosemite.html"/>
    <updated>2015-01-07T13:46:07GMT+08:00</updated>
    <id>http://coderforart.com/me-screenshot-and-in-yosemite.html</id>
    <content type="html"><![CDATA[
<h2>Yosemite</h2>

<p><img src="media/14206095675933/yosemite-01.jpg" alt="yosemite-01">￼</p>

<span id="more"></span><!-- more -->

<p><img src="media/14206095675933/yosemite-02.jpg" alt="yosemite-02">￼</p>

<h2>All menus</h2>

<p><img src="media/14206095675933/menus.jpg" alt="menus">￼￼￼</p>

<h2>Preferences</h2>

<p><img src="media/14206095675933/preferences.jpg" alt="preferences">￼￼￼</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Custom site theme or design you owner theme]]></title>
    <link href="http://coderforart.com/custom-site-theme-detail.html"/>
    <updated>2015-01-07T14:52:03GMT+08:00</updated>
    <id>http://coderforart.com/custom-site-theme-detail.html</id>
    <content type="html"><![CDATA[
<p>I&rsquo;ll update in this month. Now you can reference <code>Octopress</code> and <code>Greyshade</code> Theme, just edit any site category and click <code>Theme: --&gt; Edit..</code> button. </p>

<p><a href="http://coderforart.com/">http://coderforart.com/</a> Theme now add to github:<a href="https://github.com/oulvhai/MWeb-Themes">https://github.com/oulvhai/MWeb-Themes</a>.</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[自定网站或博客主题简单说明]]></title>
    <link href="http://coderforart.com/custom-site-theme-detail-zh.html"/>
    <updated>2014-12-19T20:48:59GMT+08:00</updated>
    <id>http://coderforart.com/custom-site-theme-detail-zh.html</id>
    <content type="html"><![CDATA[
<p>MWeb全部主题已上传到Github: <a href="https://github.com/oulvhai/MWeb-Themes">https://github.com/oulvhai/MWeb-Themes</a>.</p>

<h2>自定首页</h2>

<p>如图，设定想要设置为首页的文档的 HTML file name 为 <code>index</code>, 选中 <code>Is page</code> 选项。<br>
<img src="media/14189904700669/14210659918568.jpg" alt="">￼￼￼￼￼￼￼</p>

<span id="more"></span><!-- more -->

<h2>自定文档页的HTML模板</h2>

<p>不选<code>Is page</code>选项时，生成HTML时读取的模板为：header.html+post.html+sidebar.html+footer.html。选中了<code>Is page</code>选项后，生成HTML时会读取的模板为：header.html+page.html+footer.html，如果要自定文档的模板，可以在主题文件夹里新增一个名称为：page-{HTML file name}.html 的页面，这样生成HTML时的读取的模板就会变成：header.html+page-{HTML file name}.html+footer.html。比如说要自定首页的模板，则在主题文件夹里新增一个名为：page-index.html 的页面即可。如 <a href="http://coderforart.com">http://coderforart.com</a> 就自定了首页，内容为：<a href="https://github.com/oulvhai/MWeb-Themes/blob/master/mweb-greyshade/page-index.html">https://github.com/oulvhai/MWeb-Themes/blob/master/mweb-greyshade/page-index.html</a> </p>

<h2>自定分类页的HTML模板</h2>

<p>分类页生成HTML时读取的模板为：header.html+category.html+sidebar.html+footer.html。 其中category.html可以自定，MWeb生成分类页的HTML时，会判定是否存在：category-{HTML file name}.html的模板，如果存在，则会优先使用category-{HTML file name}.html模板。比如说有一个分类的 HTML file name 为 Cocoa，如果要自定这个分类的分类页的模板，则只要在主题文件夹里新增一个名为：category-Cocoa.html的页面即可，MWeb生成HTML时读取模板就会变为：header.html+category-Cocoa.html+sidebar.html+footer.html。</p>

<h2>自定主题更详细的说明</h2>

<p>MWeb所有网站主题模板都放在SiteThemes这个资料夹里，一个资料夹就表示一个主题。每个主题里包含的文档和文件夹的作用如下：</p>

<ul>
<li>asset &ndash; 主题所有要用到的东西，图片、CSS、JS等等都放这里</li>
<li>archives.html &ndash; archives.html页所使用的模板</li>
<li>atom.xml &ndash; RSS所使用的模板</li>
<li>category.html &ndash; 分类所使用的模板</li>
<li>footer.html &ndash; 页面的底部</li>
<li>header.html &ndash; 页面的顶部</li>
<li>page-index.html &ndash; 自定首页模板</li>
<li>page.html &ndash; 文档选中<code>Is page</code>时所使用的模板</li>
<li>post.html &ndash; 文档不选中<code>Is page</code>所使用的模板</li>
<li>sidebar.html &ndash; 侧边栏的模板</li>
<li>sitemap.xml &ndash; 网站sitemap所使用的模板</li>
</ul>

<h2>生成HTML时传入模板页的变量说明</h2>

<h3>文档分类对象变量</h3>

<table><thead>
<tr>
<th>变量名称</th>
<th>说明</th>
</tr>
</thead><tbody>
<tr>
<td>name</td>
<td>分类的名称</td>
</tr>
<tr>
<td>url</td>
<td>分类的网址</td>
</tr>
</tbody></table>

<h3>文档对象变量</h3>

<table><thead>
<tr>
<th>变量名称</th>
<th>说明</th>
</tr>
</thead><tbody>
<tr>
<td>title</td>
<td>文章的标题，通常为第一行</td>
</tr>
<tr>
<td>desContent</td>
<td>文章的HTML格式的描述，如果文档中没有<code>&lt;!-- more --&gt;</code>则跟content一样</td>
</tr>
<tr>
<td>desContentTextOnly</td>
<td>文章的纯文字描述，不带HTML</td>
</tr>
<tr>
<td>content</td>
<td>文章的内容</td>
</tr>
<tr>
<td>date</td>
<td>文章的时间，格式按网站设定，默认为：2014/10/24</td>
</tr>
<tr>
<td>dateGTM</td>
<td>文章的时间，格式为 2014-10-24T13:54:03GMT+08:00</td>
</tr>
<tr>
<td>artDate</td>
<td>文章新增的时间，格式按网站设定，默认为：2014/10/24</td>
</tr>
<tr>
<td>cats</td>
<td>文章分类的数组，数组的对象为<code>文档分类对象变量</code></td>
</tr>
<tr>
<td>readMore</td>
<td>文章中是否有<code>&lt;!-- more --&gt;</code></td>
</tr>
<tr>
<td>url</td>
<td>文章的网址</td>
</tr>
</tbody></table>

<h3>最近文章变量</h3>

<table><thead>
<tr>
<th>变量名称</th>
<th>说明</th>
</tr>
</thead><tbody>
<tr>
<td>title</td>
<td>文章的名称</td>
</tr>
<tr>
<td>url</td>
<td>文章的网址</td>
</tr>
</tbody></table>

<h3>分类对象变量</h3>

<table><thead>
<tr>
<th>变量名称</th>
<th>说明</th>
</tr>
</thead><tbody>
<tr>
<td>name</td>
<td>分类的名称</td>
</tr>
<tr>
<td>url</td>
<td>分类的网址</td>
</tr>
<tr>
<td>count</td>
<td>分类的文章数量</td>
</tr>
</tbody></table>

<h2>生成网站</h2>

<h3>所有页面都会传入的变量</h3>

<table><thead>
<tr>
<th>变量名称</th>
<th>说明</th>
</tr>
</thead><tbody>
<tr>
<td>siteURL</td>
<td>网站设置中的网站网址</td>
</tr>
<tr>
<td>siteDomain</td>
<td>网站的域名</td>
</tr>
<tr>
<td>siteName</td>
<td>网站的名称</td>
</tr>
<tr>
<td>pageTitle</td>
<td>网站的标题</td>
</tr>
<tr>
<td>siteDes</td>
<td>网站的描述</td>
</tr>
<tr>
<td>lastBuildDate</td>
<td>网站最后生成时间</td>
</tr>
<tr>
<td>siteOther</td>
<td>网站设置中的<code>other</code></td>
</tr>
<tr>
<td>recentPosts</td>
<td>数组，数组的对象为<code>最近文章变量</code></td>
</tr>
<tr>
<td>allCategories</td>
<td>数组，数组的对象为<code>分类对象变量</code></td>
</tr>
<tr>
<td>categoriesTree</td>
<td>二层分类树，数组，数组的对象为<code>分类对象变量</code>，外加children。请参考 <a href="https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/sidebar.html">https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/sidebar.html</a></td>
</tr>
</tbody></table>

<h3>生成RSS: atom.xml</h3>

<p>读取的模板：atom.xml<br>
传入的变量：</p>

<table><thead>
<tr>
<th>变量名称</th>
<th>说明</th>
</tr>
</thead><tbody>
<tr>
<td>posts</td>
<td>数组，数组对象为<code>文档对象变量</code></td>
</tr>
</tbody></table>

<p>参考模板：<a href="https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/atom.xml">https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/atom.xml</a></p>

<h3>生成所有文章的页面</h3>

<p>读取的模板：header.html + post.html + sidebar.html + footer.html<br>
传入的变量：</p>

<table><thead>
<tr>
<th>变量名称</th>
<th>说明</th>
</tr>
</thead><tbody>
<tr>
<td>post</td>
<td>对象为<code>文档对象变量</code></td>
</tr>
<tr>
<td>postNav</td>
<td>字典，带有<code>next</code>，<code>prev</code>两个对象，对象为 <code>最近文章变量</code></td>
</tr>
</tbody></table>

<p>参考模板：<a href="https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/post.html">https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/post.html</a></p>

<h3>生成所有分类的页面</h3>

<p>读取的模板：header.html + category.html + sidebar.html + footer.html<br>
传入的变量：</p>

<table><thead>
<tr>
<th>变量名称</th>
<th>说明</th>
</tr>
</thead><tbody>
<tr>
<td>posts</td>
<td>数组，数组的对象为<code>文档对象变量</code></td>
</tr>
<tr>
<td>prevPageUrl</td>
<td>上一页的网址</td>
</tr>
<tr>
<td>nextPageUrl</td>
<td>下一页的网址</td>
</tr>
</tbody></table>

<p>参考模板：<a href="https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/category.html">https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/category.html</a></p>

<h3>生成所有文章选中<code>Is page</code>的页面</h3>

<p>读取的模板：header.html + page.html +  footer.html<br>
传入的变量：</p>

<table><thead>
<tr>
<th>变量名称</th>
<th>说明</th>
</tr>
</thead><tbody>
<tr>
<td>posts</td>
<td>数组，数组的对象为<code>文档对象变量</code></td>
</tr>
<tr>
<td>post</td>
<td>对象为<code>文档对象变量</code></td>
</tr>
</tbody></table>

<p>参考模板：<a href="https://github.com/oulvhai/MWeb-Themes/blob/master/mweb-greyshade/page-index.html">https://github.com/oulvhai/MWeb-Themes/blob/master/mweb-greyshade/page-index.html</a></p>

<h3>生成archives.html</h3>

<p>读取的模板：header.html + archives.html + footer.html<br>
传入的变量：</p>

<table><thead>
<tr>
<th>变量名称</th>
<th>说明</th>
</tr>
</thead><tbody>
<tr>
<td>posts</td>
<td>数组，数组对象请参考下表</td>
</tr>
</tbody></table>

<table><thead>
<tr>
<th>变量名称</th>
<th>说明</th>
</tr>
</thead><tbody>
<tr>
<td>year</td>
<td>文章年份</td>
</tr>
<tr>
<td>title</td>
<td>文章标题</td>
</tr>
<tr>
<td>url</td>
<td>文章网址</td>
</tr>
<tr>
<td>cats</td>
<td>文章分类的数组，数组的对象为<code>文档分类对象变量</code></td>
</tr>
<tr>
<td>date</td>
<td>文章的时间，格式按网站设定，默认为：2014/10/24</td>
</tr>
<tr>
<td>dateMonth</td>
<td>文章月份</td>
</tr>
<tr>
<td>dateDay</td>
<td>文章日期</td>
</tr>
<tr>
<td>dateYear</td>
<td>文章年份</td>
</tr>
<tr>
<td>dateGTM</td>
<td>文章的时间，格式为 2014-10-24T13:54:03GMT+08:00</td>
</tr>
<tr>
<td>artDate</td>
<td>文章新增的时间，格式按网站设定，默认为：2014/10/24</td>
</tr>
</tbody></table>

<p>参考模板：<a href="https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/archives.html">https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/archives.html</a></p>

<h3>生成sitemap.xml</h3>

<p>读取的模板：sitemap.xml<br>
传入的变量：</p>

<table><thead>
<tr>
<th>变量名称</th>
<th>说明</th>
</tr>
</thead><tbody>
<tr>
<td>archives</td>
<td>数组，数组对象请参考下表</td>
</tr>
<tr>
<td>pages</td>
<td>数组，数组对象请参考下表</td>
</tr>
<tr>
<td>nowDateGTM</td>
<td>当前时间</td>
</tr>
</tbody></table>

<table><thead>
<tr>
<th>变量名称</th>
<th>说明</th>
</tr>
</thead><tbody>
<tr>
<td>posts</td>
<td>数组，数组对象请参考下表</td>
</tr>
</tbody></table>

<table><thead>
<tr>
<th>变量名称</th>
<th>说明</th>
</tr>
</thead><tbody>
<tr>
<td>title</td>
<td>文章标题</td>
</tr>
<tr>
<td>url</td>
<td>文章网址</td>
</tr>
<tr>
<td>date</td>
<td>文章的时间，格式按网站设定，默认为：2014/10/24</td>
</tr>
<tr>
<td>dateGTM</td>
<td>文章的时间，格式为 2014-10-24T13:54:03GMT+08:00</td>
</tr>
<tr>
<td>artDate</td>
<td>文章新增的时间，格式按网站设定，默认为：2014/10/24</td>
</tr>
</tbody></table>

<p>参考模板：<a href="https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/sitemap.xml">https://github.com/oulvhai/MWeb-Themes/blob/master/octopress/sitemap.xml</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Help and introduction for MWeb]]></title>
    <link href="http://coderforart.com/mweb.html"/>
    <updated>2014-12-19T13:08:02GMT+08:00</updated>
    <id>http://coderforart.com/mweb.html</id>
    <content type="html"><![CDATA[
<h2>MWeb Help</h2>

<h3>Markdown syntax guide</h3>

<p><a href="markdown-syntax-guide-suggest-version.html">Markdown syntax guide suggest version</a><br>
<a href="markdown-syntax-guide-full-version.html">Markdown syntax guide full version</a></p>

<h3>MWeb Q &amp; A</h3>

<p><a href="mweb-qa.html">MWeb Q &amp; A</a><br>
If you can&rsquo;t find the answer, please send feedback to me: Help &ndash;&gt; Send Feedback</p>

<h3>Some may useful articles</h3>

<p><a href="custom-site-theme-detail.html">Custom site theme or design you owner theme&hellip;</a><br>
<a href="me-screenshot-and-in-yosemite.html">MWeb Screenshot and in Yosemite</a></p>

<h2>Introduction MWeb</h2>

<p>MWeb is a markdown editor for static websites and blogs on OS X, like <a href="http://octopress.org/">Octopress</a> or <a href="http://jekyllrb.com/">Jekyll</a> but easy to use. You can write document with markdown,drag &amp; drop or paste photos to the editor, MWeb will automatically add markdown code and display photos in editor. You can choose some categories to organize the document, and build static websites and blogs <strong>One Click</strong>.</p>

<p><img src="media/14189656825627/MWeb.jpg" alt="MWeb">￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼</p>

<span id="more"></span><!-- more -->

<p style="text-align:center">
<a href="http://itunes.apple.com/us/app/mweb-markdown-editor-for-static/id954188948?ls=1&mt=12" target="_blank"><img src="media/14195170907881/icon_apple_store-download-small.png" width="180" /></a>
</p>

<h2>A markdown editor</h2>

<p>MWeb is a markdown editor suport markdown syntax highlight, preview,syntax highlighting in fenced code blocks,math ML,export to HTML/PDF, custom editor theme, words counter, outline, autosave, full document versions and more.. It has two pattern:</p>

<ol>
<li>Library pattern, you can organize document with categories,drag &amp; drop or paste photos to the editor and display. You can build static websites and blogs. <code>CMD + L</code> to show the Library pattern. </li>
<li>Not library pattern, it just like <code>TextEdit</code> but has full markdown suport like syntax highlight, preview, outline etc..</li>
</ol>

<p>￼￼￼￼￼￼￼￼￼￼￼￼<img src="media/14189656825627/MWeb-markdown-editor.jpg" alt="MWeb-markdown-editor">￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼</p>

<h2>Drag &amp; drop or paste photos to the editor and display</h2>

<p>Drag &amp; drop or paste photo to the editor, the markdown code will automatically add and the photo will display in editor.</p>

<p>￼￼￼￼￼￼￼￼￼<img src="media/14189656825627/MWeb-inset-photo.jpg" alt="MWeb-inset-photo">￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼<br>
￼￼￼￼￼￼￼￼￼￼￼￼</p>

<h2>Easy to build static websites and blogs</h2>

<p>Selected a category &ndash;&gt; Set to site, setting site name and description and just click <code>Build site</code>. click <code>Clear and rebuild site</code> button when the Theme is change. click <code>Preview site</code> button to preview. Just double click <code>Coder For Art</code> category and try.</p>

<p>￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼<img src="media/14189656825627/MWeb-build-static-websites-and-blogs.jpg" alt="MWeb-build-static-websites-and-blogs">￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼</p>

<p>More info, please read this post: <a href="custom-site-theme-detail.html">Custom site theme or design you owner theme&hellip;</a></p>

<h2>Three view pattern</h2>

<p>Editor Only:<code>CMD + 1</code>, Two Panes:<code>CMD + 2</code>, Three Panes:<code>CMD + 3</code>. The editor area will not resize when the view pattern change.</p>

<p>￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼<img src="media/14189656825627/MWeb-view-pattern.jpg" alt="MWeb-view-pattern">￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼</p>

<h2>Preview, Share,Save as PDF, More Screenshot</h2>

<p>Preview：<code>CMD + R</code>，Close Preview：<code>CMD + W</code> </p>

<p>￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼<img src="media/14189656825627/MWeb-preview-share.jpg" alt="MWeb-preview-share">￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼</p>

<p>Save as PDF: Difference between in editor share button and Preview share button.</p>

<p>More Screenshot: <a href="me-screenshot-and-in-yosemite.html">MWeb Screenshot and in Yosemite</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MWeb帮助及简介]]></title>
    <link href="http://coderforart.com/mweb-zh.html"/>
    <updated>2014-12-17T11:38:19GMT+08:00</updated>
    <id>http://coderforart.com/mweb-zh.html</id>
    <content type="html"><![CDATA[
<h2>MWeb帮助</h2>

<h3>如果您不知道什么是Markdown，请阅读以下两篇文章</h3>

<p><a href="markdown-syntax-guide-suggest-version-zh.html">Markdown 语法简单说明</a><br>
<a href="markdown-syntax-guide-full-version-zh.html">Markdown 语法官方说明繁体中文版</a></p>

<h3>MWeb所有问题和回答收集（会不断更新）</h3>

<p><a href="mweb-qa-zh.html">MWeb问题和回答</a><br>
如果您在上面的连接中找不到答案，请在MWeb中点：Help &ndash;&gt; Send Feedback 写信给我！</p>

<h3>MWeb其他可能有用的文章</h3>

<p><a href="custom-site-theme-detail-zh.html">自定网站主题、增加评论和分享和设计新主题&hellip;</a><br>
<a href="me-screenshot-and-in-yosemite.html">MWeb更多截图和在Yosemite下的效果</a></p>

<h2>MWeb简介</h2>

<p>MWeb是一个Markdown编辑器和全静态网站、博客生成工具，像<a href="http://octopress.org/">Octopress</a>和 <a href="http://jekyllrb.com/">Jekyll</a>，但是更简单易用。MWeb不仅仅是一个好用的Markdown编辑器，它专门为用Markdown写文章并且要发布成网站、博客的这一类用户优化。一般的场景为：想写文章时，随意选一个分类或不选分类开始写，当某天想把文章发布出来时，只需要选择一下要发布的网站分类的任一分类，点<code>Build site</code>即可生成全静态网站。全静态网站相比PHP等网站，除了速度超快之外，更节省时间精力，可以有更多的时间关心内容和生活。MWeb也专门为喜欢写教程类的用户优化，比如拖拽或粘贴即可插入图片，Fenced code blocks和代码高亮支持这几个很方便实用的功能。</p>

<p><img src="media/14189656825627/MWeb.jpg" alt="MWeb">￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼</p>

<span id="more"></span><!-- more -->

<p style="text-align:center">
<a href="http://itunes.apple.com/cn/app/mweb-markdown-editor-for-static/id954188948?ls=1&mt=12" target="_blank"><img src="media/14195170907881/icon_apple_store-download-small.png" width="180" /></a>
</p>

<h2>MWeb的Markdown编辑功能</h2>

<p>首先MWeb必须是一个好用的Markdown编辑器，语法高亮，预览，Fenced code blocks和代码高亮支持，Math ML支持，导出HTML/PDF，自定编辑器主题，字数统计，大纲视图，autosave,文档历史版本什么的等等都是要有的。另外MWeb分为两种模式：</p>

<ul>
<li>一种是由MWeb管理的库文档模式，这种模式下可以用分类管理文档，可以拖拽插入图片，可以生成全静态网站。</li>
<li>一种是外部文文件模式，文件夹的Markdown文檔直接用MWeb打开就是这种模式，区别是无拖拽插入图片功能，不能生成网站。</li>
</ul>

<p>￼￼￼￼￼￼￼￼￼￼￼￼<img src="media/14189656825627/MWeb-markdown-editor.jpg" alt="MWeb-markdown-editor">￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼</p>

<h2>插入图片并显示在编辑器内</h2>

<p>MWeb的设计就是为了能方便地用Markdown记日记、简单的管理日记并生成博客。而写日记时插入图片的功能是经常用到的。一般的Markdown工具如果要插入图片，要先丢到网上。像Ulysses是可以方便插入图片，但是要双击或者预览时才能看到。MWeb设计成可拖拽或直接粘贴即可插入图片并显示出来，以方便查看。</p>

<p>￼￼￼￼￼￼￼￼￼<img src="media/14189656825627/MWeb-inset-photo.jpg" alt="MWeb-inset-photo">￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼<br>
￼￼￼￼￼￼￼￼￼￼￼</p>

<h2>一键将分类生成全静态的网站和博客</h2>

<p>MWeb的分类管理的设计跟博客的结构差不多，一个文档可以选择多个分类。将分类变成博客的方法为：选择该分类 &ndash;&gt; Set to site。设定好博客的名称和描述等等，点：<code>Build site</code> 按钮即可。如果有改动到 <code>Theme</code> 或者有任何没有在预料之中的结果，试试点 <code>Clear and rebuild site</code> 按钮。 点 <code>Preview site</code> 按钮可以预览生成的博客。<a href="http://coderforart.com/">http://coderforart.com/</a> 网站就是用MWeb生成的。</p>

<p><img src="media/14189656825627/MWeb-build-static-websites-and-blogs.jpg" alt="MWeb-build-static-websites-and-blogs">￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼</p>

<p>MWeb还可以自定网站和博客主题，增加评论和分享功能，请参考这个网址: <a href="custom-site-theme-detail-zh.html">自定网站主题、增加评论和分享和设计新主题&hellip;</a></p>

<h2>三种视图模式、改变视图时编辑器大小会固定</h2>

<p>Editor Only:<code>CMD + 1</code>, Two Pane:<code>CMD + 2</code>, There Pane:<code>CMD + 3</code>。我觉得改变视图时，编辑器区域大小也同时改变不大爽，所以改变视图时就直接改变窗口大小，而编辑器区域大小会保持不变。</p>

<p>￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼<img src="media/14189656825627/MWeb-view-pattern.jpg" alt="MWeb-view-pattern">￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼</p>

<h2>预览、分享功能，更多截图</h2>

<p>预览快捷键：<code>CMD + R</code>，关闭预览：<code>CMD + W</code> </p>

<p><img src="media/14189656825627/MWeb-preview-share.jpg" alt="MWeb-preview-share">￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼</p>

<p>更多截图: <a href="me-screenshot-and-in-yosemite.html">MWeb更多截图和在Yosemite下的效果</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Insert photos and display in editor]]></title>
    <link href="http://coderforart.com/insert-photos-and-display-in-editor.html"/>
    <updated>2014-12-22T15:45:39GMT+08:00</updated>
    <id>http://coderforart.com/insert-photos-and-display-in-editor.html</id>
    <content type="html"><![CDATA[
<p>Drag &amp; drop photo or paste to the editor, the markdown code will add automatically and the photo will display in editor.</p>

<span id="more"></span><!-- more -->

<p><img src="media/14187874991645/716_max.jpg" alt="716_max">￼￼￼￼￼￼</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[插入图片并显示在编辑器内]]></title>
    <link href="http://coderforart.com/insert-photos-and-display-in-editor-zh.html"/>
    <updated>2014-12-17T11:59:52GMT+08:00</updated>
    <id>http://coderforart.com/insert-photos-and-display-in-editor-zh.html</id>
    <content type="html"><![CDATA[
<p>拖拽图片（支持多张）到编辑器或者直接用粘贴即可插入图片，图片会直接显示在编辑器里（也可设定不显示），像这样：</p>

<span id="more"></span><!-- more -->

<p><img src="media/14187874991645/716_max.jpg" alt="716_max">￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼￼</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Markdown syntax guide suggest version]]></title>
    <link href="http://coderforart.com/markdown-syntax-guide-suggest-version.html"/>
    <updated>2014-12-16T19:08:31GMT+08:00</updated>
    <id>http://coderforart.com/markdown-syntax-guide-suggest-version.html</id>
    <content type="html"><![CDATA[
<h2>Headers</h2>

<pre><code># This is an `&lt;h1&gt;` tag
## This is an `&lt;h2&gt;` tag
###### This is an `&lt;h6&gt;` tag
</code></pre>

<span id="more"></span><!-- more -->

<h1>This is an <code>&lt;h1&gt;</code> tag</h1>

<h2>This is an <code>&lt;h2&gt;</code> tag</h2>

<h6>This is an <code>&lt;h6&gt;</code> tag</h6>

<h2>Emphasis</h2>

<pre><code>*This text will be italic*
_This will also be italic_

**This text will be bold**
__This will also be bold__

*You **can** combine them*
</code></pre>

<p><em>This text will be italic</em><br>
<u>This will also be italic</u></p>

<p><strong>This text will be bold</strong><br>
<strong>This will also be bold</strong></p>

<p><em>You *</em>can** combine them*</p>

<h2>Newlines</h2>

<p>End a line with two or more spaces + enter.<br>
Just typing enter to newline,please set：MWeb &ndash;&gt; Preferences &ndash;&gt; Themes &ndash;&gt; Translate newlines to <code>&lt;br&gt;</code> tags is On(default is On)</p>

<h2>Lists</h2>

<h3>Unordered</h3>

<pre><code>* Item 1 unordered list `* + SPACE`
* Item 2
    * Item 2a unordered list `* + TAB + SPACE`
    * Item 2b
</code></pre>

<ul>
<li>Item 1 unordered list <code>* + SPACE</code></li>
<li>Item 2

<ul>
<li>Item 2a unordered list <code>* + TAB + SPACE</code></li>
<li>Item 2b</li>
</ul></li>
</ul>

<h3>Ordered</h3>

<pre><code>1. Item 1 ordered list `Number + . + SPACE`
2. Item 2 
3. Item 3
    1. Item 3a ordered list `Number + . + TAB + SPACE`
    2. Item 3b
</code></pre>

<ol>
<li>Item 1 ordered list <code>Number + . + SPACE</code></li>
<li>Item 2 </li>
<li>Item 3

<ol>
<li>Item 3a ordered list <code>Number + . + TAB + SPACE</code></li>
<li>Item 3b</li>
</ol></li>
</ol>

<h2>Images</h2>

<pre><code>![GitHub set up](https://help.github.com/assets/images/site/set-up-git.gif)
Format: ![Alt Text](url)
</code></pre>

<p><img src="https://help.github.com/assets/images/site/set-up-git.gif" alt="GitHub set up"><br>
Format: <img src="url" alt="Alt Text"></p>

<h2>Links</h2>

<pre><code>email &lt;example@example.com&gt;
[GitHub](http://github.com)
autolink  &lt;http://www.github.com/&gt;
</code></pre>

<p>An email <a href="mailto:example@example.com">example@example.com</a> link.<br>
<a href="http://github.com">GitHub</a><br>
Automatic linking for URLs<br>
Any URL (like <a href="http://www.github.com/">http://www.github.com/</a>) will be automatically converted into a clickable link.</p>

<h2>Blockquotes</h2>

<pre><code>As Kanye West said:
&gt; We&#39;re living the future so
&gt; the present is our past.
</code></pre>

<p>As Kanye West said:</p>

<blockquote>
<p>We&rsquo;re living the future so<br>
the present is our past.</p>
</blockquote>

<h2>Inline code</h2>

<pre><code>I think you should use an
`&lt;addr&gt;` `code` element here instead.
</code></pre>

<p>I think you should use an<br>
<code>&lt;addr&gt;</code> <code>code</code> element here instead.</p>

<h2>Multi-line code</h2>

<pre><code>```js
function fancyAlert(arg) {
  if(arg) {
    $.facebox({div:&#39;#foo&#39;})
  }

}
```
</code></pre>

<pre><code class="js">function fancyAlert(arg) {
  if(arg) {
    $.facebox({div:&#39;#foo&#39;})
  }

}
</code></pre>

<h2>Tables</h2>

<pre><code>First Header | Second Header
------------ | -------------
Content from cell 1 | Content from cell 2
Content in the first column | Content in the second column
</code></pre>

<p>You can create tables by assembling a list of words and dividing them with hyphens - (for the first row), and then separating each column with a pipe |:</p>

<table><thead>
<tr>
<th>First Header</th>
<th>Second Header</th>
</tr>
</thead><tbody>
<tr>
<td>Content from cell 1</td>
<td>Content from cell 2</td>
</tr>
<tr>
<td>Content in the first column</td>
<td>Content in the second column</td>
</tr>
</tbody></table>

<h2>Strikethrough</h2>

<pre><code> (like ~~this~~)
</code></pre>

<p>Any word wrapped with two tildes (like <del>this</del>) will appear crossed out.</p>

<h2>Horizontal Rules</h2>

<p>Following lines will produce a horizontal rule:</p>

<pre><code>***

*****

- - -
</code></pre>

<hr>

<hr>

<hr>

<h2>Comment And Read More..</h2>

<!-- comment -->

<!-- more -->

<p>Actions-&gt;Insert Read More Comment <em>OR</em> <code>CMD + .</code></p>

<h2>Reference:</h2>

<p><a href="https://guides.github.com/features/mastering-markdown/">https://guides.github.com/features/mastering-markdown/</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Markdown 语法简单说明]]></title>
    <link href="http://coderforart.com/markdown-syntax-guide-suggest-version-zh.html"/>
    <updated>2014-12-16T21:57:10GMT+08:00</updated>
    <id>http://coderforart.com/markdown-syntax-guide-suggest-version-zh.html</id>
    <content type="html"><![CDATA[
<h2>标题</h2>

<pre><code># 第一级标题 `&lt;h1&gt;` 
## 第二级标题 `&lt;h2&gt;` 
###### 第六级标题 `&lt;h6&gt;` 
</code></pre>

<span id="more"></span><!-- more -->

<h1>第一级标题 <code>&lt;h1&gt;</code></h1>

<h2>第二级标题 <code>&lt;h2&gt;</code></h2>

<h6>第六级标题 <code>&lt;h6&gt;</code></h6>

<!-- more -->

<h2>强调</h2>

<pre><code>*这些文字会生成`&lt;em&gt;`*
_这些文字会生成`&lt;u&gt;`_

**这些文字会生成`&lt;strong&gt;`**
__这些文字会生成`&lt;strong&gt;`__
</code></pre>

<p><em>这些文字会生成<code>&lt;em&gt;</code></em><br>
<u>这些文字会生成<code>&lt;u&gt;</code></u></p>

<p><strong>这些文字会生成<code>&lt;strong&gt;</code></strong><br>
<strong>这些文字会生成<code>&lt;strong&gt;</code></strong></p>

<h2>换行</h2>

<p>四个及以上空格加回车。<br>
如果不想打这么多空格，只要回车就为换行，请勾选：MWeb&ndash;&gt;Preferences&ndash;&gt;Themes&ndash;&gt;Translate newlines to <code>&lt;br&gt;</code> tags</p>

<h2>列表</h2>

<h3>无序列表</h3>

<pre><code>* 项目一 无序列表 `* + 空格键`
* 项目二
    * 项目二的子项目一 无序列表 `* + TAB + 空格键`
    * 项目二的子项目二
</code></pre>

<ul>
<li>项目一 无序列表 <code>* + 空格键</code></li>
<li>项目二

<ul>
<li>项目二的子项目一 无序列表 <code>* + TAB + 空格键</code></li>
<li>项目二的子项目二</li>
</ul></li>
</ul>

<h3>有序列表</h3>

<pre><code>1. 项目一 有序列表 `数字 + . + 空格键`
2. 项目二 
3. 项目三
    1. 项目三的子项目一 有序列表 `数字 + . + TAB + 空格键`
    2. 项目三的子项目二
</code></pre>

<ol>
<li>项目一 有序列表 <code>数字 + . + 空格键</code></li>
<li>项目二 </li>
<li>项目三

<ol>
<li>项目三的子项目一 有序列表 <code>数字 + . + TAB + 空格键</code></li>
<li>项目三的子项目二</li>
</ol></li>
</ol>

<h2>图片</h2>

<pre><code>![GitHub set up](https://help.github.com/assets/images/site/set-up-git.gif)
格式: ![Alt Text](url)
</code></pre>

<p><img src="https://help.github.com/assets/images/site/set-up-git.gif" alt="GitHub set up"><br>
格式: <img src="url" alt="Alt Text"></p>

<h2>链接</h2>

<pre><code>email &lt;example@example.com&gt;
[GitHub](http://github.com)
自动生成连接  &lt;http://www.github.com/&gt;
</code></pre>

<p>Email 连接： <a href="mailto:example@example.com">example@example.com</a><br>
<a href="http://github.com">连接标题Github网站</a><br>
自动生成连接像： <a href="http://www.github.com/">http://www.github.com/</a> 这样</p>

<h2>区块引用</h2>

<pre><code>某某说:
&gt; 第一行引用
&gt; 第二行费用文字
</code></pre>

<p>某某说:</p>

<blockquote>
<p>第一行引用<br>
第二行费用文字</p>
</blockquote>

<h2>行内代码</h2>

<pre><code>像这样即可：`&lt;addr&gt;` `code`
</code></pre>

<p>像这样即可：<code>&lt;addr&gt;</code> <code>code</code></p>

<h2>多行或者一段代码</h2>

<pre><code>```js
function fancyAlert(arg) {
  if(arg) {
    $.facebox({div:&#39;#foo&#39;})
  }

}
```
</code></pre>

<pre><code class="js">function fancyAlert(arg) {
    if(arg) {
        $.facebox({div:&#39;#foo&#39;})
    }

}
</code></pre>

<h2>表格</h2>

<pre><code>第一格表头 | 第二格表头
--------- | -------------
内容单元格 第一列第一格 | 内容单元格第二列第一格
内容单元格 第一列第二格 多加文字 | 内容单元格第二列第二格
</code></pre>

<p>以下即会生成一个表格：</p>

<table><thead>
<tr>
<th>第一格表头</th>
<th>第二格表头</th>
</tr>
</thead><tbody>
<tr>
<td>内容单元格 第一列第一格</td>
<td>内容单元格第二列第一格</td>
</tr>
<tr>
<td>内容单元格 第一列第二格 多加文字</td>
<td>内容单元格第二列第二格</td>
</tr>
</tbody></table>

<h2>删除线</h2>

<pre><code>加删除线像这样用： ~~删除这些~~
</code></pre>

<p>加删除线像这样用： <del>删除这些</del></p>

<h2>分隔线</h2>

<p>以下三种方式都可以生成分隔线：</p>

<pre><code>***

*****

- - -
</code></pre>

<hr>

<hr>

<hr>

<h2>注释和阅读更多</h2>

<!-- comment -->

<!-- more -->

<p>Actions-&gt;Insert Read More Comment <em>或者</em> <code>Command + .</code><br>
<strong>注</strong> 阅读更多的功能只用在生成网站或博客时。</p>

<h2>此文参考:</h2>

<p><a href="https://guides.github.com/features/mastering-markdown/">https://guides.github.com/features/mastering-markdown/</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Markdown syntax guide full version]]></title>
    <link href="http://coderforart.com/markdown-syntax-guide-full-version.html"/>
    <updated>2014-12-16T20:10:44GMT+08:00</updated>
    <id>http://coderforart.com/markdown-syntax-guide-full-version.html</id>
    <content type="html"><![CDATA[
<ul>
<li><a href="#overview">Overview</a>

<ul>
<li><a href="#philosophy">Philosophy</a></li>
<li><a href="#html">Inline HTML</a></li>
<li><a href="#autoescape">Automatic Escaping for Special Characters</a></li>
</ul></li>
<li><a href="#block">Block Elements</a>

<ul>
<li><a href="#p">Paragraphs and Line Breaks</a></li>
<li><a href="#header">Headers</a></li>
<li><a href="#blockquote">Blockquotes</a></li>
<li><a href="#list">Lists</a></li>
<li><a href="#precode">Code Blocks</a></li>
<li><a href="#hr">Horizontal Rules</a></li>
</ul></li>
<li><a href="#span">Span Elements</a>

<ul>
<li><a href="#link">Links</a></li>
<li><a href="#em">Emphasis</a></li>
<li><a href="#code">Code</a></li>
<li><a href="#img">Images</a></li>
</ul></li>
<li><a href="#misc">Miscellaneous</a>

<ul>
<li><a href="#backslash">Backslash Escapes</a></li>
<li><a href="#autolink">Automatic Links</a></li>
</ul></li>
</ul>

<span id="more"></span><!-- more -->

<p><strong>Note:</strong> This document is itself written using Markdown; you<br>
can <a href="/projects/markdown/syntax.text">see the source for it by adding &lsquo;.text&rsquo; to the URL</a>.</p>

<hr>

<h2>Overview</h2>

<p><a id="overview"></a></p>

<h3>Philosophy</h3>

<p><a id="philosophy"></a></p>

<p>Markdown is intended to be as easy-to-read and easy-to-write as is feasible.</p>

<p>Readability, however, is emphasized above all else. A Markdown-formatted<br>
document should be publishable as-is, as plain text, without looking<br>
like it&rsquo;s been marked up with tags or formatting instructions. While<br>
Markdown&rsquo;s syntax has been influenced by several existing text-to-HTML<br>
filters &ndash; including <a href="http://docutils.sourceforge.net/mirror/setext.html">Setext</a>, <a href="http://www.aaronsw.com/2002/atx/">atx</a>, <a href="http://textism.com/tools/textile/">Textile</a>, <a href="http://docutils.sourceforge.net/rst.html">reStructuredText</a>,<br>
<a href="http://www.triptico.com/software/grutatxt.html">Grutatext</a>, and <a href="http://ettext.taint.org/doc/">EtText</a> &ndash; the single biggest source of<br>
inspiration for Markdown&rsquo;s syntax is the format of plain text email.</p>

<p>To this end, Markdown&rsquo;s syntax is comprised entirely of punctuation<br>
characters, which punctuation characters have been carefully chosen so<br>
as to look like what they mean. E.g., asterisks around a word actually<br>
look like *emphasis*. Markdown lists look like, well, lists. Even<br>
blockquotes look like quoted passages of text, assuming you&rsquo;ve ever<br>
used email.</p>

<h3>Inline HTML</h3>

<p><a id="html"></a></p>

<p>Markdown&rsquo;s syntax is intended for one purpose: to be used as a<br>
format for <em>writing</em> for the web.</p>

<p>Markdown is not a replacement for HTML, or even close to it. Its<br>
syntax is very small, corresponding only to a very small subset of<br>
HTML tags. The idea is <em>not</em> to create a syntax that makes it easier<br>
to insert HTML tags. In my opinion, HTML tags are already easy to<br>
insert. The idea for Markdown is to make it easy to read, write, and<br>
edit prose. HTML is a <em>publishing</em> format; Markdown is a <em>writing</em><br>
format. Thus, Markdown&rsquo;s formatting syntax only addresses issues that<br>
can be conveyed in plain text.</p>

<p>For any markup that is not covered by Markdown&rsquo;s syntax, you simply<br>
use HTML itself. There&rsquo;s no need to preface it or delimit it to<br>
indicate that you&rsquo;re switching from Markdown to HTML; you just use<br>
the tags.</p>

<p>The only restrictions are that block-level HTML elements &ndash; e.g. <code>&lt;div&gt;</code>,<br>
<code>&lt;table&gt;</code>, <code>&lt;pre&gt;</code>, <code>&lt;p&gt;</code>, etc. &ndash; must be separated from surrounding<br>
content by blank lines, and the start and end tags of the block should<br>
not be indented with tabs or spaces. Markdown is smart enough not<br>
to add extra (unwanted) <code>&lt;p&gt;</code> tags around HTML block-level tags.</p>

<p>For example, to add an HTML table to a Markdown article:</p>

<pre><code>This is a regular paragraph.

&lt;table&gt;
    &lt;tr&gt;
        &lt;td&gt;Foo&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

This is another regular paragraph.
</code></pre>

<p>Note that Markdown formatting syntax is not processed within block-level<br>
HTML tags. E.g., you can&rsquo;t use Markdown-style <code>*emphasis*</code> inside an<br>
HTML block.</p>

<p>Span-level HTML tags &ndash; e.g. <code>&lt;span&gt;</code>, <code>&lt;cite&gt;</code>, or <code>&lt;del&gt;</code> &ndash; can be<br>
used anywhere in a Markdown paragraph, list item, or header. If you<br>
want, you can even use HTML tags instead of Markdown formatting; e.g. if<br>
you&rsquo;d prefer to use HTML <code>&lt;a&gt;</code> or <code>&lt;img&gt;</code> tags instead of Markdown&rsquo;s<br>
link or image syntax, go right ahead.</p>

<p>Unlike block-level HTML tags, Markdown syntax <em>is</em> processed within<br>
span-level tags.</p>

<h3>Automatic Escaping for Special Characters</h3>

<p><a id="autoescape"></a></p>

<p>In HTML, there are two characters that demand special treatment: <code>&lt;</code><br>
and <code>&amp;</code>. Left angle brackets are used to start tags; ampersands are<br>
used to denote HTML entities. If you want to use them as literal<br>
characters, you must escape them as entities, e.g. <code>&amp;lt;</code>, and<br>
<code>&amp;amp;</code>.</p>

<p>Ampersands in particular are bedeviling for web writers. If you want to<br>
write about &lsquo;AT&amp;T&rsquo;, you need to write &lsquo;<code>AT&amp;amp;T</code>&rsquo;. You even need to<br>
escape ampersands within URLs. Thus, if you want to link to:</p>

<pre><code>http://images.google.com/images?num=30&amp;q=larry+bird
</code></pre>

<p>you need to encode the URL as:</p>

<pre><code>http://images.google.com/images?num=30&amp;amp;q=larry+bird
</code></pre>

<p>in your anchor tag <code>href</code> attribute. Needless to say, this is easy to<br>
forget, and is probably the single most common source of HTML validation<br>
errors in otherwise well-marked-up web sites.</p>

<p>Markdown allows you to use these characters naturally, taking care of<br>
all the necessary escaping for you. If you use an ampersand as part of<br>
an HTML entity, it remains unchanged; otherwise it will be translated<br>
into <code>&amp;amp;</code>.</p>

<p>So, if you want to include a copyright symbol in your article, you can write:</p>

<pre><code>&amp;copy;
</code></pre>

<p>and Markdown will leave it alone. But if you write:</p>

<pre><code>AT&amp;T
</code></pre>

<p>Markdown will translate it to:</p>

<pre><code>AT&amp;amp;T
</code></pre>

<p>Similarly, because Markdown supports <a href="#html">inline HTML</a>, if you use<br>
angle brackets as delimiters for HTML tags, Markdown will treat them as<br>
such. But if you write:</p>

<pre><code>4 &lt; 5
</code></pre>

<p>Markdown will translate it to:</p>

<pre><code>4 &amp;lt; 5
</code></pre>

<p>However, inside Markdown code spans and blocks, angle brackets and<br>
ampersands are <em>always</em> encoded automatically. This makes it easy to use<br>
Markdown to write about HTML code. (As opposed to raw HTML, which is a<br>
terrible format for writing about HTML syntax, because every single <code>&lt;</code><br>
and <code>&amp;</code> in your example code needs to be escaped.)</p>

<hr>

<h2>Block Elements</h2>

<p><a id="block"></a></p>

<h3>Paragraphs and Line Breaks</h3>

<p><a id="p"></a></p>

<p>A paragraph is simply one or more consecutive lines of text, separated<br>
by one or more blank lines. (A blank line is any line that looks like a<br>
blank line &ndash; a line containing nothing but spaces or tabs is considered<br>
blank.) Normal paragraphs should not be indented with spaces or tabs.</p>

<p>The implication of the <q>one or more consecutive lines of text</q> rule is<br>
that Markdown supports <q>hard-wrapped</q> text paragraphs. This differs<br>
significantly from most other text-to-HTML formatters (including Movable<br>
Type&rsquo;s <q>Convert Line Breaks</q> option) which translate every line break<br>
character in a paragraph into a <code>&lt;br /&gt;</code> tag.</p>

<p>When you <em>do</em> want to insert a <code>&lt;br /&gt;</code> break tag using Markdown, you<br>
end a line with two or more spaces, then type return.</p>

<p>Yes, this takes a tad more effort to create a <code>&lt;br /&gt;</code>, but a simplistic<br>
<q>every line break is a `<br />`</q> rule wouldn&rsquo;t work for Markdown.<br>
Markdown&rsquo;s email-style <a href="#blockquote">blockquoting</a> and multi-paragraph <a href="#list">list items</a><br>
work best &ndash; and look better &ndash; when you format them with hard breaks.</p>

<h3>Headers</h3>

<p><a id="header"></a></p>

<p>Markdown supports two styles of headers, <a href="http://docutils.sourceforge.net/mirror/setext.html">Setext</a> and <a href="http://www.aaronsw.com/2002/atx/">atx</a>.</p>

<p>Setext-style headers are <q>underlined</q> using equal signs (for first-level<br>
headers) and dashes (for second-level headers). For example:</p>

<pre><code>This is an H1
=============

This is an H2
-------------
</code></pre>

<p>Any number of underlining <code>=</code>&rsquo;s or <code>-</code>&rsquo;s will work.</p>

<p>Atx-style headers use 1-6 hash characters at the start of the line,<br>
corresponding to header levels 1-6. For example:</p>

<pre><code># This is an H1

## This is an H2

###### This is an H6
</code></pre>

<p>Optionally, you may <q>close</q> atx-style headers. This is purely<br>
cosmetic &ndash; you can use this if you think it looks better. The<br>
closing hashes don&rsquo;t even need to match the number of hashes<br>
used to open the header. (The number of opening hashes<br>
determines the header level.) :</p>

<pre><code># This is an H1 #

## This is an H2 ##

### This is an H3 ######
</code></pre>

<h3>Blockquotes</h3>

<p><a id="blockquote"></a></p>

<p>Markdown uses email-style <code>&gt;</code> characters for blockquoting. If you&rsquo;re<br>
familiar with quoting passages of text in an email message, then you<br>
know how to create a blockquote in Markdown. It looks best if you hard<br>
wrap the text and put a <code>&gt;</code> before every line:</p>

<pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
&gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.
&gt; 
&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
&gt; id sem consectetuer libero luctus adipiscing.
</code></pre>

<p>Markdown allows you to be lazy and only put the <code>&gt;</code> before the first<br>
line of a hard-wrapped paragraph:</p>

<pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.

&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
id sem consectetuer libero luctus adipiscing.
</code></pre>

<p>Blockquotes can be nested (i.e. a blockquote-in-a-blockquote) by<br>
adding additional levels of <code>&gt;</code>:</p>

<pre><code>&gt; This is the first level of quoting.
&gt;
&gt; &gt; This is nested blockquote.
&gt;
&gt; Back to the first level.
</code></pre>

<p>Blockquotes can contain other Markdown elements, including headers, lists,<br>
and code blocks:</p>

<pre><code>&gt; ## This is a header.
&gt; 
&gt; 1.   This is the first list item.
&gt; 2.   This is the second list item.
&gt; 
&gt; Here&#39;s some example code:
&gt; 
&gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);
</code></pre>

<p>Any decent text editor should make email-style quoting easy. For<br>
example, with BBEdit, you can make a selection and choose Increase<br>
Quote Level from the Text menu.</p>

<h3>Lists</h3>

<p><a id="list"></a></p>

<p>Markdown supports ordered (numbered) and unordered (bulleted) lists.</p>

<p>Unordered lists use asterisks, pluses, and hyphens &ndash; interchangably<br>
&ndash; as list markers:</p>

<pre><code>*   Red
*   Green
*   Blue
</code></pre>

<p>is equivalent to:</p>

<pre><code>+   Red
+   Green
+   Blue
</code></pre>

<p>and:</p>

<pre><code>-   Red
-   Green
-   Blue
</code></pre>

<p>Ordered lists use numbers followed by periods:</p>

<pre><code>1.  Bird
2.  McHale
3.  Parish
</code></pre>

<p>It&rsquo;s important to note that the actual numbers you use to mark the<br>
list have no effect on the HTML output Markdown produces. The HTML<br>
Markdown produces from the above list is:</p>

<pre><code>&lt;ol&gt;
&lt;li&gt;Bird&lt;/li&gt;
&lt;li&gt;McHale&lt;/li&gt;
&lt;li&gt;Parish&lt;/li&gt;
&lt;/ol&gt;
</code></pre>

<p>If you instead wrote the list in Markdown like this:</p>

<pre><code>1.  Bird
1.  McHale
1.  Parish
</code></pre>

<p>or even:</p>

<pre><code>3. Bird
1. McHale
8. Parish
</code></pre>

<p>you&rsquo;d get the exact same HTML output. The point is, if you want to,<br>
you can use ordinal numbers in your ordered Markdown lists, so that<br>
the numbers in your source match the numbers in your published HTML.<br>
But if you want to be lazy, you don&rsquo;t have to.</p>

<p>If you do use lazy list numbering, however, you should still start the<br>
list with the number 1. At some point in the future, Markdown may support<br>
starting ordered lists at an arbitrary number.</p>

<p>List markers typically start at the left margin, but may be indented by<br>
up to three spaces. List markers must be followed by one or more spaces<br>
or a tab.</p>

<p>To make lists look nice, you can wrap items with hanging indents:</p>

<pre><code>*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.
    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,
    viverra nec, fringilla in, laoreet vitae, risus.
*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.
    Suspendisse id sem consectetuer libero luctus adipiscing.
</code></pre>

<p>But if you want to be lazy, you don&rsquo;t have to:</p>

<pre><code>*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.
Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,
viverra nec, fringilla in, laoreet vitae, risus.
*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.
Suspendisse id sem consectetuer libero luctus adipiscing.
</code></pre>

<p>If list items are separated by blank lines, Markdown will wrap the<br>
items in <code>&lt;p&gt;</code> tags in the HTML output. For example, this input:</p>

<pre><code>*   Bird
*   Magic
</code></pre>

<p>will turn into:</p>

<pre><code>&lt;ul&gt;
&lt;li&gt;Bird&lt;/li&gt;
&lt;li&gt;Magic&lt;/li&gt;
&lt;/ul&gt;
</code></pre>

<p>But this:</p>

<pre><code>*   Bird

*   Magic
</code></pre>

<p>will turn into:</p>

<pre><code>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Bird&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Magic&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</code></pre>

<p>List items may consist of multiple paragraphs. Each subsequent<br>
paragraph in a list item must be indented by either 4 spaces<br>
or one tab:</p>

<pre><code>1.  This is a list item with two paragraphs. Lorem ipsum dolor
    sit amet, consectetuer adipiscing elit. Aliquam hendrerit
    mi posuere lectus.

    Vestibulum enim wisi, viverra nec, fringilla in, laoreet
    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum
    sit amet velit.

2.  Suspendisse id sem consectetuer libero luctus adipiscing.
</code></pre>

<p>It looks nice if you indent every line of the subsequent<br>
paragraphs, but here again, Markdown will allow you to be<br>
lazy:</p>

<pre><code>*   This is a list item with two paragraphs.

    This is the second paragraph in the list item. You&#39;re
only required to indent the first line. Lorem ipsum dolor
sit amet, consectetuer adipiscing elit.

*   Another item in the same list.
</code></pre>

<p>To put a blockquote within a list item, the blockquote&rsquo;s <code>&gt;</code><br>
delimiters need to be indented:</p>

<pre><code>*   A list item with a blockquote:

    &gt; This is a blockquote
    &gt; inside a list item.
</code></pre>

<p>To put a code block within a list item, the code block needs<br>
to be indented <em>twice</em> &ndash; 8 spaces or two tabs:</p>

<pre><code>*   A list item with a code block:

        &lt;code goes here&gt;
</code></pre>

<p>It&rsquo;s worth noting that it&rsquo;s possible to trigger an ordered list by<br>
accident, by writing something like this:</p>

<pre><code>1986. What a great season.
</code></pre>

<p>In other words, a <em>number-period-space</em> sequence at the beginning of a<br>
line. To avoid this, you can backslash-escape the period:</p>

<pre><code>1986\. What a great season.
</code></pre>

<h3>Code Blocks</h3>

<p><a id="precode"></a></p>

<p>Pre-formatted code blocks are used for writing about programming or<br>
markup source code. Rather than forming normal paragraphs, the lines<br>
of a code block are interpreted literally. Markdown wraps a code block<br>
in both <code>&lt;pre&gt;</code> and <code>&lt;code&gt;</code> tags.</p>

<p>To produce a code block in Markdown, simply indent every line of the<br>
block by at least 4 spaces or 1 tab. For example, given this input:</p>

<pre><code>This is a normal paragraph:

    This is a code block.
</code></pre>

<p>Markdown will generate:</p>

<pre><code>&lt;p&gt;This is a normal paragraph:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;This is a code block.
&lt;/code&gt;&lt;/pre&gt;
</code></pre>

<p>One level of indentation &ndash; 4 spaces or 1 tab &ndash; is removed from each<br>
line of the code block. For example, this:</p>

<pre><code>Here is an example of AppleScript:

    tell application &quot;Foo&quot;
        beep
    end tell
</code></pre>

<p>will turn into:</p>

<pre><code>&lt;p&gt;Here is an example of AppleScript:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tell application &quot;Foo&quot;
    beep
end tell
&lt;/code&gt;&lt;/pre&gt;
</code></pre>

<p>A code block continues until it reaches a line that is not indented<br>
(or the end of the article).</p>

<p>Within a code block, ampersands (<code>&amp;</code>) and angle brackets (<code>&lt;</code> and <code>&gt;</code>)<br>
are automatically converted into HTML entities. This makes it very<br>
easy to include example HTML source code using Markdown &ndash; just paste<br>
it and indent it, and Markdown will handle the hassle of encoding the<br>
ampersands and angle brackets. For example, this:</p>

<pre><code>    &lt;div class=&quot;footer&quot;&gt;
        &amp;copy; 2004 Foo Corporation
    &lt;/div&gt;
</code></pre>

<p>will turn into:</p>

<pre><code>&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&quot;footer&quot;&amp;gt;
    &amp;amp;copy; 2004 Foo Corporation
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</code></pre>

<p>Regular Markdown syntax is not processed within code blocks. E.g.,<br>
asterisks are just literal asterisks within a code block. This means<br>
it&rsquo;s also easy to use Markdown to write about Markdown&rsquo;s own syntax.</p>

<h3>Horizontal Rules</h3>

<p><a id="hr"></a></p>

<p>You can produce a horizontal rule tag (<code>&lt;hr /&gt;</code>) by placing three or<br>
more hyphens, asterisks, or underscores on a line by themselves. If you<br>
wish, you may use spaces between the hyphens or asterisks. Each of the<br>
following lines will produce a horizontal rule:</p>

<pre><code>* * *

***

*****

- - -

---------------------------------------
</code></pre>

<hr>

<h2>Span Elements</h2>

<p><a id="span"></a></p>

<h3>Links</h3>

<p><a id="link"></a></p>

<p>Markdown supports two style of links: <em>inline</em> and <em>reference</em>.</p>

<p>In both styles, the link text is delimited by [square brackets].</p>

<p>To create an inline link, use a set of regular parentheses immediately<br>
after the link text&rsquo;s closing square bracket. Inside the parentheses,<br>
put the URL where you want the link to point, along with an <em>optional</em><br>
title for the link, surrounded in quotes. For example:</p>

<pre><code>This is [an example](http://example.com/ &quot;Title&quot;) inline link.

[This link](http://example.net/) has no title attribute.
</code></pre>

<p>Will produce:</p>

<pre><code>&lt;p&gt;This is &lt;a href=&quot;http://example.com/&quot; title=&quot;Title&quot;&gt;
an example&lt;/a&gt; inline link.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://example.net/&quot;&gt;This link&lt;/a&gt; has no
title attribute.&lt;/p&gt;
</code></pre>

<p>If you&rsquo;re referring to a local resource on the same server, you can<br>
use relative paths:</p>

<pre><code>See my [About](/about/) page for details.   
</code></pre>

<p>Reference-style links use a second set of square brackets, inside<br>
which you place a label of your choosing to identify the link:</p>

<pre><code>This is [an example][id] reference-style link.
</code></pre>

<p>You can optionally use a space to separate the sets of brackets:</p>

<pre><code>This is [an example] [id] reference-style link.
</code></pre>

<p>Then, anywhere in the document, you define your link label like this,<br>
on a line by itself:</p>

<pre><code>[id]: http://example.com/  &quot;Optional Title Here&quot;
</code></pre>

<p>That is:</p>

<ul>
<li>  Square brackets containing the link identifier (optionally
indented from the left margin using up to three spaces);</li>
<li>  followed by a colon;</li>
<li>  followed by one or more spaces (or tabs);</li>
<li>  followed by the URL for the link;</li>
<li>  optionally followed by a title attribute for the link, enclosed
in double or single quotes, or enclosed in parentheses.</li>
</ul>

<p>The following three link definitions are equivalent:</p>

<pre><code>[foo]: http://example.com/  &quot;Optional Title Here&quot;
[foo]: http://example.com/  &#39;Optional Title Here&#39;
[foo]: http://example.com/  (Optional Title Here)
</code></pre>

<p><strong>Note:</strong> There is a known bug in Markdown.pl 1.0.1 which prevents<br>
single quotes from being used to delimit link titles.</p>

<p>The link URL may, optionally, be surrounded by angle brackets:</p>

<pre><code>[id]: &lt;http://example.com/&gt;  &quot;Optional Title Here&quot;
</code></pre>

<p>You can put the title attribute on the next line and use extra spaces<br>
or tabs for padding, which tends to look better with longer URLs:</p>

<pre><code>[id]: http://example.com/longish/path/to/resource/here
    &quot;Optional Title Here&quot;
</code></pre>

<p>Link definitions are only used for creating links during Markdown<br>
processing, and are stripped from your document in the HTML output.</p>

<p>Link definition names may consist of letters, numbers, spaces, and<br>
punctuation &ndash; but they are <em>not</em> case sensitive. E.g. these two<br>
links:</p>

<pre><code>[link text][a]
[link text][A]
</code></pre>

<p>are equivalent.</p>

<p>The <em>implicit link name</em> shortcut allows you to omit the name of the<br>
link, in which case the link text itself is used as the name.<br>
Just use an empty set of square brackets &ndash; e.g., to link the word<br>
<q>Google</q> to the google.com web site, you could simply write:</p>

<pre><code>[Google][]
</code></pre>

<p>And then define the link:</p>

<pre><code>[Google]: http://google.com/
</code></pre>

<p>Because link names may contain spaces, this shortcut even works for<br>
multiple words in the link text:</p>

<pre><code>Visit [Daring Fireball][] for more information.
</code></pre>

<p>And then define the link:</p>

<pre><code>[Daring Fireball]: http://daringfireball.net/
</code></pre>

<p>Link definitions can be placed anywhere in your Markdown document. I<br>
tend to put them immediately after each paragraph in which they&rsquo;re<br>
used, but if you want, you can put them all at the end of your<br>
document, sort of like footnotes.</p>

<p>Here&rsquo;s an example of reference links in action:</p>

<pre><code>I get 10 times more traffic from [Google] [1] than from
[Yahoo] [2] or [MSN] [3].

  [1]: http://google.com/        &quot;Google&quot;
  [2]: http://search.yahoo.com/  &quot;Yahoo Search&quot;
  [3]: http://search.msn.com/    &quot;MSN Search&quot;
</code></pre>

<p>Using the implicit link name shortcut, you could instead write:</p>

<pre><code>I get 10 times more traffic from [Google][] than from
[Yahoo][] or [MSN][].

  [google]: http://google.com/        &quot;Google&quot;
  [yahoo]:  http://search.yahoo.com/  &quot;Yahoo Search&quot;
  [msn]:    http://search.msn.com/    &quot;MSN Search&quot;
</code></pre>

<p>Both of the above examples will produce the following HTML output:</p>

<pre><code>&lt;p&gt;I get 10 times more traffic from &lt;a href=&quot;http://google.com/&quot;
title=&quot;Google&quot;&gt;Google&lt;/a&gt; than from
&lt;a href=&quot;http://search.yahoo.com/&quot; title=&quot;Yahoo Search&quot;&gt;Yahoo&lt;/a&gt;
or &lt;a href=&quot;http://search.msn.com/&quot; title=&quot;MSN Search&quot;&gt;MSN&lt;/a&gt;.&lt;/p&gt;
</code></pre>

<p>For comparison, here is the same paragraph written using<br>
Markdown&rsquo;s inline link style:</p>

<pre><code>I get 10 times more traffic from [Google](http://google.com/ &quot;Google&quot;)
than from [Yahoo](http://search.yahoo.com/ &quot;Yahoo Search&quot;) or
[MSN](http://search.msn.com/ &quot;MSN Search&quot;).
</code></pre>

<p>The point of reference-style links is not that they&rsquo;re easier to<br>
write. The point is that with reference-style links, your document<br>
source is vastly more readable. Compare the above examples: using<br>
reference-style links, the paragraph itself is only 81 characters<br>
long; with inline-style links, it&rsquo;s 176 characters; and as raw HTML,<br>
it&rsquo;s 234 characters. In the raw HTML, there&rsquo;s more markup than there<br>
is text.</p>

<p>With Markdown&rsquo;s reference-style links, a source document much more<br>
closely resembles the final output, as rendered in a browser. By<br>
allowing you to move the markup-related metadata out of the paragraph,<br>
you can add links without interrupting the narrative flow of your<br>
prose.</p>

<h3>Emphasis</h3>

<p><a id="em"></a></p>

<p>Markdown treats asterisks (<code>*</code>) and underscores (<code>_</code>) as indicators of<br>
emphasis. Text wrapped with one <code>*</code> or <code>_</code> will be wrapped with an<br>
HTML <code>&lt;em&gt;</code> tag; double <code>*</code>&rsquo;s or <code>_</code>&rsquo;s will be wrapped with an HTML<br>
<code>&lt;strong&gt;</code> tag. E.g., this input:</p>

<pre><code>*single asterisks*

_single underscores_

**double asterisks**

__double underscores__
</code></pre>

<p>will produce:</p>

<pre><code>&lt;em&gt;single asterisks&lt;/em&gt;

&lt;em&gt;single underscores&lt;/em&gt;

&lt;strong&gt;double asterisks&lt;/strong&gt;

&lt;strong&gt;double underscores&lt;/strong&gt;
</code></pre>

<p>You can use whichever style you prefer; the lone restriction is that<br>
the same character must be used to open and close an emphasis span.</p>

<p>Emphasis can be used in the middle of a word:</p>

<pre><code>un*frigging*believable
</code></pre>

<p>But if you surround an <code>*</code> or <code>_</code> with spaces, it&rsquo;ll be treated as a<br>
literal asterisk or underscore.</p>

<p>To produce a literal asterisk or underscore at a position where it<br>
would otherwise be used as an emphasis delimiter, you can backslash<br>
escape it:</p>

<pre><code>\*this text is surrounded by literal asterisks\*
</code></pre>

<h3>Code</h3>

<p><a id="code"></a></p>

<p>To indicate a span of code, wrap it with backtick quotes (<code>`</code>).<br>
Unlike a pre-formatted code block, a code span indicates code within a<br>
normal paragraph. For example:</p>

<pre><code>Use the `printf()` function.
</code></pre>

<p>will produce:</p>

<pre><code>&lt;p&gt;Use the &lt;code&gt;printf()&lt;/code&gt; function.&lt;/p&gt;
</code></pre>

<p>To include a literal backtick character within a code span, you can use<br>
multiple backticks as the opening and closing delimiters:</p>

<pre><code>``There is a literal backtick (`) here.``
</code></pre>

<p>which will produce this:</p>

<pre><code>&lt;p&gt;&lt;code&gt;There is a literal backtick (`) here.&lt;/code&gt;&lt;/p&gt;
</code></pre>

<p>The backtick delimiters surrounding a code span may include spaces &ndash;<br>
one after the opening, one before the closing. This allows you to place<br>
literal backtick characters at the beginning or end of a code span:</p>

<pre><code>A single backtick in a code span: `` ` ``

A backtick-delimited string in a code span: `` `foo` ``
</code></pre>

<p>will produce:</p>

<pre><code>&lt;p&gt;A single backtick in a code span: &lt;code&gt;`&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;A backtick-delimited string in a code span: &lt;code&gt;`foo`&lt;/code&gt;&lt;/p&gt;
</code></pre>

<p>With a code span, ampersands and angle brackets are encoded as HTML<br>
entities automatically, which makes it easy to include example HTML<br>
tags. Markdown will turn this:</p>

<pre><code>Please don&#39;t use any `&lt;blink&gt;` tags.
</code></pre>

<p>into:</p>

<pre><code>&lt;p&gt;Please don&#39;t use any &lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;
</code></pre>

<p>You can write this:</p>

<pre><code>`&amp;#8212;` is the decimal-encoded equivalent of `&amp;mdash;`.
</code></pre>

<p>to produce:</p>

<pre><code>&lt;p&gt;&lt;code&gt;&amp;amp;#8212;&lt;/code&gt; is the decimal-encoded
equivalent of &lt;code&gt;&amp;amp;mdash;&lt;/code&gt;.&lt;/p&gt;
</code></pre>

<h3>Images</h3>

<p><a id="img"></a></p>

<p>Admittedly, it&rsquo;s fairly difficult to devise a <q>natural</q> syntax for<br>
placing images into a plain text document format.</p>

<p>Markdown uses an image syntax that is intended to resemble the syntax<br>
for links, allowing for two styles: <em>inline</em> and <em>reference</em>.</p>

<p>Inline image syntax looks like this:</p>

<pre><code>![Alt text](/path/to/img.jpg)

![Alt text](/path/to/img.jpg &quot;Optional title&quot;)
</code></pre>

<p>That is:</p>

<ul>
<li>  An exclamation mark: <code>!</code>;</li>
<li>  followed by a set of square brackets, containing the <code>alt</code>
attribute text for the image;</li>
<li>  followed by a set of parentheses, containing the URL or path to
the image, and an optional <code>title</code> attribute enclosed in double
or single quotes.</li>
</ul>

<p>Reference-style image syntax looks like this:</p>

<pre><code>![Alt text][id]
</code></pre>

<p>Where <q>id</q> is the name of a defined image reference. Image references<br>
are defined using syntax identical to link references:</p>

<pre><code>[id]: url/to/image  &quot;Optional title attribute&quot;
</code></pre>

<p>As of this writing, Markdown has no syntax for specifying the<br>
dimensions of an image; if this is important to you, you can simply<br>
use regular HTML <code>&lt;img&gt;</code> tags.</p>

<hr>

<h2>Miscellaneous</h2>

<p><a id="misc"></a></p>

<h3>Automatic Links</h3>

<p><a id="autolink"></a></p>

<p>Markdown supports a shortcut style for creating <q>automatic</q> links for URLs and email addresses: simply surround the URL or email address with angle brackets. What this means is that if you want to show the actual text of a URL or email address, and also have it be a clickable link, you can do this:</p>

<pre><code>&lt;http://example.com/&gt;
</code></pre>

<p>Markdown will turn this into:</p>

<pre><code>&lt;a href=&quot;http://example.com/&quot;&gt;http://example.com/&lt;/a&gt;
</code></pre>

<p>Automatic links for email addresses work similarly, except that<br>
Markdown will also perform a bit of randomized decimal and hex<br>
entity-encoding to help obscure your address from address-harvesting<br>
spambots. For example, Markdown will turn this:</p>

<pre><code>&lt;address@example.com&gt;
</code></pre>

<p>into something like this:</p>

<pre><code>&lt;a href=&quot;&amp;#x6D;&amp;#x61;i&amp;#x6C;&amp;#x74;&amp;#x6F;:&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;
&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;
&amp;#109;&quot;&gt;&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;
&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;
</code></pre>

<p>which will render in a browser as a clickable link to <q>address@example.com</q>.</p>

<p>(This sort of entity-encoding trick will indeed fool many, if not<br>
most, address-harvesting bots, but it definitely won&rsquo;t fool all of<br>
them. It&rsquo;s better than nothing, but an address published in this way<br>
will probably eventually start receiving spam.)</p>

<h3>Backslash Escapes</h3>

<p><a id="backslash"></a></p>

<p>Markdown allows you to use backslash escapes to generate literal<br>
characters which would otherwise have special meaning in Markdown&rsquo;s<br>
formatting syntax. For example, if you wanted to surround a word<br>
with literal asterisks (instead of an HTML <code>&lt;em&gt;</code> tag), you can use<br>
backslashes before the asterisks, like this:</p>

<pre><code>\*literal asterisks\*
</code></pre>

<p>Markdown provides backslash escapes for the following characters:</p>

<pre><code>\   backslash
`   backtick
*   asterisk
_   underscore
{}  curly braces
[]  square brackets
()  parentheses
#   hash mark
+   plus sign
-   minus sign (hyphen)
.   dot
!   exclamation mark
</code></pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Markdown 語法官方說明繁體中文版]]></title>
    <link href="http://coderforart.com/markdown-syntax-guide-full-version-zh.html"/>
    <updated>2014-12-16T21:26:32GMT+08:00</updated>
    <id>http://coderforart.com/markdown-syntax-guide-full-version-zh.html</id>
    <content type="html"><![CDATA[
<h2>Markdown 文件</h2>

<p><img src="http://markdown.tw/images/208x128.png" alt="Markdown"></p>

<p><strong>NOTE:</strong> This is Traditional Chinese Edition Document of<br>
Markdown Syntax. If you are seeking for English Edition <br>
Document. Please refer to <a href="http://daringfireball.net/projects/markdown/syntax">Markdown: Syntax</a>.</p>

<span id="more"></span><!-- more -->

<h2>Markdown: Syntax</h2>

<ul>
<li><a href="#overview">概述</a>

<ul>
<li><a href="#philosophy">哲學</a></li>
<li><a href="#html">行內 HTML</a></li>
<li><a href="#autoescape">特殊字元自動轉換</a></li>
</ul></li>
<li><a href="#block">區塊元素</a>

<ul>
<li><a href="#p">段落和換行</a></li>
<li><a href="#header">標題</a></li>
<li><a href="#blockquote">區塊引言</a></li>
<li><a href="#list">清單</a></li>
<li><a href="#precode">程式碼區塊</a></li>
<li><a href="#hr">分隔線</a></li>
</ul></li>
<li><a href="#span">區段元素</a>

<ul>
<li><a href="#link">連結</a></li>
<li><a href="#em">強調</a></li>
<li><a href="#code">程式碼</a></li>
<li><a href="#img">圖片</a></li>
</ul></li>
<li><a href="#misc">其它</a>

<ul>
<li><a href="#backslash">跳脫字元</a></li>
<li><a href="#autolink">自動連結</a></li>
</ul></li>
<li><a href="#acknowledgement">感謝</a></li>
</ul>

<p><strong>注意：</strong>這份文件是用 Markdown 寫的，你可以<a href="https://github.com/othree/markdown-syntax-zhtw/blob/master/syntax.md">看看它的原始檔</a> 。</p>

<hr>

<h2>概述</h2>

<p><a id="overview"></a></p>

<h3>哲學</h3>

<p><a id="philosophy"></a></p>

<p>Markdown 的目標是實現「易讀易寫」。</p>

<p>不過最需要強調的便是它的可讀性。一份使用 Markdown 格式撰寫的文件應該可以直接以純文字發佈，並且看起來不會像是由許多標籤或是格式指令所構成。Markdown 語法受到一些既有 text-to-HTML 格式的影響，包括 <a href="http://docutils.sourceforge.net/mirror/setext.html">Setext</a>、<a href="http://www.aaronsw.com/2002/atx/">atx</a>、<a href="http://textism.com/tools/textile/">Textile</a>、<a href="http://docutils.sourceforge.net/rst.html">reStructuredText</a>、<a href="http://www.triptico.com/software/grutatxt.html">Grutatext</a> 和 <a href="http://ettext.taint.org/doc/">EtText</a>，然而最大靈感來源其實是純文字的電子郵件格式。</p>

<p>因此 Markdown 的語法全由標點符號所組成，並經過嚴謹慎選，是為了讓它們看起來就像所要表達的意思。像是在文字兩旁加上星號，看起來就像*強調*。Markdown 的清單看起來，嗯，就是清單。假如你有使用過電子郵件，區塊引言看起來就真的像是引用一段文字。</p>

<h3>行內 HTML</h3>

<p><a id="html"></a></p>

<p>Markdown 的語法有個主要的目的：用來作為一種網路內容的<em>寫作</em>用語言。</p>

<p>Markdown 不是要來取代 HTML，甚至也沒有要和它相似，它的語法種類不多，只和 HTML 的一部分有關係，重點<em>不是</em>要創造一種更容易寫作 HTML 文件的語法，我認為 HTML 已經很容易寫了，Markdown 的重點在於，它能讓文件更容易閱讀、編寫。HTML 是一種<em>發佈</em>的格式，Markdown 是一種<em>編寫</em>的格式，因此，Markdown 的格式語法只涵蓋純文字可以涵蓋的範圍。</p>

<p>不在 Markdown 涵蓋範圍之外的標籤，都可以直接在文件裡面用 HTML 撰寫。不需要額外標註這是 HTML 或是 Markdown；只要直接加標籤就可以了。</p>

<p>只有區塊元素──比如 <code>&lt;div&gt;</code>、<code>&lt;table&gt;</code>、<code>&lt;pre&gt;</code>、<code>&lt;p&gt;</code> 等標籤，必須在前後加上空行，以利與內容區隔。而且這些（元素）的開始與結尾標籤，不可以用 tab 或是空白來縮排。Markdown 的產生器有智慧型判斷，可以避免在區塊標籤前後加上沒有必要的 <code>&lt;p&gt;</code> 標籤。</p>

<p>舉例來說，在 Markdown 文件裡加上一段 HTML 表格：</p>

<pre><code>This is a regular paragraph.

&lt;table&gt;
    &lt;tr&gt;
        &lt;td&gt;Foo&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

This is another regular paragraph.
</code></pre>

<p>請注意，Markdown 語法在 HTML 區塊標籤中將不會被進行處理。例如，你無法在 HTML 區塊內使用 Markdown 形式的<code>*強調*</code>。</p>

<p>HTML 的區段標籤如 <code>&lt;span&gt;</code>、<code>&lt;cite&gt;</code>、<code>&lt;del&gt;</code> 則不受限制，可以在 Markdown 的段落、清單或是標題裡任意使用。依照個人習慣，甚至可以不用Markdown 格式，而採用 HTML 標籤來格式化。舉例說明：如果比較喜歡 HTML 的  <code>&lt;a&gt;</code> 或 <code>&lt;img&gt;</code> 標籤，可以直接使用這些標籤，而不用 Markdown 提供的連結或是影像標示語法。</p>

<p>HTML 區段標籤和區塊標籤不同，在區段標籤的範圍內， Markdown 的語法是有效的。</p>

<h3>特殊字元自動轉換</h3>

<p><a id="autoescape"></a></p>

<p>在 HTML 文件中，有兩個字元需要特殊處理： <code>&lt;</code> 和 <code>&amp;</code> 。 <code>&lt;</code> 符號用於起始標籤，<code>&amp;</code> 符號則用於標記 HTML 實體，如果你只是想要使用這些符號，你必須要使用實體的形式，像是 <code>&amp;lt;</code> 和 <code>&amp;amp;</code>。</p>

<p><code>&amp;</code> 符號其實很容易讓寫作網路文件的人感到困擾，如果你要打「AT&amp;T」 ，你必須要寫成「<code>AT&amp;amp;T</code>」 ，還得轉換網址內的 <code>&amp;</code> 符號，如果你要連結到：</p>

<pre><code>http://images.google.com/images?num=30&amp;q=larry+bird
</code></pre>

<p>你必須要把網址轉成：</p>

<pre><code>http://images.google.com/images?num=30&amp;amp;q=larry+bird
</code></pre>

<p>才能放到連結標籤的 <code>href</code> 屬性裡。不用說也知道這很容易忘記，這也可能是 HTML 標準檢查所檢查到的錯誤中，數量最多的。</p>

<p>Markdown 允許你直接使用這些符號，但是你要小心跳脫字元的使用，如果你是在HTML 實體中使用 <code>&amp;</code> 符號的話，它不會被轉換，而在其它情形下，它則會被轉換成 <code>&amp;amp;</code>。所以你如果要在文件中插入一個著作權的符號，你可以這樣寫：</p>

<pre><code>&amp;copy;
</code></pre>

<p>Markdown 將不會對這段文字做修改，但是如果你這樣寫：</p>

<pre><code>AT&amp;T
</code></pre>

<p>Markdown 就會將它轉為：</p>

<pre><code>AT&amp;amp;T
</code></pre>

<p>類似的狀況也會發生在 <code>&lt;</code> 符號上，因為 Markdown 支援 <a href="#html">行內 HTML</a> ，如果你是使用 <code>&lt;</code> 符號作為 HTML 標籤使用，那 Markdown 也不會對它做任何轉換，但是如果你是寫：</p>

<pre><code>4 &lt; 5
</code></pre>

<p>Markdown 將會把它轉換為：</p>

<pre><code>4 &amp;lt; 5
</code></pre>

<p>不過需要注意的是，code 範圍內，不論是行內還是區塊， <code>&lt;</code> 和 <code>&amp;</code> 兩個符號都<em>一定</em>會被轉換成 HTML 實體，這項特性讓你可以很容易地用 Markdown 寫 HTML code （和 HTML 相對而言， HTML 語法中，你要把所有的 <code>&lt;</code> 和 <code>&amp;</code> 都轉換為 HTML 實體，才能在 HTML 文件裡面寫出 HTML code。）</p>

<hr>

<h2>區塊元素</h2>

<p><a id="block"></a></p>

<h3>段落和換行</h3>

<p><a id="p"></a></p>

<p>一個段落是由一個以上相連接的行句組成，而一個以上的空行則會切分出不同的段落（空行的定義是顯示上看起來像是空行，便會被視為空行。比方說，若某一行只包含空白和 tab，則該行也會被視為空行），一般的段落不需要用空白或斷行縮排。</p>

<p>「一個以上相連接的行句組成」這句話其實暗示了 Markdown 允許段落內的強迫斷行，這個特性和其他大部分的 text-to-HTML 格式不一樣（包括 MovableType 的「Convert Line Breaks」選項），其它的格式會把每個斷行都轉成 <code>&lt;br /&gt;</code> 標籤。</p>

<p>如果你<em>真的</em>想要插入 <code>&lt;br /&gt;</code> 標籤的話，在行尾加上兩個以上的空白，然後按 enter。</p>

<p>是的，這確實需要花比較多功夫來插入 <code>&lt;br /&gt;</code> ，但是「每個換行都轉換為 <code>&lt;br /&gt;</code>」的方法在 Markdown 中並不適合， Markdown 中 email 式的 <a href="#blockquote">區塊引言</a> 和多段落的 <a href="#list">清單</a> 在使用換行來排版的時候，不但更好用，還更好閱讀。</p>

<h3>標題</h3>

<p><a id="header"></a></p>

<p>Markdown 支援兩種標題的語法，<a href="http://docutils.sourceforge.net/mirror/setext.html">Setext</a> 和 <a href="http://www.aaronsw.com/2002/atx/">atx</a> 形式。</p>

<p>Setext 形式是用底線的形式，利用 <code>=</code> （最高階標題）和 <code>-</code> （第二階標題），例如：</p>

<pre><code>This is an H1
=============

This is an H2
-------------
</code></pre>

<p>任何數量的 <code>=</code> 和 <code>-</code> 都可以有效果。</p>

<p>Atx 形式則是在行首插入 1 到 6 個 <code>#</code> ，對應到標題 1 到 6 階，例如：</p>

<pre><code># This is an H1

## This is an H2

###### This is an H6
</code></pre>

<p>你可以選擇性地「關閉」atx 樣式的標題，這純粹只是美觀用的，若是覺得這樣看起來比較舒適，你就可以在行尾加上 <code>#</code>，而行尾的 <code>#</code> 數量也不用和開頭一樣（行首的井字數量決定標題的階數）：</p>

<pre><code># This is an H1 #

## This is an H2 ##

### This is an H3 ######
</code></pre>

<h3>Blockquotes</h3>

<p><a id="blockquote"></a></p>

<p>Markdown 使用 email 形式的區塊引言，如果你很熟悉如何在 email 信件中引言，你就知道怎麼在 Markdown 文件中建立一個區塊引言，那會看起來像是你強迫斷行，然後在每行的最前面加上 <code>&gt;</code> ：</p>

<pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
&gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
&gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.
&gt; 
&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
&gt; id sem consectetuer libero luctus adipiscing.
</code></pre>

<p>Markdown 也允許你只在整個段落的第一行最前面加上 <code>&gt;</code> ：</p>

<pre><code>&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.

&gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
id sem consectetuer libero luctus adipiscing.
</code></pre>

<p>區塊引言可以有階層（例如：引言內的引言），只要根據層數加上不同數量的 <code>&gt;</code> ：</p>

<pre><code>&gt; This is the first level of quoting.
&gt;
&gt; &gt; This is nested blockquote.
&gt;
&gt; Back to the first level.
</code></pre>

<p>引言的區塊內也可以使用其他的 Markdown 語法，包括標題、清單、程式碼區塊等：</p>

<pre><code>&gt; ## This is a header.
&gt; 
&gt; 1.   This is the first list item.
&gt; 2.   This is the second list item.
&gt; 
&gt; Here&#39;s some example code:
&gt; 
&gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);
</code></pre>

<p>任何標準的文字編輯器都能簡單地建立 email 樣式的引言，例如 BBEdit ，你可以選取文字後然後從選單中選擇<em>增加引言階層</em>。</p>

<h3>清單</h3>

<p>Markdown 支援有序清單和無序清單。</p>

<p>無序清單使用星號、加號或是減號作為清單標記：</p>

<pre><code>*   Red
*   Green
*   Blue
</code></pre>

<p>等同於：</p>

<pre><code>+   Red
+   Green
+   Blue
</code></pre>

<p>也等同於：</p>

<pre><code>-   Red
-   Green
-   Blue
</code></pre>

<p>有序清單則使用數字接著一個英文句點：</p>

<pre><code>1.  Bird
2.  McHale
3.  Parish
</code></pre>

<p>很重要的一點是，你在清單標記上使用的數字並不會影響輸出的 HTML 結果，上面的清單所產生的 HTML 標記為：</p>

<pre><code>&lt;ol&gt;
&lt;li&gt;Bird&lt;/li&gt;
&lt;li&gt;McHale&lt;/li&gt;
&lt;li&gt;Parish&lt;/li&gt;
&lt;/ol&gt;
</code></pre>

<p>如果你的清單標記寫成：</p>

<pre><code>1.  Bird
1.  McHale
1.  Parish
</code></pre>

<p>或甚至是：</p>

<pre><code>3. Bird
1. McHale
8. Parish
</code></pre>

<p>你都會得到完全相同的 HTML 輸出。重點在於，你可以讓 Markdown 文件的清單數字和輸出的結果相同，或是你懶一點，你可以完全不用在意數字的正確性。</p>

<p>如果你使用懶惰的寫法，建議第一個項目最好還是從 1. 開始，因為 Markdown 未來可能會支援有序清單的 start 屬性。</p>

<p>清單項目標記通常是放在最左邊，但是其實也可以縮排，最多三個空白，項目標記後面則一定要接著至少一個空白或 tab。</p>

<p>要讓清單看起來更漂亮，你可以把內容用固定的縮排整理好：</p>

<pre><code>*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.
    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,
    viverra nec, fringilla in, laoreet vitae, risus.
*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.
    Suspendisse id sem consectetuer libero luctus adipiscing.
</code></pre>

<p>但是如果你很懶，那也不一定需要：</p>

<pre><code>*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.
Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,
viverra nec, fringilla in, laoreet vitae, risus.
*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.
Suspendisse id sem consectetuer libero luctus adipiscing.
</code></pre>

<p>如果清單項目間用空行分開， Markdown 會把項目的內容在輸出時用 <code>&lt;p&gt;</code> <br>
標籤包起來，舉例來說：</p>

<pre><code>*   Bird
*   Magic
</code></pre>

<p>會被轉換為：</p>

<pre><code>&lt;ul&gt;
&lt;li&gt;Bird&lt;/li&gt;
&lt;li&gt;Magic&lt;/li&gt;
&lt;/ul&gt;
</code></pre>

<p>但是這個：</p>

<pre><code>*   Bird

*   Magic
</code></pre>

<p>會被轉換為：</p>

<pre><code>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Bird&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Magic&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</code></pre>

<p>清單項目可以包含多個段落，每個項目下的段落都必須縮排 4 個空白或是一個 tab ：</p>

<pre><code>1.  This is a list item with two paragraphs. Lorem ipsum dolor
    sit amet, consectetuer adipiscing elit. Aliquam hendrerit
    mi posuere lectus.

    Vestibulum enim wisi, viverra nec, fringilla in, laoreet
    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum
    sit amet velit.

2.  Suspendisse id sem consectetuer libero luctus adipiscing.
</code></pre>

<p>如果你每行都有縮排，看起來會看好很多，當然，再次地，如果你很懶惰，Markdown 也允許：</p>

<pre><code>*   This is a list item with two paragraphs.

    This is the second paragraph in the list item. You&#39;re
only required to indent the first line. Lorem ipsum dolor
sit amet, consectetuer adipiscing elit.

*   Another item in the same list.
</code></pre>

<p>如果要在清單項目內放進引言，那 <code>&gt;</code> 就需要縮排：</p>

<pre><code>*   A list item with a blockquote:

    &gt; This is a blockquote
    &gt; inside a list item.
</code></pre>

<p>如果要放程式碼區塊的話，該區塊就需要縮排<em>兩次</em>，也就是 8 個空白或是兩個 tab：</p>

<pre><code>*   A list item with a code block:

        &lt;code goes here&gt;
</code></pre>

<p>當然，項目清單很可能會不小心產生，像是下面這樣的寫法：</p>

<pre><code>1986. What a great season.
</code></pre>

<p>換句話說，也就是在行首出現<em>數字-句點-空白</em>，要避免這樣的狀況，你可以在句點前面加上反斜線。</p>

<pre><code>1986\. What a great season.
</code></pre>

<h3>程式碼區塊</h3>

<p><a id="precode"></a></p>

<p>和程式相關的寫作或是標籤語言原始碼通常會有已經排版好的程式碼區塊，通常這些區塊我們並不希望它以一般段落文件的方式去排版，而是照原來的樣子顯示，Markdown 會用 <code>&lt;pre&gt;</code> 和 <code>&lt;code&gt;</code> 標籤來把程式碼區塊包起來。</p>

<p>要在 Markdown 中建立程式碼區塊很簡單，只要簡單地縮排 4 個空白或是 1 個 tab 就可以，例如，下面的輸入：</p>

<pre><code>This is a normal paragraph:

    This is a code block.
</code></pre>

<p>Markdown 會轉換成：</p>

<pre><code>&lt;p&gt;This is a normal paragraph:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;This is a code block.
&lt;/code&gt;&lt;/pre&gt;
</code></pre>

<p>這個每行一階的縮排（4 個空白或是 1 個 tab），都會被移除，例如：</p>

<pre><code>Here is an example of AppleScript:

    tell application &quot;Foo&quot;
        beep
    end tell
</code></pre>

<p>會被轉換為：</p>

<pre><code>&lt;p&gt;Here is an example of AppleScript:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tell application &quot;Foo&quot;
    beep
end tell
&lt;/code&gt;&lt;/pre&gt;
</code></pre>

<p>一個程式碼區塊會一直持續到沒有縮排的那一行（或是文件結尾）。</p>

<p>在程式碼區塊裡面， <code>&amp;</code> 、 <code>&lt;</code> 和 <code>&gt;</code> 會自動轉成 HTML 實體，這樣的方式讓你非常容易使用 Markdown 插入範例用的 HTML 原始碼，只需要複製貼上，再加上縮排就可以了，剩下的 Markdown 都會幫你處理，例如：</p>

<pre><code>    &lt;div class=&quot;footer&quot;&gt;
        &amp;copy; 2004 Foo Corporation
    &lt;/div&gt;
</code></pre>

<p>會被轉換為：</p>

<pre><code>&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&quot;footer&quot;&amp;gt;
    &amp;amp;copy; 2004 Foo Corporation
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</code></pre>

<p>程式碼區塊中，一般的 Markdown 語法不會被轉換，像是星號便只是星號，這表示你可以很容易地以 Markdown 語法撰寫 Markdown 語法相關的文件。</p>

<h3>分隔線</h3>

<p><a id="hr"></a></p>

<p>你可以在一行中用三個或以上的星號、減號、底線來建立一個分隔線，行內不能有其他東西。你也可以在星號中間插入空白。下面每種寫法都可以建立分隔線：</p>

<pre><code>* * *

***

*****

- - -

---------------------------------------
</code></pre>

<hr>

<h2>區段元素</h2>

<p><a id="span"></a></p>

<h3>連結</h3>

<p><a id="link"></a></p>

<p>Markdown 支援兩種形式的連結語法： <em>行內</em>和<em>參考</em>兩種形式。</p>

<p>不管是哪一種，連結的文字都是用 [方括號] 來標記。</p>

<p>要建立一個行內形式的連結，只要在方塊括號後面馬上接著括號並插入網址連結即可，如果你還想要加上連結的 title 文字，只要在網址後面，用雙引號把 title 文字包起來即可，例如：</p>

<pre><code>This is [an example](http://example.com/ &quot;Title&quot;) inline link.

[This link](http://example.net/) has no title attribute.
</code></pre>

<p>會產生：</p>

<pre><code>&lt;p&gt;This is &lt;a href=&quot;http://example.com/&quot; title=&quot;Title&quot;&gt;
an example&lt;/a&gt; inline link.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://example.net/&quot;&gt;This link&lt;/a&gt; has no
title attribute.&lt;/p&gt;
</code></pre>

<p>如果你是要連結到同樣主機的資源，你可以使用相對路徑：</p>

<pre><code>See my [About](/about/) page for details.   
</code></pre>

<p>參考形式的連結使用另外一個方括號接在連結文字的括號後面，而在第二個方括號裡面要填入用以辨識連結的標籤：</p>

<pre><code>This is [an example][id] reference-style link.
</code></pre>

<p>你也可以選擇性地在兩個方括號中間加上空白：</p>

<pre><code>This is [an example] [id] reference-style link.
</code></pre>

<p>接著，在文件的任意處，你可以把這個標籤的連結內容定義出來：</p>

<pre><code>[id]: http://example.com/  &quot;Optional Title Here&quot;
</code></pre>

<p>連結定義的形式為：</p>

<ul>
<li>  方括號，裡面輸入連結的辨識用標籤</li>
<li>  接著一個冒號</li>
<li>  接著一個以上的空白或 tab</li>
<li>  接著連結的網址</li>
<li>  選擇性地接著 title 內容，可以用單引號、雙引號或是括弧包著</li>
</ul>

<p>下面這三種連結的定義都是相同：</p>

<pre><code>[foo]: http://example.com/  &quot;Optional Title Here&quot;
[foo]: http://example.com/  &#39;Optional Title Here&#39;
[foo]: http://example.com/  (Optional Title Here)
</code></pre>

<p><strong>請注意：</strong>有一個已知的問題是 Markdown.pl 1.0.1 會忽略單引號包起來的連結 title。</p>

<p>連結網址也可以用方括號包起來：</p>

<pre><code>[id]: &lt;http://example.com/&gt;  &quot;Optional Title Here&quot;
</code></pre>

<p>你也可以把 title 屬性放到下一行，也可以加一些縮排，網址太長的話，這樣會比較好看：</p>

<pre><code>[id]: http://example.com/longish/path/to/resource/here
    &quot;Optional Title Here&quot;
</code></pre>

<p>網址定義只有在產生連結的時候用到，並不會直接出現在文件之中。</p>

<p>連結辨識標籤可以有字母、數字、空白和標點符號，但是並<em>不</em>區分大小寫，因此下面兩個連結是一樣的：</p>

<pre><code>[link text][a]
[link text][A]
</code></pre>

<p><em>預設的連結標籤</em>功能讓你可以省略指定連結標籤，這種情形下，連結標籤和連結文字會視為相同，要用預設連結標籤只要在連結文字後面加上一個空的方括號，如果你要讓 <q>Google</q> 連結到 google.com，你可以簡化成：</p>

<pre><code>[Google][]
</code></pre>

<p>然後定義連結內容：</p>

<pre><code>[Google]: http://google.com/
</code></pre>

<p>由於連結文字可能包含空白，所以這種簡化的標籤內也可以包含多個文字：</p>

<pre><code>Visit [Daring Fireball][] for more information.
</code></pre>

<p>然後接著定義連結：</p>

<pre><code>[Daring Fireball]: http://daringfireball.net/
</code></pre>

<p>連結的定義可以放在文件中的任何一個地方，我比較偏好直接放在連結出現段落的後面，你也可以把它放在文件最後面，就像是註解一樣。</p>

<p>下面是一個參考式連結的範例：</p>

<pre><code>I get 10 times more traffic from [Google] [1] than from
[Yahoo] [2] or [MSN] [3].

  [1]: http://google.com/        &quot;Google&quot;
  [2]: http://search.yahoo.com/  &quot;Yahoo Search&quot;
  [3]: http://search.msn.com/    &quot;MSN Search&quot;
</code></pre>

<p>如果改成用連結名稱的方式寫：</p>

<pre><code>I get 10 times more traffic from [Google][] than from
[Yahoo][] or [MSN][].

  [google]: http://google.com/        &quot;Google&quot;
  [yahoo]:  http://search.yahoo.com/  &quot;Yahoo Search&quot;
  [msn]:    http://search.msn.com/    &quot;MSN Search&quot;
</code></pre>

<p>上面兩種寫法都會產生下面的 HTML。</p>

<pre><code>&lt;p&gt;I get 10 times more traffic from &lt;a href=&quot;http://google.com/&quot;
title=&quot;Google&quot;&gt;Google&lt;/a&gt; than from
&lt;a href=&quot;http://search.yahoo.com/&quot; title=&quot;Yahoo Search&quot;&gt;Yahoo&lt;/a&gt;
or &lt;a href=&quot;http://search.msn.com/&quot; title=&quot;MSN Search&quot;&gt;MSN&lt;/a&gt;.&lt;/p&gt;
</code></pre>

<p>下面是用行內形式寫的同樣一段內容的 Markdown 文件，提供作為比較之用：</p>

<pre><code>I get 10 times more traffic from [Google](http://google.com/ &quot;Google&quot;)
than from [Yahoo](http://search.yahoo.com/ &quot;Yahoo Search&quot;) or
[MSN](http://search.msn.com/ &quot;MSN Search&quot;).
</code></pre>

<p>參考式的連結其實重點不在於它比較好寫，而是它比較好讀，比較一下上面的範例，使用參考式的文章本身只有 81 個字元，但是用行內形式的連結卻會增加到 176 個字元，如果是用純 HTML 格式來寫，會有 234 個字元，在 HTML 格式中，標籤比文字還要多。</p>

<p>使用 Markdown 的參考式連結，可以讓文件更像是瀏覽器最後產生的結果，讓你可以把一些標記相關的資訊移到段落文字之外，你就可以增加連結而不讓文章的閱讀感覺被打斷。</p>

<h3>強調</h3>

<p><a id="em"></a></p>

<p>Markdown 使用星號（<code>*</code>）和底線（<code>_</code>）作為標記強調字詞的符號，被 <code>*</code> 或 <code>_</code> 包圍的字詞會被轉成用 <code>&lt;em&gt;</code> 標籤包圍，用兩個 <code>*</code> 或 <code>_</code> 包起來的話，則會被轉成 <code>&lt;strong&gt;</code>，例如：</p>

<pre><code>*single asterisks*

_single underscores_

**double asterisks**

__double underscores__
</code></pre>

<p>會轉成：</p>

<pre><code>&lt;em&gt;single asterisks&lt;/em&gt;

&lt;em&gt;single underscores&lt;/em&gt;

&lt;strong&gt;double asterisks&lt;/strong&gt;

&lt;strong&gt;double underscores&lt;/strong&gt;
</code></pre>

<p>你可以隨便用你喜歡的樣式，唯一的限制是，你用什麼符號開啟標籤，就要用什麼符號結束。</p>

<p>強調也可以直接插在文字中間：</p>

<pre><code>un*frigging*believable
</code></pre>

<p>但是如果你的 <code>*</code> 和 <code>_</code> 兩邊都有空白的話，它們就只會被當成普通的符號。</p>

<p>如果要在文字前後直接插入普通的星號或底線，你可以用反斜線：</p>

<pre><code>\*this text is surrounded by literal asterisks\*
</code></pre>

<h3>程式碼</h3>

<p><a id="code"></a></p>

<p>如果要標記一小段行內程式碼，你可以用反引號把它包起來（<code>`</code>），例如：</p>

<pre><code>Use the `printf()` function.
</code></pre>

<p>會產生：</p>

<pre><code>&lt;p&gt;Use the &lt;code&gt;printf()&lt;/code&gt; function.&lt;/p&gt;
</code></pre>

<p>如果要在程式碼區段內插入反引號，你可以用多個反引號來開啟和結束程式碼區段：</p>

<pre><code>``There is a literal backtick (`) here.``
</code></pre>

<p>這段語法會產生：</p>

<pre><code>&lt;p&gt;&lt;code&gt;There is a literal backtick (`) here.&lt;/code&gt;&lt;/p&gt;
</code></pre>

<p>程式碼區段的起始和結束端都可以放入一個空白，起始端後面一個，結束端前面一個，這樣你就可以在區段的一開始就插入反引號：</p>

<pre><code>A single backtick in a code span: `` ` ``

A backtick-delimited string in a code span: `` `foo` ``
</code></pre>

<p>會產生：</p>

<pre><code>&lt;p&gt;A single backtick in a code span: &lt;code&gt;`&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;A backtick-delimited string in a code span: &lt;code&gt;`foo`&lt;/code&gt;&lt;/p&gt;
</code></pre>

<p>在程式碼區段內，<code>&amp;</code> 和方括號都會被轉成 HTML 實體，這樣會比較容易插入 HTML 原始碼，Markdown 會把下面這段：</p>

<pre><code>Please don&#39;t use any `&lt;blink&gt;` tags.
</code></pre>

<p>轉為：</p>

<pre><code>&lt;p&gt;Please don&#39;t use any &lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;
</code></pre>

<p>你也可以這樣寫：</p>

<pre><code>`&amp;#8212;` is the decimal-encoded equivalent of `&amp;mdash;`.
</code></pre>

<p>以產生：</p>

<pre><code>&lt;p&gt;&lt;code&gt;&amp;amp;#8212;&lt;/code&gt; is the decimal-encoded
equivalent of &lt;code&gt;&amp;amp;mdash;&lt;/code&gt;.&lt;/p&gt;
</code></pre>

<h3>圖片</h3>

<p><a id="img"></a></p>

<p>很明顯地，要在純文字應用中設計一個 「自然」的語法來插入圖片是有一定難度的。</p>

<p>Markdown 使用一種和連結很相似的語法來標記圖片，同樣也允許兩種樣式： <em>行內</em>和<em>參考</em>。</p>

<p>行內圖片的語法看起來像是：</p>

<pre><code>![Alt text](/path/to/img.jpg)

![Alt text](/path/to/img.jpg &quot;Optional title&quot;)
</code></pre>

<p>詳細敘述如下：</p>

<ul>
<li>  一個驚嘆號 <code>!</code></li>
<li>  接著一個方括號，裡面放上圖片的替代文字</li>
<li>  接著一個普通括號，裡面放上圖片的網址，最後還可以用引號包住並加上
選擇性的 &lsquo;title&rsquo; 文字。</li>
</ul>

<p>參考式的圖片語法則長得像這樣：</p>

<pre><code>![Alt text][id]
</code></pre>

<p>「id」是圖片參考的名稱，圖片參考的定義方式則和連結參考一樣：</p>

<pre><code>[id]: url/to/image  &quot;Optional title attribute&quot;
</code></pre>

<p>到目前為止， Markdown 還沒有辦法指定圖片的寬高，如果你需要的話，你可以使用普通的 <code>&lt;img&gt;</code> 標籤。</p>

<hr>

<h2>其它</h2>

<p><a id="misc"></a></p>

<h3>自動連結</h3>

<p><a id="autolink"></a></p>

<p>Markdown 支援比較簡短的自動連結形式來處理網址和電子郵件信箱，只要是用方括號包起來， Markdown 就會自動把它轉成連結，連結的文字就和連結位置一樣，例如：</p>

<pre><code>&lt;http://example.com/&gt;
</code></pre>

<p>Markdown 會轉為：</p>

<pre><code>&lt;a href=&quot;http://example.com/&quot;&gt;http://example.com/&lt;/a&gt;
</code></pre>

<p>自動的郵件連結也很類似，只是 Markdown 會先做一個編碼轉換的過程，把文字字元轉成 16 進位碼的 HTML 實體，這樣的格式可以混淆一些不好的信箱地址收集機器人，例如：</p>

<pre><code>&lt;address@example.com&gt;
</code></pre>

<p>Markdown 會轉成：</p>

<pre><code>&lt;a href=&quot;&amp;#x6D;&amp;#x61;i&amp;#x6C;&amp;#x74;&amp;#x6F;:&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;
&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;
&amp;#109;&quot;&gt;&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;
&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;&amp;#109;&lt;/a&gt;
</code></pre>

<p>在瀏覽器裡面，這段字串會變成一個可以點擊的「<a href="mailto:address@example.com">address@example.com</a>」連結。</p>

<p>（這種作法雖然可以混淆不少的機器人，但並無法全部擋下來，不過這樣也比什麼都不做好些。無論如何，公開你的信箱終究會引來廣告信件的。）</p>

<h3>跳脫字元</h3>

<p><a id="backslash"></a></p>

<p>Markdown 可以利用反斜線來插入一些在語法中有其它意義的符號，例如：如果你想要用星號加在文字旁邊的方式來做出強調效果（但不用 <code>&lt;em&gt;</code> 標籤），你可以在星號的前面加上反斜線：</p>

<pre><code>\*literal asterisks\*
</code></pre>

<p>Markdown 支援在下面這些符號前面加上反斜線來幫助插入普通的符號：</p>

<pre><code>\   反斜線
`   反引號
*   星號
_   底線
{}  大括號
[]  方括號
()  括號
#   井字號
+   加號
-   減號
.   英文句點
!   驚嘆號
</code></pre>

<h2>感謝</h2>

<p><a id="acknowledgement"></a></p>

<p>感謝 <a href="https://twitter.com/#!/leafy7382">leafy7382</a> 協助翻譯，<a href="http://iamhlb.com/">hlb</a>、<a href="http://twitter.com/randylien">Randylien</a> 幫忙潤稿，<a href="https://twitter.com/#!/ethantw">ethantw</a> 的<a href="http://ethantw.net/projects/han/">漢字標準格式・CSS Reset</a>， <a href="http://kidwm.net/">WM</a> 回報文字錯誤。</p>

]]></content>
  </entry>
  
</feed>
